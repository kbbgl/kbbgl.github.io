"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[15001],{76159:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var t=s(74848),o=s(28453);const a={},i=void 0,r={id:"software/containerization/k8s/Volumes and Data/Mounting_Secrets_as_Volumes",title:"Mounting_Secrets_as_Volumes",description:"Mounting Secrets as Volumes",source:"@site/docs/software/containerization/k8s/Volumes and Data/Mounting_Secrets_as_Volumes.md",sourceDirName:"software/containerization/k8s/Volumes and Data",slug:"/software/containerization/k8s/Volumes and Data/Mounting_Secrets_as_Volumes",permalink:"/docs/software/containerization/k8s/Volumes and Data/Mounting_Secrets_as_Volumes",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dynamic_Provisioning",permalink:"/docs/software/containerization/k8s/Volumes and Data/Dynamic_Provisioning"},next:{title:"Persistent_Volumes_and_Claims",permalink:"/docs/software/containerization/k8s/Volumes and Data/Persistent_Volumes_and_Claims"}},c={},l=[{value:"Mounting <code>Secret</code>s as <code>Volume</code>s",id:"mounting-secrets-as-volumes",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:"mounting-secrets-as-volumes",children:["Mounting ",(0,t.jsx)(n.code,{children:"Secret"}),"s as ",(0,t.jsx)(n.code,{children:"Volume"}),"s"]}),"\n",(0,t.jsx)(n.p,{children:"You can also mount secrets as files using a volume definition in a pod manifest. The mount path will contain a file whose name will be the key of the secret created with the kubectl create secret step earlier."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'...\nspec:\n    containers:\n    - image: busybox\n      command:\n        - sleep\n        - "3600"\n      volumeMounts:\n      - mountPath: /mysqlpassword\n        name: mysql\n      name: busy\n    volumes:\n    - name: mysql\n        secret:\n            secretName: mysql\n'})}),"\n",(0,t.jsx)(n.p,{children:"Once the pod is running, you can verify that the secret is indeed accessible in the container:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl exec -ti busybox -- cat /mysqlpassword/password\nLFTr@1n\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var t=s(96540);const o={},a=t.createContext(o);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);