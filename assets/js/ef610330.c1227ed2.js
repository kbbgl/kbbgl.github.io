"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[6955],{43669:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var n=s(74848),r=s(28453);const i={slug:"redis-cheatsheet",title:"Redis Cheatsheet",authors:["kgal-akl"],tags:["redis","cache","infrastructure","services","cheatsheet"]},l=void 0,a={id:"software/infrastructure/redis/README",title:"Redis Cheatsheet",description:"List All Keys",source:"@site/docs/software/infrastructure/redis/README.md",sourceDirName:"software/infrastructure/redis",slug:"/software/infrastructure/redis/redis-cheatsheet",permalink:"/docs/software/infrastructure/redis/redis-cheatsheet",draft:!1,unlisted:!1,tags:[{inline:!0,label:"redis",permalink:"/docs/tags/redis"},{inline:!0,label:"cache",permalink:"/docs/tags/cache"},{inline:!0,label:"infrastructure",permalink:"/docs/tags/infrastructure"},{inline:!0,label:"services",permalink:"/docs/tags/services"},{inline:!0,label:"cheatsheet",permalink:"/docs/tags/cheatsheet"}],version:"current",frontMatter:{slug:"redis-cheatsheet",title:"Redis Cheatsheet",authors:["kgal-akl"],tags:["redis","cache","infrastructure","services","cheatsheet"]},sidebar:"docsSidebar",previous:{title:"rabbitmqctl Cheat Sheet",permalink:"/docs/software/infrastructure/rabbitmq/rabbitmq-ctl"},next:{title:"How To Use Local Terraform Provider",permalink:"/docs/software/infrastructure/terraform/use-local-terraform-provider"}},d={},c=[{value:"List All Keys",id:"list-all-keys",level:2},{value:"Get Key Details",id:"get-key-details",level:2},{value:"Get Value of String-type Key",id:"get-value-of-string-type-key",level:3},{value:"Get Value of List-type Key",id:"get-value-of-list-type-key",level:3},{value:"Get Value of Set-type Key",id:"get-value-of-set-type-key",level:3},{value:"Get Value of Sorted Set-type Key",id:"get-value-of-sorted-set-type-key",level:3},{value:"Get Value of Hash-type Key",id:"get-value-of-hash-type-key",level:3},{value:"Database Info",id:"database-info",level:2},{value:"Switch Databases",id:"switch-databases",level:2},{value:"Delete Keys",id:"delete-keys",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Set Log Level",id:"set-log-level",level:3}];function o(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"list-all-keys",children:"List All Keys"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"KEYS *\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"SCAN 0\n\nSCAN 0 MATCH user:* COUNT 100\n"})}),"\n",(0,n.jsx)(t.h2,{id:"get-key-details",children:"Get Key Details"}),"\n",(0,n.jsx)(t.p,{children:"Get the key type:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"TYPE <key>\n"})}),"\n",(0,n.jsx)(t.p,{children:"Then retrieve it's value based on its type."}),"\n",(0,n.jsx)(t.h3,{id:"get-value-of-string-type-key",children:"Get Value of String-type Key"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"GET <key>\n"})}),"\n",(0,n.jsx)(t.h3,{id:"get-value-of-list-type-key",children:"Get Value of List-type Key"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"LRANGE <key> 0 -1\n"})}),"\n",(0,n.jsx)(t.h3,{id:"get-value-of-set-type-key",children:"Get Value of Set-type Key"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"SMEMBERS <key>\n"})}),"\n",(0,n.jsx)(t.h3,{id:"get-value-of-sorted-set-type-key",children:"Get Value of Sorted Set-type Key"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"ZRANGE <key> 0 -1 WITHSCORES\n"})}),"\n",(0,n.jsx)(t.h3,{id:"get-value-of-hash-type-key",children:"Get Value of Hash-type Key"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"HGETALL <key>\n"})}),"\n",(0,n.jsx)(t.h2,{id:"database-info",children:"Database Info"}),"\n",(0,n.jsx)(t.p,{children:"Check the number of keys in each Redis database:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"INFO keyspace\n\n# Keyspace\ndb0:keys=450,expires=12,avg_ttl=500000\ndb1:keys=200,expires=5,avg_ttl=300000\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"db0"})," has 450 keys, ",(0,n.jsx)(t.code,{children:"db1"})," has 200 keys.\nSome keys have expiration times."]}),"\n",(0,n.jsx)(t.h2,{id:"switch-databases",children:"Switch Databases"}),"\n",(0,n.jsxs)(t.p,{children:["If Redis has multiple databases (default: ",(0,n.jsx)(t.code,{children:"db0"}),"), to work with ",(0,n.jsx)(t.code,{children:"db0"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"SELECT 0\n"})}),"\n",(0,n.jsxs)(t.p,{children:["To switch to ",(0,n.jsx)(t.code,{children:"db1"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"SELECT 1\n"})}),"\n",(0,n.jsx)(t.h2,{id:"delete-keys",children:"Delete Keys"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"DEL <key>\n"})}),"\n",(0,n.jsx)(t.p,{children:"To delete all keys in the currently-selected database:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"FLUSHDB\n"})}),"\n",(0,n.jsx)(t.p,{children:"To delete all keys in Redis:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"FLUSHALL\n"})}),"\n",(0,n.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsx)(t.h3,{id:"set-log-level",children:"Set Log Level"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"CONFIG SET loglevel debug\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>a});var n=s(96540);const r={},i=n.createContext(r);function l(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);