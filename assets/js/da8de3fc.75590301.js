"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[31727],{48e3:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var r=n(74848),o=n(28453);const s={},a="Fast-Forward Merge",i={id:"software/version_control_systems/git/Merging/fast-forward",title:"Fast-Forward Merge",description:"This type of merge is possible when no commits are pushed in the main branch and all commits are pushed to the feature branch.",source:"@site/docs/software/version_control_systems/git/Merging/fast-forward.md",sourceDirName:"software/version_control_systems/git/Merging",slug:"/software/version_control_systems/git/Merging/fast-forward",permalink:"/docs/software/version_control_systems/git/Merging/fast-forward",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"3-Way Merge",permalink:"/docs/software/version_control_systems/git/Merging/way-merge"},next:{title:"Merge Conflict",permalink:"/docs/software/version_control_systems/git/Merging/merge-conflict"}},c={},d=[];function m(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"fast-forward-merge",children:"Fast-Forward Merge"})}),"\n",(0,r.jsx)(t.p,{children:"This type of merge is possible when no commits are pushed in the main branch and all commits are pushed to the feature branch."}),"\n",(0,r.jsxs)(t.p,{children:["When performing a fast-forward merge, it takes the ",(0,r.jsx)(t.code,{children:"master"})," branch pointer (",(0,r.jsx)(t.code,{children:"HEAD"}),") to the last commit in the feature branch:"]}),"\n",(0,r.jsx)(t.p,{children:"After merging the feature branch, we can delete it if we have no intention of using it again:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"git branch -d $BRANCH_NAME\n"})}),"\n",(0,r.jsx)(t.p,{children:"To merge:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'git branch feature_branch\n\ngit checkout feature_branch\necho "second file" >> second_file.txt\n\ngit add .\ngit commit -m "feature branch new commit"\n\ngit checkout master\n\ngit merge feature_branch\n\n# d7bd8e8 is the master branch commit hash\n# 7d0c2b0 is the feature branch commit hash\nUpdating d7bd8e8..7d0c2b0\nFast-forward\nsecond_file.txt | 1 +\n1 file changed, 1 insertion(+)\ncreate mode 100644 second_file.txt\n\n\ngit log\n\ncommit 7d0c2b0529988a77f1418db87bf2810a3e11428d (HEAD -> master, temp)\n\nAuthor: Kobbi Gal <kgal@m-c02fd2yumd6r.paloaltonetworks.local>\nDate:   Tue Oct 12 19:01:55 2021 +0300\n\nsecond commit\n\ncommit d7bd8e8519e2c5e23459bb981030a1ebf5f7d2a4\nAuthor: Kobbi Gal <kgal@m-c02fd2yumd6r.paloaltonetworks.local>\nDate:   Tue Oct 12 19:00:34 2021 +0300\n\nfirst commit\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);