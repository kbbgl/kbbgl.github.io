"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[58539],{59776:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var a=s(74848),l=s(28453);const i={},c="LVM (Logical Volume Management)",r={id:"os/UNIX/Disk/lvm",title:"LVM (Logical Volume Management)",description:"Virtual devices may be easier to manage than physical devices, and can  have  capabilities  beyond  what  the  physical devices provide themselves.  A Volume Group (VG) is a collection of one or more physical devices, each called a Physical Volume (PV).  A Logical Volume (LV) is a virtual block device that can be used by the system or applications.   Each  block  of  data in an LV is stored on one or more PV in the VG, according to algorithms implemented by Device Mapper (DM) in the kernel.",source:"@site/docs/os/UNIX/Disk/lvm.md",sourceDirName:"os/UNIX/Disk",slug:"/os/UNIX/Disk/lvm",permalink:"/docs/os/UNIX/Disk/lvm",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Disk Encryption",permalink:"/docs/os/UNIX/Disk/encryption"},next:{title:"Disk Partitioning",permalink:"/docs/os/UNIX/Disk/partitioning"}},d={},o=[{value:"Creating LVs",id:"creating-lvs",level:2},{value:"Resizing LVs",id:"resizing-lvs",level:3},{value:"LVM Snapshots",id:"lvm-snapshots",level:3}];function t(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"lvm-logical-volume-management",children:"LVM (Logical Volume Management)"})}),"\n",(0,a.jsxs)(n.p,{children:["Virtual devices may be easier to manage than physical devices, and can  have  capabilities  beyond  what  the  physical devices provide themselves.  A Volume Group (",(0,a.jsx)(n.strong,{children:"VG"}),") is a collection of one or more physical devices, each called a Physical Volume (",(0,a.jsx)(n.strong,{children:"PV"}),").  A Logical Volume (",(0,a.jsx)(n.strong,{children:"LV"}),") is a virtual block device that can be used by the system or applications.   Each  block  of  data in an LV is stored on one or more PV in the VG, according to algorithms implemented by Device Mapper (",(0,a.jsx)(n.strong,{children:"DM"}),") in the kernel."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://i2.wp.com/manjaro.site/wp-content/uploads/2017/08/lvm-on-ubuntu.png?resize=678%2C381&ssl=1",alt:"lvm"})}),"\n",(0,a.jsx)(n.p,{children:"To manage VGs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vgdisplay\nvgcreate\nvgextend\nvgreduce\nvgs # list vgs\n"})}),"\n",(0,a.jsx)(n.p,{children:"Manage PVs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pvcreate\npvdisplay\npvmove\npvremove\npvs # see all physical volumes\n"})}),"\n",(0,a.jsx)(n.p,{children:"All tools to manage LVs in:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ls -lF /sbin/lv*\nlvcreate\nlvremove\nlvs # see all lvs\n"})}),"\n",(0,a.jsx)(n.p,{children:"All LVM utilities are listed in:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"man lvm\n"})}),"\n",(0,a.jsx)(n.p,{children:"PV -> VG -> LV path:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"/dev/$vg_name/$lv_name\n"})}),"\n",(0,a.jsx)(n.h2,{id:"creating-lvs",children:"Creating LVs"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Create partitions on disk drives (using ",(0,a.jsx)(n.code,{children:"fdisk /dev/sda"})," ",(0,a.jsx)(n.code,{children:"t"})," ",(0,a.jsx)(n.code,{children:"8e"})," option to change type to LVM)"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Create physical volumes from the partitions."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pvcreate /dev/sda4\npvdisplay\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Create the VG."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo vgcreate -s 16 vg /dev/sda4\nvgdisplay -v # provides vg, pv and lv\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Allocate LV from VG."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# if needed\nsudo vgextend vg /dev/sda4\nsudo lvcreate -L 50G -n mylvm vg\nlvgdisplay\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Format LV"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo mkfs -t ext4 /dev/vg/mylvm\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Mount LV (and update ",(0,a.jsx)(n.code,{children:"/etc/fstab"})," if needed)"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sudo mkdir /mylvm\nsudo mount /dev/vg/mylvm /mylvm\n\necho "/dev/vg/mylvm /mylvm ext4 defaults 1 2" >> /etc/fstab\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To remove:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo umount /mnt\nsudo lvremove /dev/vg/mylvm\n"})}),"\n",(0,a.jsx)(n.h3,{id:"resizing-lvs",children:"Resizing LVs"}),"\n",(0,a.jsx)(n.p,{children:"When expanding the size of an LV with a filesystem, we first need to expand the LV then the fs. When shriking an LV with a filesystem, we first need to shrink the fs and then the LV."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# the -r options resizes fs at the same time as the LV is changed\nsudo lvresize -r -L 20 GB /dev/vg/mylvm\n\n# or\nsudo lvreduce -L 10G /dev/$vg/$lv\n"})}),"\n",(0,a.jsx)(n.p,{children:"Reduce a VG:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pvmove /dev/sda4\nsudo vgreduce vg /dev/sda4\n"})}),"\n",(0,a.jsx)(n.h3,{id:"lvm-snapshots",children:"LVM Snapshots"}),"\n",(0,a.jsx)(n.p,{children:"Useful for backups, deploying VMs, app testings as the create an exact copy of the VG."}),"\n",(0,a.jsx)(n.p,{children:"To create a snapshot:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo lvcreate -l 128 -s -n mysnap /dev/vg/mylvm\n"})}),"\n",(0,a.jsx)(n.p,{children:"To make mount:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir /mysnap\nmount -o ro /dev/vg/mysnap /mysnap\n"})}),"\n",(0,a.jsx)(n.p,{children:"To use and remove snapshot:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo umount /mysnap\nsudo lvremove /dev/vg/mysnap\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var a=s(96540);const l={},i=a.createContext(l);function c(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);