"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[15165],{18122:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=o(74848),t=o(28453);const i={},r=void 0,c={id:"software/containerization/k8s/Security/Authorization",title:"Authorization",description:"Authorization",source:"@site/docs/software/containerization/k8s/Security/3._Authorization.md",sourceDirName:"software/containerization/k8s/Security",slug:"/software/containerization/k8s/Security/Authorization",permalink:"/docs/software/containerization/k8s/Security/Authorization",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Authentication",permalink:"/docs/software/containerization/k8s/Security/Authentication"},next:{title:"Admission_Control",permalink:"/docs/software/containerization/k8s/Security/Admission_Control"}},a={},l=[{value:"Authorization",id:"authorization",level:2},{value:"Attribute Based Access Control (ABAC)",id:"attribute-based-access-control-abac",level:3},{value:"Role Based Access Control (RBAC)",id:"role-based-access-control-rbac",level:3},{value:"Webhook",id:"webhook",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"authorization",children:"Authorization"}),"\n",(0,s.jsx)(n.p,{children:"Once a request is authenticated, it needs to be authorized to be able to proceed through the Kubernetes system and perform its intended action."}),"\n",(0,s.jsx)(n.p,{children:"There are three main authorization modes and two global Deny/Allow settings. The three main modes are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ABAC"}),"\n",(0,s.jsx)(n.li,{children:"RBAC"}),"\n",(0,s.jsx)(n.li,{children:"Webhook."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["They can be configured as ",(0,s.jsx)(n.code,{children:"kube-apiserver"})," startup options:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--authorization-mode=ABAC"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--authorization-mode=RBAC"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--authorization-mode=Webhook"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--authorization-mode=AlwaysDeny"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"--authorization-mode=AlwaysAllow"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The authorization modes implement policies to allow requests. Attributes of the requests are checked against the policies (e.g. user, group, namespace, verb)."}),"\n",(0,s.jsx)(n.h3,{id:"attribute-based-access-control-abac",children:"Attribute Based Access Control (ABAC)"}),"\n",(0,s.jsx)(n.p,{children:"It was the first authorization model in Kubernetes that allowed administrators to implement the right policies. Today, RBAC is becoming the default authorization mode."}),"\n",(0,s.jsxs)(n.p,{children:["Policies are defined in a JSON file and referenced to by a ",(0,s.jsx)(n.code,{children:"kube-apiserver"})," startup option:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"--authorization-policy-file=my_policy.json"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For example, the policy file shown below authorizes user Bob to read pods in the namespace foobar:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "apiVersion": "abac.authorization.kubernetes.io/v1beta1",\n    "kind": "Policy",\n    "spec": {\n        "user": "bob",\n        "namespace": "foobar",\n        "resource": "pods",\n        "readonly": true     \n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can check other policy examples in the ",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/abac/#examples",children:"Kubernetes Documentation"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"role-based-access-control-rbac",children:"Role Based Access Control (RBAC)"}),"\n",(0,s.jsxs)(n.p,{children:["All resources are modeled API objects in Kubernetes, from ",(0,s.jsx)(n.code,{children:"Pod"}),"s to ",(0,s.jsx)(n.code,{children:"Namespace"}),"s. They also belong to API Groups, such as ",(0,s.jsx)(n.code,{children:"core"})," and ",(0,s.jsx)(n.code,{children:"apps"}),". These resources allow operations such as Create, Read, Update, and Delete (CRUD), which we have been working with so far. Operations are called ",(0,s.jsx)(n.code,{children:"verbs"})," inside YAML files. Adding to these basic components, we will add more elements of the API, which can then be managed via RBAC."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Rules"})," are operations which can act upon an API group. ",(0,s.jsx)(n.code,{children:"Roles"})," are a group of rules which affect, or scope, a single namespace, whereas ",(0,s.jsx)(n.code,{children:"ClusterRoles"})," have a scope of the entire cluster."]}),"\n",(0,s.jsxs)(n.p,{children:["Each operation can act upon one of three subjects, which are ",(0,s.jsx)(n.code,{children:"User Accounts"})," which don't exist as API objects, ",(0,s.jsx)(n.code,{children:"Service Accounts"}),", and ",(0,s.jsx)(n.code,{children:"Groups"})," which are known as ",(0,s.jsx)(n.code,{children:"clusterrolebinding"})," when using ",(0,s.jsx)(n.code,{children:"kubectl"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"RBAC is then writing rules to allow or deny operations by users, roles or groups upon resources."}),"\n",(0,s.jsx)(n.p,{children:"While RBAC can be complex, the basic flow is to create a certificate for a user. As a user is not an API object of Kubernetes, we are requiring outside authentication, such as OpenSSL certificates. After generating the certificate against the cluster certificate authority, we can set that credential for the user using a context."}),"\n",(0,s.jsxs)(n.p,{children:["Roles can then be used to configure an association of ",(0,s.jsx)(n.code,{children:"apiGroups"}),", ",(0,s.jsx)(n.code,{children:"resources"}),", and the ",(0,s.jsx)(n.code,{children:"verbs"})," allowed to them. The user can then be bound to a role limiting what and where they can work in the cluster."]}),"\n",(0,s.jsx)(n.p,{children:"Here is a summary of the RBAC process:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Determine or create namespace"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create certificate credentials for user"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Set the credentials for the user to the namespace using a context"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a role for the expected task set"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Bind the user to the role"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Verify the user has limited access."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"webhook",children:"Webhook"}),"\n",(0,s.jsx)(n.p,{children:"A Webhook is an HTTP callback, an HTTP POST that occurs when something happens; a simple event-notification via HTTP POST. A web application implementing Webhooks will POST a message to a URL when certain things happen."}),"\n",(0,s.jsxs)(n.p,{children:["To learn more about using the Webhook mode, see the ",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/webhook/",children:"Webhook Mode section of the Kubernetes Documentation"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var s=o(96540);const t={},i=s.createContext(t);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);