"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[71250],{31068:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var s=t(74848),i=t(28453);const o={},r=void 0,c={id:"software/containerization/k8s/Scheduling/Custom_Scheduler",title:"Custom_Scheduler",description:"Custom Scheduler",source:"@site/docs/software/containerization/k8s/Scheduling/12._Custom_Scheduler.md",sourceDirName:"software/containerization/k8s/Scheduling",slug:"/software/containerization/k8s/Scheduling/Custom_Scheduler",permalink:"/docs/software/containerization/k8s/Scheduling/Custom_Scheduler",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tolerations",permalink:"/docs/software/containerization/k8s/Scheduling/Tolerations"},next:{title:"Accessing_the_API",permalink:"/docs/software/containerization/k8s/Security/Accessing_the_API"}},d={},a=[{value:"Custom Scheduler",id:"custom-scheduler",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"custom-scheduler",children:"Custom Scheduler"}),"\n",(0,s.jsxs)(n.p,{children:["If the default scheduling mechanisms (affinity, taints, policies) are not flexible enough for your needs, you can write your own scheduler. Existing scheduler code can be found in the ",(0,s.jsxs)(n.a,{href:"https://github.com/kubernetes/kubernetes/tree/master/pkg/scheduler",children:[(0,s.jsx)(n.code,{children:"Scheduler"})," repository on GitHub"]}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If a ",(0,s.jsx)(n.code,{children:"Pod"})," specification does not declare which scheduler to use, the standard scheduler is used by default. If the ",(0,s.jsx)(n.code,{children:"Pod"})," declares a scheduler, and that container is not running, the ",(0,s.jsx)(n.code,{children:"Pod"})," would remain in a ",(0,s.jsx)(n.code,{children:"Pending"})," state forever."]}),"\n",(0,s.jsxs)(n.p,{children:["The end result of the scheduling process is that a ",(0,s.jsx)(n.code,{children:"Pod"})," gets a binding that specifies which node it should run on. A binding is a Kubernetes API primitive in the ",(0,s.jsx)(n.code,{children:"api/v1"})," group. Technically, without any scheduler running, you could still schedule a ",(0,s.jsx)(n.code,{children:"Pod"})," on a node, by specifying a binding for that ",(0,s.jsx)(n.code,{children:"Pod"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"You can also run multiple schedulers simultaneously."}),"\n",(0,s.jsx)(n.p,{children:"You can view the scheduler and other information with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl get events\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);