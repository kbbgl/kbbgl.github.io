"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[95540],{65359:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var a=s(74848),t=s(28453);const c={},r=void 0,i={id:"software/containerization/k8s/APIs and Access/Namespaces",title:"Namespaces",description:"Namespaces",source:"@site/docs/software/containerization/k8s/APIs and Access/Namespaces.md",sourceDirName:"software/containerization/k8s/APIs and Access",slug:"/software/containerization/k8s/APIs and Access/Namespaces",permalink:"/docs/software/containerization/k8s/APIs and Access/Namespaces",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Annotations",permalink:"/docs/software/containerization/k8s/APIs and Access/Annotations"},next:{title:"Simple_Pod_Creation",permalink:"/docs/software/containerization/k8s/APIs and Access/Simple_Pod_Creation"}},o={},d=[{value:"Namespaces",id:"namespaces",level:2}];function l(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"namespaces",children:"Namespaces"}),"\n",(0,a.jsx)(n.p,{children:"Namespaces refer to both the Linux kernel feature and the segregation of API objects by Kubernetes."}),"\n",(0,a.jsx)(n.p,{children:"Every API call includes a namespace:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://10.128.0.3:6443/api/v1/namespaces/default/pods\n"})}),"\n",(0,a.jsx)(n.p,{children:"Namespaces are intended to isolate multuple groups and the resources they have access to work with via quotas."}),"\n",(0,a.jsx)(n.p,{children:"There are 4 namespaces when the cluster is first created:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"default"}),": Default namespace where all resources are assumed to be stored if not specified."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"kube-node-lease"}),": Where worker node lease information is kept."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"kube-public"}),": A namespace readable by all, even those not authenticated."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"kube-system"}),": Contains infrastructure pods."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To specify a resource's namespace:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# redis.yaml\napiVersion: V1\nkind: Pod\nmetadata:\n  name: redis\n  namespace: linuxcon\n...\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var a=s(96540);const t={},c=a.createContext(t);function r(e){const n=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);