"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[26997],{56965:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var s=l(74848),t=l(28453);const i={},r="Creating Shellcode",o={id:"cybersecurity/Offensive/Exploit Development/shellcode/creating_shellcode",title:"Creating Shellcode",description:"Shellcode is injected into programs that have the stack overflow vulnerability.",source:"@site/docs/cybersecurity/Offensive/Exploit Development/shellcode/creating_shellcode.md",sourceDirName:"cybersecurity/Offensive/Exploit Development/shellcode",slug:"/cybersecurity/Offensive/Exploit Development/shellcode/creating_shellcode",permalink:"/docs/cybersecurity/Offensive/Exploit Development/shellcode/creating_shellcode",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Introduction to Format String Bugs",permalink:"/docs/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/intro_format_string_bugs/"},next:{title:"stack",permalink:"/docs/cybersecurity/Offensive/Exploit Development/stack"}},c={},a=[{value:"5 Steps to Create",id:"5-steps-to-create",level:2},{value:"Gaining the Shell",id:"gaining-the-shell",level:2},{value:"Caveats",id:"caveats",level:2},{value:"<code>msfvenom</code>",id:"msfvenom",level:2},{value:"List payloads",id:"list-payloads",level:3},{value:"Generate Shellcode",id:"generate-shellcode",level:3},{value:"List of platforms:",id:"list-of-platforms",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"creating-shellcode",children:"Creating Shellcode"})}),"\n",(0,s.jsx)(n.p,{children:"Shellcode is injected into programs that have the stack overflow vulnerability."}),"\n",(0,s.jsx)(n.p,{children:"Shellcode is comprised of opcodes which construct certain system calls allowing the user to escalate access from ring 3 to ring 0 and be able to access the kernel."}),"\n",(0,s.jsx)(n.h2,{id:"5-steps-to-create",children:"5 Steps to Create"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Write high-level code."}),"\n",(0,s.jsx)(n.li,{children:"Compile and disassemble."}),"\n",(0,s.jsx)(n.li,{children:"Analyze the assembly."}),"\n",(0,s.jsx)(n.li,{children:"Clean up assembly, remove nulls."}),"\n",(0,s.jsx)(n.li,{children:"Extract commands and create shellcode."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"gaining-the-shell",children:"Gaining the Shell"}),"\n",(0,s.jsx)(n.p,{children:"There are 2 ways to create a new process for the shell in Linux:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"execve()"})," - used to create a new process and kill the other instance of it. It takes 3 arguments (pointer to ",(0,s.jsx)(n.code,{children:"sh"}),", pointer to argument array, pointer to env vars)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fork()"})," + ",(0,s.jsx)(n.code,{children:"execve"})," - create a copy of the running process."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"caveats",children:"Caveats"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Certain opcodes will terminate programs. Instructions that contain ",(0,s.jsx)(n.code,{children:"null"})," need to be rewritten:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mov ebx,0"})," => ",(0,s.jsx)(n.code,{children:"xor ebx,ebx"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mov eax,1"})," => ",(0,s.jsx)(n.code,{children:"mov al,1"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The opcodes which would terminate a program are the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"null"})," bytes (",(0,s.jsx)(n.code,{children:"0x00"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Line Feed (",(0,s.jsx)(n.code,{children:"0x0A"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Carriage Return (",(0,s.jsx)(n.code,{children:"0D"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To see the system calls of an executable, we can run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"strace /path/to/executable\n"})}),"\n",(0,s.jsx)(n.h2,{id:"msfvenom",children:(0,s.jsx)(n.code,{children:"msfvenom"})}),"\n",(0,s.jsxs)(n.p,{children:["We can use ",(0,s.jsx)(n.code,{children:"msfvenom"})," from the Metasploit toolkit to generate shellcode."]}),"\n",(0,s.jsx)(n.h3,{id:"list-payloads",children:"List payloads"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo msfvenom -l payloads | grep linux | grep bind_tcp\n"})}),"\n",(0,s.jsx)(n.h3,{id:"generate-shellcode",children:"Generate Shellcode"}),"\n",(0,s.jsx)(n.p,{children:"To generate shellcode for a remote shell to listen on port 31337 and have the payload only contain alphanumeric characters in Python for Linux:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"msfvenom -p linux/x86/shell_bind_tcp LPORT=31337 AppendExit=true --encoder x86/alpha_mixed -f python -o $OUTPUT_PATH.py\n"})}),"\n",(0,s.jsx)(n.h3,{id:"list-of-platforms",children:"List of platforms:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"msfvenom --list platforms\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>o});var s=l(96540);const t={},i=s.createContext(t);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);