"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[46465],{24838:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=n(74848),t=n(28453);const o={},i=void 0,c={id:"os/UNIX/Network/DNS/Query_Record_Types",title:"Query_Record_Types",description:"Query/Record Types",source:"@site/docs/os/UNIX/Network/DNS/3._Query_Record_Types.md",sourceDirName:"os/UNIX/Network/DNS",slug:"/os/UNIX/Network/DNS/Query_Record_Types",permalink:"/docs/os/UNIX/Network/DNS/Query_Record_Types",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Domain Name System",permalink:"/docs/os/UNIX/Network/DNS/Domain_Name_System"},next:{title:"Forward_Reverse_DNS_Queries",permalink:"/docs/os/UNIX/Network/DNS/Forward_Reverse_DNS_Queries"}},a={},d=[{value:"Query/Record Types",id:"queryrecord-types",level:2}];function l(e){const r={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"queryrecord-types",children:"Query/Record Types"}),"\n",(0,s.jsx)(r.p,{children:"Different database record types hold different information. Specifying a query type of ALL will fetch all record types."}),"\n",(0,s.jsx)(r.p,{children:"The different types are:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"A"}),", Address Mapping Records: Return 32 bit IPv4 addresses."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"AAAA"}),", IPv6 Address Records: Return 128big IPv6 address."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"CNAME"}),", Canonical Name Records: Return an alias to another name."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"MX"}),", Nail Exchanger Records: Return the message transfer agents (mail servers) for a domain."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"NS"}),", Nameserver Records: Delegate an authoritative DNS zone nameserver."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"PTR"}),", Reverse-Lookup Pointer Records: Delegate an authoritative DNS zone nameserver."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"SOA"}),", Start of Authority Records: Start of Authority for a domain (domain and zone settings)."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"TXT"}),", Text Records: Arbitrary human-readable text, or machine-readable data for specific purposes."]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["For more information on DNS and associated records see ",(0,s.jsx)(r.a,{href:"https://www.ietf.org/rfc/rfc1035.txt",children:'"Domain Names - Implementation and Specification"'})," and ",(0,s.jsx)(r.a,{href:"https://www.ietf.org/rfc/rfc1034.txt",children:'"Domain Names - Concepts and Facilities"'}),"."]})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>c});var s=n(96540);const t={},o=s.createContext(t);function i(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);