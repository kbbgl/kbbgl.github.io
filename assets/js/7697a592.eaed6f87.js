"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[49695],{35929:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var i=t(74848),r=t(28453);const o={slug:"cp-pip-requirements-from-container",title:"Copy requirements.txt from Container",authors:["kbbgl"],tags:["docker","pip","python","dependencies","cp","pipenv","containers"]},a=void 0,c={id:"software/containerization/docker/admin/copy_installation_pip_from_container",title:"Copy requirements.txt from Container",description:"Python code can have imports that do not exist in the environment (pipenv) but do exist in a Docker container. We can copy the requirements.txt file from within the Docker container and then use pip to install them.",source:"@site/docs/software/containerization/docker/admin/copy_installation_pip_from_container.md",sourceDirName:"software/containerization/docker/admin",slug:"/software/containerization/docker/admin/cp-pip-requirements-from-container",permalink:"/docs/software/containerization/docker/admin/cp-pip-requirements-from-container",draft:!1,unlisted:!1,tags:[{inline:!0,label:"docker",permalink:"/docs/tags/docker"},{inline:!0,label:"pip",permalink:"/docs/tags/pip"},{inline:!0,label:"python",permalink:"/docs/tags/python"},{inline:!0,label:"dependencies",permalink:"/docs/tags/dependencies"},{inline:!0,label:"cp",permalink:"/docs/tags/cp"},{inline:!0,label:"pipenv",permalink:"/docs/tags/pipenv"},{inline:!0,label:"containers",permalink:"/docs/tags/containers"}],version:"current",frontMatter:{slug:"cp-pip-requirements-from-container",title:"Copy requirements.txt from Container",authors:["kbbgl"],tags:["docker","pip","python","dependencies","cp","pipenv","containers"]},sidebar:"docsSidebar",previous:{title:"Get Container Resource Usage",permalink:"/docs/software/containerization/docker/admin/get-list-containers-resource-usage"},next:{title:"Get Dockerfile CMDs from Container",permalink:"/docs/software/containerization/docker/admin/get-dockerfile-cmds-container"}},s={},p=[];function d(e){const n={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Python code can have imports that do not exist in the environment (",(0,i.jsx)(n.code,{children:"pipenv"}),") but do exist in a Docker container. We can copy the ",(0,i.jsx)(n.code,{children:"requirements.txt"})," file from within the Docker container and then use ",(0,i.jsx)(n.code,{children:"pip"})," to install them."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker run -it --rm $USER/$IMAGE_NAME:1.0.0.XXXXX sh\n\ndocker cp $CONTAINER_ID:/requirements.txt ./\n\npipenv install -r requirement.txt\n\npipenv clean\n"})}),"\n",(0,i.jsx)(n.p,{children:"If using Visual Studio Code, reload window to refresh dependencies in Python interpreter."}),"\n",(0,i.jsx)(n.p,{children:"Full script to pull requirements from image:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\nimage=$(grep "dockerimage" *.yml | cut -d":" -f2,3 | tr -d \'[[:space:]]\')\n\ndocker run -it --rm $image cat requirements.txt > requirements.txt\n\npipenv clean\n\npipenv install\n'})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(96540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);