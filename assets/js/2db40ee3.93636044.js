"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[41362],{74823:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>l});var o=n(74848),c=n(28453);const i={},s="Caching Overview",t={id:"os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/Caching_Overview",title:"Caching Overview",description:"HTTP caches help reduce perceived lag, network utilization, and may improve performance of web applications. Caches can also be used as a filtering proxy, restricting access to certain sites or resources. Caches come in two flavors, forward and reverse.",source:"@site/docs/os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/1._Caching_Overview.md",sourceDirName:"os/UNIX/Network/Protocols/HTTP/I. HTTP Caching",slug:"/os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/Caching_Overview",permalink:"/docs/os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/Caching_Overview",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dynamic Host Configuration Protocol (DHCP) Server",permalink:"/docs/os/UNIX/Network/Protocols/DHCP"},next:{title:"Proxy SSL",permalink:"/docs/os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/Proxy_SSL"}},a={},l=[{value:"Forward Cache",id:"forward-cache",level:2},{value:"Reverse Cache",id:"reverse-cache",level:2}];function h(e){const r={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"caching-overview",children:"Caching Overview"})}),"\n",(0,o.jsx)(r.p,{children:"HTTP caches help reduce perceived lag, network utilization, and may improve performance of web applications. Caches can also be used as a filtering proxy, restricting access to certain sites or resources. Caches come in two flavors, forward and reverse."}),"\n",(0,o.jsx)(r.h2,{id:"forward-cache",children:"Forward Cache"}),"\n",(0,o.jsx)(r.p,{children:"A forward cache is used to speed up the HTTP access in a network. When multiple browsers request the same content from the same cache, the content may be returned from the cache instead of being requested from the original server. Forward caches include:"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Squid"}),"\n",(0,o.jsx)(r.li,{children:"Tinyproxy"}),"\n",(0,o.jsx)(r.li,{children:"Apache"}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"reverse-cache",children:"Reverse Cache"}),"\n",(0,o.jsx)(r.p,{children:"A reverse cache will speed up the perceived lag from an HTTP application server to any client. Reverse caches include:"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Squid"}),"\n",(0,o.jsx)(r.li,{children:"Nginx"}),"\n",(0,o.jsx)(r.li,{children:"Tinyproxy"}),"\n",(0,o.jsx)(r.li,{children:"Apache."}),"\n"]})]})}function d(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>t});var o=n(96540);const c={},i=o.createContext(c);function s(e){const r=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),o.createElement(i.Provider,{value:r},e.children)}}}]);