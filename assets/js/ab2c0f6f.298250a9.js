"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[30965],{82214:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=t(74848),o=t(28453);const s={},d=void 0,a={id:"software/containerization/k8s/Scheduling/Taints",title:"Taints",description:"Taints",source:"@site/docs/software/containerization/k8s/Scheduling/10._Taints.md",sourceDirName:"software/containerization/k8s/Scheduling",slug:"/software/containerization/k8s/Scheduling/Taints",permalink:"/docs/software/containerization/k8s/Scheduling/Taints",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Node_Affinity_Example",permalink:"/docs/software/containerization/k8s/Scheduling/Node_Affinity_Example"},next:{title:"Tolerations",permalink:"/docs/software/containerization/k8s/Scheduling/Tolerations"}},r={},c=[{value:"Taints",id:"taints",level:2},{value:"Ways to Handle <code>Pod</code> Scheduling",id:"ways-to-handle-pod-scheduling",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"taints",children:"Taints"}),"\n",(0,i.jsxs)(n.p,{children:["A node with a particular taint will ",(0,i.jsxs)(n.strong,{children:["repel ",(0,i.jsx)(n.code,{children:"Pod"}),"s without ",(0,i.jsx)(n.code,{children:"tolerations"})," for that ",(0,i.jsx)(n.code,{children:"taint"})]}),". A ",(0,i.jsx)(n.code,{children:"taint"})," is expressed as ",(0,i.jsx)(n.code,{children:"key=value:effect"}),". The key and the value are created by the administrator."]}),"\n",(0,i.jsxs)(n.p,{children:["The key and value used can be any legal string, and this allows flexibility to prevent ",(0,i.jsx)(n.code,{children:"Pod"}),"s from running on nodes based off of any need. If a ",(0,i.jsx)(n.code,{children:"Pod"})," does not have an existing toleration, the scheduler will not consider the tainted node."]}),"\n",(0,i.jsxs)(n.h3,{id:"ways-to-handle-pod-scheduling",children:["Ways to Handle ",(0,i.jsx)(n.code,{children:"Pod"})," Scheduling"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"NoSchedule"}),": The scheduler will not schedule a ",(0,i.jsx)(n.code,{children:"Pod"})," on this node, unless the ",(0,i.jsx)(n.code,{children:"Pod"})," has this toleration. Existing ",(0,i.jsx)(n.code,{children:"Pod"}),"s continue to run, regardless of toleration."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PreferNoSchedule"}),": The scheduler will avoid using this node, unless there are no untainted nodes for the ",(0,i.jsx)(n.code,{children:"Pod"}),"s toleration. Existing ",(0,i.jsx)(n.code,{children:"Pod"}),"s are unaffected."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"NoExecute"}),": This ",(0,i.jsx)(n.code,{children:"taint"})," will cause existing ",(0,i.jsx)(n.code,{children:"Pod"}),"s to be evacuated and no future ",(0,i.jsx)(n.code,{children:"Pod"}),"s scheduled. Should an existing Pod ",(0,i.jsx)(n.code,{children:"have"})," a toleration, it will continue to run. If the ",(0,i.jsx)(n.code,{children:"Pod"})," ",(0,i.jsx)(n.code,{children:"tolerationSeconds"})," is set, they will remain for that many seconds, then be evicted. Certain node issues will cause the ",(0,i.jsx)(n.code,{children:"kubelet"})," to add 300 second tolerations to avoid unnecessary evictions."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If a node has multiple taints, the scheduler ignores those with matching tolerations. The remaining unignored taints have their typical effect."}),"\n",(0,i.jsxs)(n.p,{children:["The use of ",(0,i.jsx)(n.code,{children:"TaintBasedEvictions"})," is still an alpha feature. The kubelet uses taints to rate-limit evictions when the node has problems."]}),"\n",(0,i.jsx)(n.p,{children:"To taint a node:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl taint nodes worker bubba=value:PreferNoSchedule\nkubectl taint nodes worker bubba=value:NoSchedule\nkubectl taint nodes worker bubba=value:NoExecute\n"})}),"\n",(0,i.jsx)(n.p,{children:"To remove a taint:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl taint nodes worker bubba-\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>a});var i=t(96540);const o={},s=i.createContext(o);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);