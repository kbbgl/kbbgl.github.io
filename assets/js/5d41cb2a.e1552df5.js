"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[96877],{78371:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>l,toc:()=>f});var i=t(74848),s=t(28453);const r={},c="Merge Conflict",l={id:"software/version_control_systems/git/Merging/merge-conflict",title:"Merge Conflict",description:"Occurs when the same files are edited in 2 different branches.",source:"@site/docs/software/version_control_systems/git/Merging/merge-conflict.md",sourceDirName:"software/version_control_systems/git/Merging",slug:"/software/version_control_systems/git/Merging/merge-conflict",permalink:"/docs/software/version_control_systems/git/Merging/merge-conflict",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Fast-Forward Merge",permalink:"/docs/software/version_control_systems/git/Merging/fast-forward"},next:{title:"Merge from master",permalink:"/docs/software/version_control_systems/git/Merging/merge-from-master"}},o={},f=[];function d(e){const n={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"merge-conflict",children:"Merge Conflict"})}),"\n",(0,i.jsxs)(n.p,{children:["Occurs when ",(0,i.jsx)(n.strong,{children:"the same files are edited in 2 different branches"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"They can only occur in 3-way merge situation."}),"\n",(0,i.jsx)(n.p,{children:"When a merge conflict occurs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'\u276f git branch --show-current\nmaster\n\n# sixth_file.txt and fifth_file.txt were modified in both master and br3\n\n\u276f git merge br-3\nAuto-merging new_files/sixth_file.txt\nCONFLICT (content): Merge conflict in new_files/sixth_file.txt\nAuto-merging new_files/fifth_file.txt\nCONFLICT (content): Merge conflict in new_files/fifth_file.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n\n\u276f git status\nOn branch master\nYou have unmerged paths.\n(fix conflicts and run "git commit")\n(use "git merge --abort" to abort the merge)\n\nUnmerged paths:\n(use "git add <file>..." to mark resolution)\n\nboth modified:   new_files/fifth_file.txt\nboth modified:   new_files/sixth_file.txt\n\n\n\u276f cat new_files/fifth_file.txt\nHello World 05\n<<<<<<< HEAD\nfile modified in master.\n=======\nthis line was changed in br-3.\n>>>>>>> br-3\n'})}),"\n",(0,i.jsx)(n.p,{children:"Listing the staging area:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"\u276f git ls-files -s\n100644 211dc43543ca6c6b9724fff9986d86da73e4bd43 0       eighth_file.txt\n100644 557db03de997c86a4a028e1ebd3a1ceb225be238 0       first_file.txt\n100644 1c227b889361ac0306a749e380b32cab1ca353ef 0       fourth_file.txt\n100644 f064900941db9f2663cc26503d18af50deda7eb7 1       new_files/fifth_file.txt\n100644 59388dde1d79d727b4127343d0e67de097a83a00 2       new_files/fifth_file.txt\n100644 058e19228f6a25cee8b6ade79325434d45e48089 3       new_files/fifth_file.txt\n100644 e1d76690d44fbf2de1a38584a247e1512ec361d1 1       new_files/sixth_file.txt\n100644 f72edbf6802ae9788296e1efa770a8057ac365fe 2       new_files/sixth_file.txt\n100644 57f032fd71af3a11f7879b2084882e102be81228 3       new_files/sixth_file.txt\n100644 3ee384936466a484e0089c82ce559a10dc9c46ea 0       second_file.txt\n100644 2ce0b4c4bd1b27caf3bde75b3885e4e8157bdeea 0       seventh_file.txt\n100644 22c0dee49b87ff7ed42c7bd37987163cbe5b0d60 0       third_file.txt\n"})}),"\n",(0,i.jsx)(n.p,{children:"The number in the third column indicates the version of the blob/file."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"0"})," means unchanged"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"1"})," means the initial/common version of the file, the file content before branching."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"2"})," means the version of the file in the receiving/master branch."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"3"})," means the version of the file in the feature branch."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'\u276f git ls-files -s | grep fifth_file.txt | cut -d" " -f2 | while read hash; do echo "===="; git cat-file -p $hash; echo "===="; done\n====\nHello World 05\n====\n====\nHello World 05\n\nfile modified in master.\n====\n====\nHello World 05\n\n\nthis line was changed in br-3.\n====\n\n\n\u276f cat new_files/fifth_file.txt\nHello World 05\n\n\n<<<<<<< HEAD\nfile modified in master.\n=======\nthis line was changed in br-3.\n>>>>>>> br-3\n'})}),"\n",(0,i.jsx)(n.p,{children:"To remove the conflicts:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Delete all lines in file that has conflict including ",(0,i.jsx)(n.code,{children:"<<<"})," and ",(0,i.jsx)(n.code,{children:">>>"})," lines."]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"git add files..."})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"git commit"})}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>l});var i=t(96540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);