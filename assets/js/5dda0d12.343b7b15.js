"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[53192],{7396:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var r=n(74848),i=n(28453);const o={},t="Process Management",c={id:"os/UNIX/Processes/Process_Management",title:"Process Management",description:"Finding processes",source:"@site/docs/os/UNIX/Processes/Process_Management.md",sourceDirName:"os/UNIX/Processes",slug:"/os/UNIX/Processes/Process_Management",permalink:"/docs/os/UNIX/Processes/Process_Management",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Processes",permalink:"/docs/os/UNIX/Processes/"},next:{title:"List All Ports Listened by Process",permalink:"/docs/os/UNIX/Processes/get_all_ports_listened_by_process"}},l={},d=[{value:"Finding processes",id:"finding-processes",level:2},{value:"Changing process priority",id:"changing-process-priority",level:2},{value:"Killing Processes",id:"killing-processes",level:2},{value:"Run process in the background",id:"run-process-in-the-background",level:2},{value:"Moving a process to the foreground",id:"moving-a-process-to-the-foreground",level:2},{value:"Scheduling processes",id:"scheduling-processes",level:2}];function a(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"process-management",children:"Process Management"})}),"\n",(0,r.jsx)(s.h2,{id:"finding-processes",children:"Finding processes"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"ps aux | grep someprocess\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"top\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Press ",(0,r.jsx)(s.code,{children:"?"})," or ",(0,r.jsx)(s.code,{children:"H"})," while running ",(0,r.jsx)(s.code,{children:"top"})," to get a list of options"]}),"\n",(0,r.jsx)(s.h2,{id:"changing-process-priority",children:"Changing process priority"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"nice"})," command is used to the prioritize the process to the kernel.\nThe values range from ",(0,r.jsx)(s.code,{children:"-19 to +19"})," where a high value is being very ",(0,r.jsx)(s.em,{children:"nice"})," => lower priority so:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-text",children:"-19 == very nice == lowest priority\n+19 == not nice  == highest priority\n"})}),"\n",(0,r.jsx)(s.p,{children:"A child process inherits the priority from the parent."}),"\n",(0,r.jsxs)(s.p,{children:["To change the priority after it was initially modified, we would use the ",(0,r.jsx)(s.code,{children:"renice"})," command:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Increase `nice` value by 10\nnice -n -10 /bin/slowprocess\n\n# Decrease value by 10\nnice -n 10 /bin/slowprocess\n\n# Change the priority of process IDs 987 and 32, \n# and all processes owned by users daemon and root, \n# to be one greater (+1, one increment "nicer") than its current value.\nrenice +1 987 -u daemon root -p 32\n'})}),"\n",(0,r.jsx)(s.p,{children:"Useful settings for priority are:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"20: the affected processes will run only when nothing else in the system needs the resources."}),"\n",(0,r.jsx)(s.li,{children:"0: the default."}),"\n",(0,r.jsx)(s.li,{children:"any negative value: will make things go very fast, at the expense of other processes."}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"killing-processes",children:"Killing Processes"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Signal Name"}),(0,r.jsx)(s.th,{children:"Number"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SIGHUP"})}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"This is known as the Hangup (HUP) signal. It stops the designated process and restarts it with the same PID."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SIGINT"})}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"This is the Interrupt (INT) signal. It is a weak kill signal that isn\u2019t guaranteed to work, but it works in most cases."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SIGQUIT"})}),(0,r.jsx)(s.td,{children:"3"}),(0,r.jsx)(s.td,{children:"This is known as the core dump . It terminates the process and saves the process information in memory, and then it saves this information in the current working directory to a file named core ."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SIGTERM"})}),(0,r.jsx)(s.td,{children:"15"}),(0,r.jsx)(s.td,{children:"This is the Termination (TERM) signal. It is the kill command\u2019s default kill signal."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"SIGKILL"})}),(0,r.jsx)(s.td,{children:"9"}),(0,r.jsxs)(s.td,{children:["This is the absolute kill signal. It forces the process to stop by sending the process\u2019s resources to a special device, ",(0,r.jsx)(s.code,{children:"/dev/null"})," ."]})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"To kill a process:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Kill specific process ID\nkill -9 6996\n\n# Kill process by name\nkillall -9 zombieprocess\n"})}),"\n",(0,r.jsx)(s.h2,{id:"run-process-in-the-background",children:"Run process in the background"}),"\n",(0,r.jsxs)(s.p,{children:["Using ",(0,r.jsx)(s.code,{children:"&"})," at the end of the command"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"aprocess 1234 &\n"})}),"\n",(0,r.jsx)(s.h2,{id:"moving-a-process-to-the-foreground",children:"Moving a process to the foreground"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"fg 1234\n"})}),"\n",(0,r.jsx)(s.h2,{id:"scheduling-processes",children:"Scheduling processes"}),"\n",(0,r.jsx)(s.p,{children:"We can use two tools:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"at"})," - a daemon process useful for one-time job to be run in the future."]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"at 7:20am \nat> /root/myscanningscript\n\nat now + 20 minutes\nat> /root/myscanningscript\n\nat 7:20pm 06/25/2019\n"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"crond"}),"- more suited for every day/week type of jobs."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>c});var r=n(96540);const i={},o=r.createContext(i);function t(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);