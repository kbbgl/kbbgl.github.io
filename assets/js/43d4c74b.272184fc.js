"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[20880],{51792:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=t(74848),r=t(28453);const o={},s="basic-file-exploit",i={permalink:"/blog/pico_2022/binary_exploitation/basic_file_exploit/README",source:"@site/blog/pico_2022/binary_exploitation/basic_file_exploit/README.md",title:"basic-file-exploit",description:"https://play.picoctf.org/events/70/challenges/challenge/252",date:"2024-09-26T20:55:31.413Z",tags:[],readingTime:2.755,hasTruncateMarker:!1,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"picoCTF 2022",permalink:"/blog/pico_2022/README"},nextItem:{title:"buffer overflow 0",permalink:"/blog/pico_2022/binary_exploitation/buffer_overflow_0/README"}},c={authorsImageUrls:[]},l=[{value:"Description",id:"description",level:2},{value:"Compile and Test",id:"compile-and-test",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://play.picoctf.org/events/70/challenges/challenge/252",children:"https://play.picoctf.org/events/70/challenges/challenge/252"})}),"\n",(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"The program provided allows you to write to a file and read what you wrote from it. Try playing around with it and see if you can break it!"}),"\n",(0,a.jsx)(n.p,{children:"Connect to the program with netcat:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nc saturn.picoctf.net 52682\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The program's source code with the flag redacted can be downloaded ",(0,a.jsx)(n.a,{href:"https://artifacts.picoctf.net/c/537/program-redacted.c",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"compile-and-test",children:"Compile and Test"}),"\n",(0,a.jsxs)(n.p,{children:["Let's download and compile the program using ",(0,a.jsx)(n.a,{href:"../../../../../c/compile_c.sh",children:(0,a.jsx)(n.code,{children:"compile.sh"})}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"wget https://artifacts.picoctf.net/c/537/program-redacted.c\n\ncompile.sh program-redacted.c\n"})}),"\n",(0,a.jsx)(n.p,{children:"Testing binary out, we can see that there's a menu where we can type a choice to (1) insert some data, (2) read some data and (3) exit the program."}),"\n",(0,a.jsx)(n.p,{children:"If we look at the program source code, we can see that the flag will be printed out to the console when the following condition is met:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep "flag" program-redacted.c -B1 | tail -2\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:"  if ((entry_number = strtol(entry, NULL, 10)) == 0) {\n    puts(flag);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["So what we need to do is make sure that the expression ",(0,a.jsx)(n.code,{children:"strtol(entry, NULL, 10)"})," is equal to 0."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"strtol"})," is a function that converts a string to a long integer value and has the following declaration:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:"long int strtol(const char *str, char **endptr, int base)\n"})}),"\n",(0,a.jsx)(n.p,{children:"The first argument is the actual string where the number can be found."}),"\n",(0,a.jsx)(n.p,{children:"The second argument is a pointer to the remaining string after the number has been extracted from the first argument."}),"\n",(0,a.jsx)(n.p,{children:"The third argument is the base (binary, octal, decimal, hexadecimal)."}),"\n",(0,a.jsxs)(n.p,{children:["Now that we understand what the ",(0,a.jsx)(n.code,{children:"strtol"})," function does, we can see that we're going to convert the ",(0,a.jsx)(n.code,{children:"entry"})," into a base 10 integer and set it to the ",(0,a.jsx)(n.code,{children:"entry_number"})," variable. The ",(0,a.jsx)(n.code,{children:"if"})," condition checks if ",(0,a.jsx)(n.code,{children:"entry_number"})," is 0."]}),"\n",(0,a.jsxs)(n.p,{children:["This essentially means that we need to feed number ",(0,a.jsx)(n.code,{children:"0"})," into the program when it's asking us for the entry number."]}),"\n",(0,a.jsx)(n.p,{children:"Trying that, we see that there's validation if we haven't yet entered any data into the program (option 1):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"./program-redacted-32\nHi, welcome to my echo chamber!\nType '1' to enter a phrase into our database\nType '2' to echo a phrase in our database\nType '3' to exit the program\n2\nNo data yet\n"})}),"\n",(0,a.jsx)(n.p,{children:"Let's try to first enter some dummy data:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"./program-redacted-32\nHi, welcome to my echo chamber!\nType '1' to enter a phrase into our database\nType '2' to echo a phrase in our database\nType '3' to exit the program\n1\nPlease enter your data:\ngive me the flag\nPlease enter the length of your data:\n1\nYour entry number is: 1\nWrite successful, would you like to do anything else?\n2\nPlease enter the entry number of your data:\n0\n[REDACTED]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Great, so we see that this works locally!"}),"\n",(0,a.jsx)(n.p,{children:"Running the same sequence of inputs on the actual CTF server, we get the actual flag:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"\u276f nc saturn.picoctf.net 52682\nHi, welcome to my echo chamber!\nType '1' to enter a phrase into our database\nType '2' to echo a phrase in our database\nType '3' to exit the program\n1\n1\nPlease enter your data:\ngive me the flag\ngive me the flag\nPlease enter the length of your data:\n1\n1\nYour entry number is: 1\nWrite successful, would you like to do anything else?\n2\n2\nPlease enter the entry number of your data:\n0\n0\npicoCTF{M4K3_5UR3_70_CH3CK_Y0UR_1NPU75_038A9E95}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(96540);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);