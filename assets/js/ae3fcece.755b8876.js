"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[75438],{59655:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var i=n(74848),o=n(28453);const t={},r="Compressing Files",c={id:"os/UNIX/Compressing",title:"Compressing Files",description:"tar",source:"@site/docs/os/UNIX/Compressing.md",sourceDirName:"os/UNIX",slug:"/os/UNIX/Compressing",permalink:"/docs/os/UNIX/Compressing",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Troubleshooting Boot Failures",permalink:"/docs/os/UNIX/Booting/troubleshooting_boot"},next:{title:"RAID",permalink:"/docs/os/UNIX/Disk/RAID"}},a={},l=[{value:"<code>tar</code>",id:"tar",level:2},{value:"Create",id:"create",level:3},{value:"List Files",id:"list-files",level:3},{value:"Concat Two Zips",id:"concat-two-zips",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"compressing-files",children:"Compressing Files"})}),"\n",(0,i.jsx)(s.h2,{id:"tar",children:(0,i.jsx)(s.code,{children:"tar"})}),"\n",(0,i.jsx)(s.h3,{id:"create",children:"Create"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"tar -czvf filename.tar.gz /path/to/dir1\n"})}),"\n",(0,i.jsx)(s.h3,{id:"list-files",children:"List Files"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"tar -tvf file.tar.gz\n"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"dd"})," command makes a bit-by-bit copy of a file, a filesystem, or even an entire hard drive. This means that even deleted files are copied"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"dd if=/dev/sdb of=/tmp/sdb_copy\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"if"})," is the input file, ",(0,i.jsx)(s.code,{children:"of"})," is the output file. Other useful arguments are ",(0,i.jsx)(s.code,{children:"bs"})," which is the block size of each copy (sector size is 4096 bytes) and ",(0,i.jsx)(s.code,{children:"conv:noerror"})," which ignores errors."]}),"\n",(0,i.jsx)(s.h2,{id:"concat-two-zips",children:"Concat Two Zips"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"zip -s 0 masked-logs-prod.zip --out full_logs.zip\n"})})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var i=n(96540);const o={},t=i.createContext(o);function r(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);