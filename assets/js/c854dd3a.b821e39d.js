"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[15805],{53530:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=r(74848),t=r(28453);const s={title:"Defining Memory"},a="Defining Memory",o={id:"software/languages/assembly/memory/defining-memory",title:"Defining Memory",description:"We can define memory in its own file which will assemble into a .bin file.",source:"@site/docs/software/languages/assembly/memory/defining-memory.md",sourceDirName:"software/languages/assembly/memory",slug:"/software/languages/assembly/memory/defining-memory",permalink:"/docs/software/languages/assembly/memory/defining-memory",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Defining Memory"},sidebar:"tutorialSidebar",previous:{title:"Data Sections",permalink:"/docs/software/languages/assembly/memory/data-sections"},next:{title:"Load Effective Address (LEA)",permalink:"/docs/software/languages/assembly/memory/load-effective-address"}},d={},c=[];function l(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"defining-memory",children:"Defining Memory"})}),"\n",(0,i.jsxs)(n.p,{children:["We can define memory in its own file which will assemble into a ",(0,i.jsx)(n.code,{children:".bin"})," file."]}),"\n",(0,i.jsx)(n.p,{children:"The syntax to define memory is as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[label]    definition type     value    \n"})}),"\n",(0,i.jsx)(n.p,{children:"Here are some examples:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"; define one byte using Data Byte definition type of value 'ab' in hex\na    db   0abh\n\n; define two bytes using Data Word definition with value 'cc99' in hex\nb    dw   0cc99h\n\n; Define a Double Word (4 bytes)\nc    dd   12345678h\n\n; Define a Quad Word (8 bytes)\nd    dq   0aabbccdd11223344h\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To define arrays, we use the ",(0,i.jsx)(n.code,{children:"X dup [i, ..]"})," instruction where ",(0,i.jsx)(n.code,{children:"X"})," is the number of duplications to generate and ",(0,i.jsx)(n.code,{children:"i"})," is the initialized value."]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"array_bytes     db 4 dup (12h)\n\narray_words     dw 5 dup (5678h)\n\narray_dwords    dw 6 dup (aabbccddh)\n\narray_qwords    dq 7 dup (1111222233334444h)\n\n; will create 20 byte array.\nrepeat_byte     db 4 dup (1,2,3,4,5)\n\n; repeat sequence of words (0006, 0007) 3 times\nrepeat_word     db 3 dup (6,7)\n\n; will repeat the dword 6 times.\nrepeat_dword2   dd 3*2 dup (0abcd1234h)\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var i=r(96540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);