"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[52929],{4227:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>i});var s=r(74848),t=r(28453);const o={},c="DNS Server",a={id:"os/UNIX/Network/DNS/dns_server_on_debian",title:"DNS Server",description:"The nameserver (DNS server) ordered list can be found here:",source:"@site/docs/os/UNIX/Network/DNS/dns_server_on_debian.md",sourceDirName:"os/UNIX/Network/DNS",slug:"/os/UNIX/Network/DNS/dns_server_on_debian",permalink:"/docs/os/UNIX/Network/DNS/dns_server_on_debian",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Change DNS Server",permalink:"/docs/os/UNIX/Network/DNS/change_DNS_server"},next:{title:"Name Resolution",permalink:"/docs/os/UNIX/Network/DNS/name_resolution"}},d={},i=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"dns-server",children:"DNS Server"})}),"\n",(0,s.jsx)(n.p,{children:"The nameserver (DNS server) ordered list can be found here:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat /etc/resolv.conf                                        16:59.14 Thu Sep 10 2020 >>>\n# Generated by NetworkManager\nnameserver 10.100.102.1\n"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["We can add nameservers that would be chosen before ",(0,s.jsx)(n.code,{children:"10.100.102.1"})," by prepending them in ",(0,s.jsx)(n.code,{children:"sbin/dhclient"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vi /etc/dhcp/dhclient.conf\n\n# prepend domain-name-servers $my_proxy_ip\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Checking the nameservers again, we see that ",(0,s.jsx)(n.code,{children:"my_proxy_ip"})," is added before ",(0,s.jsx)(n.code,{children:"10.100.102.1"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat /etc/resolv.conf                                        16:59.14 Thu Sep 10 2020 >>>\n# Generated by NetworkManager\nnameserver my_proxy_ip\nnameserver 10.100.102.1\n\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"We then need to restart the Network Manager service:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"service network-manager restart\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To disable the service (for setting up pihole) we can run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop systemd-resolved.service\nsudo systemctl disable systemd-resolved.service\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var s=r(96540);const t={},o=s.createContext(t);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);