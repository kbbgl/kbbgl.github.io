"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[55776],{13723:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=t(74848),s=t(28453);const r={slug:"unit-testing-python",title:"Unit Testing in Python",authors:["kgal-pan"],tags:["python","ut","unittesting","unittest","test"]},o=void 0,a={id:"software/languages/python/Testing/unit-test-coverage-pytest",title:"Unit Testing in Python",description:"Pytest",source:"@site/docs/software/languages/python/Testing/unit-test-coverage-pytest.md",sourceDirName:"software/languages/python/Testing",slug:"/software/languages/python/Testing/unit-testing-python",permalink:"/docs/software/languages/python/Testing/unit-testing-python",draft:!1,unlisted:!1,tags:[{inline:!0,label:"python",permalink:"/docs/tags/python"},{inline:!0,label:"ut",permalink:"/docs/tags/ut"},{inline:!0,label:"unittesting",permalink:"/docs/tags/unittesting"},{inline:!0,label:"unittest",permalink:"/docs/tags/unittest"},{inline:!0,label:"test",permalink:"/docs/tags/test"}],version:"current",frontMatter:{slug:"unit-testing-python",title:"Unit Testing in Python",authors:["kgal-pan"],tags:["python","ut","unittesting","unittest","test"]},sidebar:"tutorialSidebar",previous:{title:"Time Python Command",permalink:"/docs/software/languages/python/Testing/time_cmd"},next:{title:"Threading Basics",permalink:"/docs/software/languages/python/Threading/python-threading-basics"}},c={},l=[{value:"Pytest",id:"pytest",level:2},{value:"Run Specific Method in Module",id:"run-specific-method-in-module",level:4},{value:"Run Specific Method in Class (ignore warning)",id:"run-specific-method-in-class-ignore-warning",level:4},{value:"Ignore function from Pytest",id:"ignore-function-from-pytest",level:4},{value:"Raising Errors",id:"raising-errors",level:4},{value:"Using <code>pytest_mock</code>",id:"using-pytest_mock",level:4},{value:"Freezig Time",id:"freezig-time",level:4},{value:"Coverage",id:"coverage",level:2},{value:"Running Coverage Report",id:"running-coverage-report",level:4},{value:"Ignore function from Coverage",id:"ignore-function-from-coverage",level:4}];function d(e){const n={code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"pytest",children:"Pytest"}),"\n",(0,i.jsx)(n.h4,{id:"run-specific-method-in-module",children:"Run Specific Method in Module"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pytest -vv -s SecurityScorecard_test.py::test_get_domain_services\n"})}),"\n",(0,i.jsx)(n.h4,{id:"run-specific-method-in-class-ignore-warning",children:"Run Specific Method in Class (ignore warning)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pytest --disable-warnings -s -vv $MODULE_NAME_test.py::$CLASS_NAME::$METHOD_NAME\n"})}),"\n",(0,i.jsx)(n.h4,{id:"ignore-function-from-pytest",children:"Ignore function from Pytest"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@pytest.mark.skip(reason="no way of currently testing this")\ndef test_the_unknown():\n    ...\n'})}),"\n",(0,i.jsx)(n.h4,{id:"raising-errors",children:"Raising Errors"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"with pytest.raises(CustomException) as exc_info:\n    raises_custom_exception()\n\nexception_raised = exc_info.value\nassert SOME_STRING in str(exception_raised)\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"using-pytest_mock",children:["Using ",(0,i.jsx)(n.code,{children:"pytest_mock"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from pytest_mock import MockerFixture\n\ndef test_auth(mocker: MockerFixture):\n    pass\n"})}),"\n",(0,i.jsx)(n.h4,{id:"freezig-time",children:"Freezig Time"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from datetime import datetime\nfrom freezegun import freeze_time\n\n@freeze_time("1970-01-01 00:00:00")\ndef test_first_fetch():\n    pass\n'})}),"\n",(0,i.jsx)(n.h2,{id:"coverage",children:"Coverage"}),"\n",(0,i.jsx)(n.h4,{id:"running-coverage-report",children:"Running Coverage Report"}),"\n",(0,i.jsxs)(n.p,{children:["From within the ",(0,i.jsx)(n.code,{children:"/Packs/PACK_NAME/Integrations/INTEGRATION_NAME"})," folder:"]}),"\n",(0,i.jsxs)(n.p,{children:["Using ",(0,i.jsx)(n.code,{children:"coverage"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"coverage run -m pytest $INTEGRATION_NAME_test.py\n\ncoverage html\n\nopen htmlcov/index.html\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Using ",(0,i.jsx)(n.code,{children:"pytest-cov"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install pytest-cov\n\npytest --cov-report html --cov=$(pwd) $INTEGRATION_NAME_test.py\n\nopen htmlcov/index.html\n"})}),"\n",(0,i.jsx)(n.h4,{id:"ignore-function-from-coverage",children:"Ignore function from Coverage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def main():  # pragma: no cover\n    """\n        PARSE AND VALIDATE INTEGRATION PARAMS\n'})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);