"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[11792],{37759:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});var o=s(74848),c=s(28453);const i={},r="Squid",t={id:"os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/Squid",title:"Squid",description:"The main squid configuration file, squid.conf, can be found in the following locations:",source:"@site/docs/os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/4._Squid.md",sourceDirName:"os/UNIX/Network/Protocols/HTTP/I. HTTP Caching",slug:"/os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/Squid",permalink:"/docs/os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/Squid",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cache Hierarchy",permalink:"/docs/os/UNIX/Network/Protocols/HTTP/I. HTTP Caching/Cache_Hierarchy"},next:{title:"Apache HTTP Server",permalink:"/docs/os/UNIX/Network/Protocols/HTTP/Servers/Apache"}},a={},l=[{value:"Security Configuration",id:"security-configuration",level:2},{value:"Access Control",id:"access-control",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"squid",children:"Squid"})}),"\n",(0,o.jsx)(n.p,{children:"The main squid configuration file, squid.conf, can be found in the following locations:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"/etc/squid/squid.conf\n\n/etc/squid3/squid.conf\n"})}),"\n",(0,o.jsx)(n.p,{children:"Commonly configured options include:"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"http_port"}),": Port to listen on for incoming proxy requests."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"http_access"}),": Allow or deny access to certain HTTP requests."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"hierarchy_stoplist"}),": Set of strings which disable the cache hierarchy settings.\nSquid can also parse and check its syntax with a built-in syntax checker:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# squid -k parse\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"-k"})," switch takes the following options as well:"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"reconfigure"}),": Reload the configuration file.\n",(0,o.jsx)(n.code,{children:"shutdown"}),": Safe shutdown.\n",(0,o.jsx)(n.code,{children:"kill"}),": Hard unclean shutdown."]}),"\n",(0,o.jsx)(n.p,{children:"Please consult man squid for more options and details."}),"\n",(0,o.jsx)(n.h2,{id:"security-configuration",children:"Security Configuration"}),"\n",(0,o.jsx)(n.p,{children:"Access list begins with an aclname and acltype followed by:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"type-specific argument(s), or"}),"\n",(0,o.jsx)(n.li,{children:"a quoted filename with one item per line."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Access Control Lists (ACL) format:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'acl aclname acltype argument ...\nacl aclname acltype "file" ...\n'})}),"\n",(0,o.jsx)(n.p,{children:'To see the possible ACL types, review the "Access Controls in Squid" documentation.'}),"\n",(0,o.jsx)(n.p,{children:"To enable a parent cache server, use the following configuration option:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cache_peer parent.example.com parent 3128 3130\n"})}),"\n",(0,o.jsx)(n.p,{children:"To enable a sibling peer cache server, use the following configuration option:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cache_peer childcache.example.com sibling 3128 3130\n"})}),"\n",(0,o.jsx)(n.p,{children:"Access to the the peer cache can be controlled with the following option:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cache_peer_access <PEER_NAME> <allow|deny> <ACLNAME>\n"})}),"\n",(0,o.jsx)(n.p,{children:'For additional details, take a look at "Squid Configuration Directives".'}),"\n",(0,o.jsx)(n.h2,{id:"access-control",children:"Access Control"}),"\n",(0,o.jsx)(n.p,{children:"Access control is one of the main reason to use a proxy. The ACL system of Squid has options to control almost every aspect of an HTTP request. Access control can be restricted by time of day, by domain/URI, by user (logging into proxy), and by content. Configuration files are processed sequentially."}),"\n",(0,o.jsx)(n.p,{children:"To enable the ACL named hourlyworkers to only use the proxy during business hours, do:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"acl workinghours time MTWHF 08:00-18:00\nhttp_access allow hourlyworkers workinghours\nhttp_access deny hourlyworkers\n"})}),"\n",(0,o.jsx)(n.p,{children:"To restrict by a part of the URI, do:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"acl banned_reddit url_regex \u02c6http://.*reddit.com/.*$\nhttp_access deny banned_reddit\n"})}),"\n",(0,o.jsx)(n.p,{children:"To allow only authenticated users to use the following configuration, do:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"acl valid_users proxy_auth REQUIRED\nhttp_access allow valid_users\nhttp_access deny all\n"})}),"\n",(0,o.jsx)(n.p,{children:"When building ACLs or configuration files for Squid, remember that the first match wins. Therefore, start your ACLs with the most specific options in the beginning."})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var o=s(96540);const c={},i=o.createContext(c);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);