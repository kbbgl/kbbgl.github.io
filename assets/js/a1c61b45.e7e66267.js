"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[83166],{1051:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(74848),i=t(28453);const s={},o="Introduction to Format String Bugs",a={id:"cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/intro_format_string_bugs/README",title:"Introduction to Format String Bugs",description:"Format strings allow developers to output data in a set format.",source:"@site/docs/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/4_intro_format_string_bugs/README.md",sourceDirName:"cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/4_intro_format_string_bugs",slug:"/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/intro_format_string_bugs/",permalink:"/docs/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/intro_format_string_bugs/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Spawning a Shell",permalink:"/docs/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/spawning_shell/"},next:{title:"Creating Shellcode",permalink:"/docs/cybersecurity/Offensive/Exploit Development/shellcode/creating_shellcode"}},c={},l=[{value:"What is a Format String Bug",id:"what-is-a-format-string-bug",level:2},{value:"Format String Exploits",id:"format-string-exploits",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introduction-to-format-string-bugs",children:"Introduction to Format String Bugs"})}),"\n",(0,r.jsx)(n.p,{children:"Format strings allow developers to output data in a set format."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'double AmountInDollars;\nAmountInDollars = 25.01;\n\nprintf("$%.2f\\n", AmountInDollars);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["An example of using format strings to output a table of ASCII characters in decimal and hexadecimal representation can be found ",(0,r.jsx)(n.code,{children:"ascii.c"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",metastring:'title="ascii.c"',children:'#include <stdlib.h>\n#include <stdio.h>\n\nint main(int argc, char *argv[]) {\n\n    int c;\n\n    printf("Decimal Hex Character\\n");\n    printf("======= === =========\\n");\n\n    for(c = 0x20; c < 256; c++){\n        switch (c)\n        {\n        case 0x0a:\n        case 0x0b:\n        case 0x0c:\n        case 0x0d:\n        case 0x1b:\n            printf("%03d %02x \\n", c, c);\n            break;\n        default:\n            printf("%03d %02x %c\\n", c, c, c);\n            break;\n        }\n    }\n\n    return 1;\n\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"> gcc ascii.c -o ascii\n\n./ascii\n"})}),"\n",(0,r.jsx)(n.h2,{id:"what-is-a-format-string-bug",children:"What is a Format String Bug"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.em,{children:"format string"})," bug occurs when user-supplied data is included in the format specification string of one of the ",(0,r.jsx)(n.code,{children:"printf"})," family of functions:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"printf\nfprintf\nsprintf\nsnprintf\nvfprintf\nvprintf\nvsprintf\nvsnprintf\n"})}),"\n",(0,r.jsx)(n.p,{children:"The attacker supplies a number of format specifiers that have no corresponding arguments on the stack and values from the stack are used in their place."}),"\n",(0,r.jsx)(n.p,{children:"This can lead to sensitive information being exposed and arbitrary code execution."}),"\n",(0,r.jsxs)(n.p,{children:["A simple example of a vulnerable program can be found in ",(0,r.jsx)(n.code,{children:"fs.c"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",metastring:'title="fs.c"',children:'#include <stdio.h>\n#include <string.h>\n\nint main(int argc, char **argv){\n    \n    char buf[1024];\n    strcpy(buf, argv[1]);\n    printf(buf);\n    printf("\\n");\n\n}\n\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"> gcc -fno-stack-protector -no-pie -o fs -ggdb -m32  fs.c\n\n> ./fs $(python3 -c \"print('A' * 4 + '%x' * 4)\")\n\nAAAAffffd0bb080491b041414141\n"})}),"\n",(0,r.jsxs)(n.p,{children:["We can see that the end of the output is A ASCII code (",(0,r.jsx)(n.code,{children:"41"}),"). This means that the values printed are coming from the stack."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Make sure that ",(0,r.jsx)(n.a,{href:"https://askubuntu.com/a/318476/201134",children:"ASLR is disabled"}),"!"]}),"\n",(0,r.jsx)(n.h2,{id:"format-string-exploits",children:"Format String Exploits"}),"\n",(0,r.jsxs)(n.p,{children:["The parameters we pass to the the ",(0,r.jsx)(n.code,{children:"printf"})," family of functions are passed on the stack. When we supply too few parameters, the function will take the next values from the stack and use them instead. This allows us to print sensitive information from within the stack using the ",(0,r.jsx)(n.code,{children:"%s"})," or ",(0,r.jsx)(n.code,{children:"%x"})," specifier."]}),"\n",(0,r.jsxs)(n.p,{children:["Format String bugs can also be used to run arbitrary code using the ",(0,r.jsx)(n.code,{children:"%n"})," specifier. This same specifier also allows us to modify values in memory in order to change the behavior of the vulnerable program."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);