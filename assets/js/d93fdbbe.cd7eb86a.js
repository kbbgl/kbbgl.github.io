"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[76144],{12246:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var c=s(74848),r=s(28453);const i={},t="How to Create a Service",o={id:"os/UNIX/Booting/create_service",title:"How to Create a Service",description:"1. Create a service file and put in /etc/init.d/fake.service:",source:"@site/docs/os/UNIX/Booting/create_service.md",sourceDirName:"os/UNIX/Booting",slug:"/os/UNIX/Booting/create_service",permalink:"/docs/os/UNIX/Booting/create_service",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Boot Sequence",permalink:"/docs/os/UNIX/Booting/boot_sequence"},next:{title:"System Init",permalink:"/docs/os/UNIX/Booting/system_init"}},a={},d=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"how-to-create-a-service",children:"How to Create a Service"})}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:["Create a service file and put in ",(0,c.jsx)(n.code,{children:"/etc/init.d/fake.service"}),":"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# fake_service\n# Starts up, writes to a dummy file, and exits\n#\n# chkconfig: 35 69 31\n# description: This service doesn\'t do anything.\n# Source function library\n\n. /etc/sysconfig/fake_service\n\ncase"$1" in start) \n    \n    echo "Running fake_service in start mode..."\n    touch /var/lock/subsys/fake_service\n    echo "$0start at $(date)" >> /var/log/fake_service.log\n    \n    if[${VAR1} ="true" ]\n    then\n        echo"VAR1 set to true" >> /var/log/fake_service.log\n    fi\n    echo\n    ;;\n    stop)\n    echo "Running the fake_service script in stop mode..."\n    echo "$0stop at$(date)" >> /var/log/fake_service.log\n    if[${VAR2} ="true" ]\n    then\n        echo"VAR2 = true" >> /var/log/fake_service.logfirm -f /var/lock/subsys/fake_service\n    echo\n    ;;\n    *)\n    echo"Usage: fake_service {start | stop}"\n    exit 1\nesac\nexit 0\n'})}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:["Create a config file in ",(0,c.jsx)(n.code,{children:"/etc/sysconfig/fake.service"})," (RHEL) or ",(0,c.jsx)(n.code,{children:"/etc/default/fake.service"})," (Debian):"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:'VAR1="true"\nVAR2="true"\n'})}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"Give permission:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"sudo chmod 755 /etc/init.d/fake.service\n"})}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"Test script"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"sudo service fake_service\nsudo service fake_service start\nsudo service fake_service stop\n"})}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"Start servce whenever system starts:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"# Will generate error, next command will add it\nsudo chkconfig --list fake_service\nsudo chkconfig --add fake_service\nsudo chkconfig fake_service on\nsudo chkconfig fake_service off\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var c=s(96540);const r={},i=c.createContext(r);function t(e){const n=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),c.createElement(i.Provider,{value:n},e.children)}}}]);