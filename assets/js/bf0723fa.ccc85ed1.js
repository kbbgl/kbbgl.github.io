"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[55470],{46988:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var n=t(74848),r=t(28453);const s={},a=void 0,c={id:"software/containerization/k8s/Services/Local_Proxy_for_Development_",title:"Local_Proxy_for_Development_",description:"Local Proxy for Development",source:"@site/docs/software/containerization/k8s/Services/5._Local_Proxy_for_Development_.md",sourceDirName:"software/containerization/k8s/Services",slug:"/software/containerization/k8s/Services/Local_Proxy_for_Development_",permalink:"/docs/software/containerization/k8s/Services/Local_Proxy_for_Development_",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Services_Diagram",permalink:"/docs/software/containerization/k8s/Services/Services_Diagram"},next:{title:"6,_DNS",permalink:"/docs/software/containerization/k8s/Services/6,_DNS"}},i={},l=[{value:"Local Proxy for Development",id:"local-proxy-for-development",level:2}];function p(e){const o={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h2,{id:"local-proxy-for-development",children:"Local Proxy for Development"}),"\n",(0,n.jsxs)(o.p,{children:["When developing an application or service, one quick way to check your service is to run a local proxy with ",(0,n.jsx)(o.code,{children:"kubectl"}),". It will capture the shell, unless you place it in the background. When running, you can make calls to the Kubernetes API on localhost and also reach the ",(0,n.jsx)(o.code,{children:"ClusterIP"})," services on their API URL. The IP and port where the proxy listens can be configured with command arguments."]}),"\n",(0,n.jsx)(o.p,{children:"Run a proxy:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"$ kubectl proxy\nStarting to serve on 127.0.0.1:8001\n"})}),"\n",(0,n.jsxs)(o.p,{children:["Next, to access a ",(0,n.jsx)(o.code,{children:"ghost"})," service using the local proxy, we could use the following URL, for example, at ",(0,n.jsx)(o.a,{href:"http://localhost:8001/api/v1/namespaces/default/services/ghost",children:"http://localhost:8001/api/v1/namespaces/default/services/ghost"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["If the service port has a name, the path will be ",(0,n.jsx)(o.code,{children:"http://localhost:8001/api/v1/namespaces/default/services/ghost:<port_name>"}),"."]})]})}function d(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>a,x:()=>c});var n=t(96540);const r={},s=n.createContext(r);function a(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);