"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[68970],{35500:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var s=t(74848),r=t(28453);const a={},l="Syntax",i={id:"software/languages/erlang/syntax",title:"Syntax",description:"Erlang files use the .erl extension.",source:"@site/docs/software/languages/erlang/syntax.md",sourceDirName:"software/languages/erlang",slug:"/software/languages/erlang/syntax",permalink:"/docs/software/languages/erlang/syntax",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Analyzing Coredump with GDB",permalink:"/docs/software/languages/c/debugging/analyzing_coredump_with_gdb"},next:{title:"Channels (chan) and goroutines (Concurrency)",permalink:"/docs/software/languages/go/channels-and-routines"}},o={},d=[{value:"Variables",id:"variables",level:3},{value:"Math",id:"math",level:3},{value:"Conditionals",id:"conditionals",level:3},{value:"Strings",id:"strings",level:3},{value:"Tuples",id:"tuples",level:3},{value:"Lists",id:"lists",level:3},{value:"Type Conversions",id:"type-conversions",level:3}];function c(n){const e={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"syntax",children:"Syntax"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"Erlang"})," files use the ",(0,s.jsx)(e.code,{children:".erl"})," extension."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:'%% filename = /tmp/tut.erl\n\n-module(tut).\n\n%% The `\'/NUMBER` means that the method takes in NUMBER parameters\n-import(string, [len/1, concat/2, chr/2, substr/3, str/2, to_lower/1, to_upper/1]).\n\n%% Define functions to export\n-export([hello_world/0, add/2]).\n\n%% Function definitions\nhello_world() ->\n    io:fwrite("Hello World\\n").\n\nadd(A,B) -> \n    hello_world(),\n    A + B.\n'})}),"\n",(0,s.jsxs)(e.p,{children:["To run the file ",(0,s.jsx)(e.code,{children:"/tmp/tutorial.erl"}),", we can use the ",(0,s.jsx)(e.code,{children:"erl"})," CLI:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:'cd("/tmp/").\n\n%% Name of the file to compile\nc(tut).\n\n%% Execute method `hello_world` from `tut` module\ntut:hello_world().\nHello World\n\ntut:add(5,4).\nHello World\n9\n\n%% Print module information (method signatures, etc)\ntut:module_info().\n'})}),"\n",(0,s.jsx)(e.h3,{id:"variables",children:"Variables"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"print_one() ->\n    Num = 1,\n    Num.\n"})}),"\n",(0,s.jsxs)(e.p,{children:["An ",(0,s.jsx)(e.code,{children:"Atom"})," is a variable which is equal to it's value."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"atom_stuff() -> \n    'An Atom'.\n"})}),"\n",(0,s.jsx)(e.h3,{id:"math",children:"Math"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"do_math(A,B) -> \n    A + B,\n    A - B,\n    A * B,\n    A div B,\n    A rem B,\n    math:exp(1),\n    math:log(1),\n    math:pow(10,2),\n    math:sqrt(100),\n    random:uniform(10)\n    % sin, cos, etc\n\ncompare(A,B) -> \n    A =:= B, % returns true/false\n    A == B,\n    A /= B,\n    A > B,\n    A <= B,\n    Age = 18,\n    (Age >= 5) or (Age =< 18).\n                  \n"})}),"\n",(0,s.jsx)(e.h3,{id:"conditionals",children:"Conditionals"}),"\n",(0,s.jsx)(e.p,{children:"IF/ELSE:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"preschool() -> \n    'Go to preschool'.\n\nkindergarten() ->\n    'Go to kindergarten'.\n\ngrade_school() ->\n    'Go to grade school'.\n\nwhat_grade(X) ->\n    if X < 5 -> preschool()\n    ; X == 5 -> kindergarten()\n    ; X > 5 -> grade_shool()\n    end.\n"})}),"\n",(0,s.jsx)(e.p,{children:"CASE:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"say_hello(language) -> \n    case language of\n        french -> 'Bonjour';\n        german -> 'Guten Tag';\n        spanish -> 'Buenos dias';\n    end.\n"})}),"\n",(0,s.jsx)(e.h3,{id:"strings",children:"Strings"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:'string_stuff() -> \n    Str1 = "Random string",\n    Str2 = "Another string",\n    io:fwrite("String: ~p ~p\\n", [Str1, Str2]),\n\n    Str3 = io_lib:format("It\'s a ~s and ~s\\n", [Str1, Str2]),\n    io:fwrite(Str3),\n    \n    len(Str3),\n    Str4 = concat(Str1, Str2),\n    CharIndex = chr(Str4, $n),\n    \n    Str5 = substring(Str4, 8, 6),\n    \n    StrIndex = str(Str4, Str2),\n    \n    to_upper(Str1),\n    to_lower(Str1)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"tuples",children:"Tuples"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"tuple_stuff() -> \n    My_Data = {42, 175, 6.25},\n    \n    {A,B,C} = My_Data,\n    C,\n    \n    {D, _, _} = My_Data,\n    D,\n    \n    My_Data_2 = {height, 6.25},\n    {height, Ht} = My_Data2,\n    Ht,\n                \n"})}),"\n",(0,s.jsx)(e.h3,{id:"lists",children:"Lists"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"list_stuff() -> \n    List1 = [1,2,3],\n    List2 = [4,5,6],\n    % Adding/substracting lists\n    List3 = List1 ++ List2,\n    List4 = List3 -- List1,\n    \n    % Retrieving head and tail element from list\n    hd(List4),\n    tl(List4),\n    [Head|Tail] = List5,\n    \n    % Add value to list\n    List5 = [3|List4]\n"})}),"\n",(0,s.jsx)(e.p,{children:"Comprehensions"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"lc_stuff() -> \n    List1 = [1,2,3],\n    \n    % Multiply all values from List1 by 2 and store in List2\n    List2 = [2*N || N <- List1],\n    \n    % Even values\n    List3 = [1,2,3,4],\n    evens = [N || N <- List3, N rem 2 == 0],\n    \n    % Search a list of tuples\n    City_Weather = [{pittsburgh, 50}, {'new york', 53}, {charlotte, 68}, {miami, 78}],\n    Great_Temp = [{City, Temp} || {City, Temp} <- City_Weather, Temp >= 65]\n"})}),"\n",(0,s.jsx)(e.h3,{id:"type-conversions",children:"Type Conversions"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-erlang",children:"type_stuff() ->\n    is_atom(name),\n    is_float(3.14),\n    is_integer(10),\n    is_boolean(false),\n    is_list([1,2,3]),\n    is_tuple({height, 6.24}),\n    % Can use the following methods to perform type conversions\n    % atom_to_binary(), tuple_to_list(), etc.\n"})})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>i});var s=t(96540);const r={},a=s.createContext(r);function l(n){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);