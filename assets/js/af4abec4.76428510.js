"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[1789],{21061:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var t=s(74848),o=s(28453);const i={},a=void 0,r={id:"software/containerization/k8s/APIs and Access/Annotations",title:"Annotations",description:"Annotations",source:"@site/docs/software/containerization/k8s/APIs and Access/Annotations.md",sourceDirName:"software/containerization/k8s/APIs and Access",slug:"/software/containerization/k8s/APIs and Access/Annotations",permalink:"/docs/software/containerization/k8s/APIs and Access/Annotations",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Accessing API using curl",permalink:"/docs/software/containerization/k8s/APIs and Access/Accessing_API_using_curl"},next:{title:"Namespaces",permalink:"/docs/software/containerization/k8s/APIs and Access/Namespaces"}},c={},d=[{value:"Annotations",id:"annotations",level:2}];function l(n){const e={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"annotations",children:"Annotations"}),"\n",(0,t.jsx)(e.p,{children:"Annotations allow for metadata to be included with an object that may be helpful outside of the Kubernetes object interaction."}),"\n",(0,t.jsx)(e.p,{children:"Here are some examples of information that could be recorded in annotations:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Fields managed by a declarative configuration layer. Attaching these fields as annotations distinguishes them from default values set by clients or servers, and from auto-generated fields and fields set by auto-sizing or auto-scaling systems."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Build, release, or image information like timestamps, release IDs, git branch, PR numbers, image hashes, and registry address."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Pointers to logging, monitoring, analytics, or audit repositories."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Client library or tool information that can be used for debugging purposes: for example, name, version, and build information."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"User or tool/system provenance information, such as URLs of related objects from other ecosystem components."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Lightweight rollout tool metadata: for example, config or checkpoints."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Phone or pager numbers of persons responsible, or directory entries that specify where that information can be found, such as a team web site."}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"Directives from the end-user to the implementations to modify behavior or engage non-standard features."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["To annotate ",(0,t.jsx)(e.code,{children:"Pod"}),"s within a namespace:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'kubectl annotate pods --all description="Production Pods" -n prod\n\nkubectl annotate --overwrite pod webpod description="Old Production Pods" -n prod\n\nkubectl -n prod annotate pod webpod description-\n'})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>a,x:()=>r});var t=s(96540);const o={},i=t.createContext(o);function a(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);