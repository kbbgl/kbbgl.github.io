"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[95009],{16569:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=t(74848),s=t(28453);const o={},r="Operation Oni",c={permalink:"/blog/pico_2022/forensics/operation_oni/README",source:"@site/blog/pico_2022/forensics/operation_oni/README.md",title:"Operation Oni",description:"Description",date:"2024-09-26T20:55:31.413Z",tags:[],readingTime:1.64,hasTruncateMarker:!1,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"Information",permalink:"/blog/pico_2022/forensics/information/README"},nextItem:{title:"Operation Orchid",permalink:"/blog/pico_2022/forensics/operation_orchid/README"}},a={authorsImageUrls:[]},l=[{value:"Description",id:"description",level:2},{value:"Research",id:"research",level:2},{value:"Sources",id:"sources",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["Download ",(0,i.jsx)(n.a,{href:"https://artifacts.picoctf.net/c/373/disk.img.gz",children:"this disk image"}),", find the key and log into the remote machine."]}),"\n",(0,i.jsx)(n.p,{children:"Remote machine:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh -i key_file -p 59356 ctf-player@saturn.picoctf.net\n"})}),"\n",(0,i.jsx)(n.h2,{id:"research",children:"Research"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'file disk.img.gz\ndisk.img.gz: gzip compressed data, was "disk.img", last modified: Wed Oct  6 14:32:01 2021, from Unix, original size modulo 2^32 241172480\n\ngunzip disk.img.gz\n\n\u276f ls\ndisk.img\n\n\u276f sudo mkdir /mnt/pico\n\n\u276f sudo mount -o loop disk.img /mnt/pico\nmount: /mnt/pico: wrong fs type, bad option, bad superblock on /dev/loop21, missing codepage or helper program, or other error.\n\n\u276f file disk.img\ndisk.img: DOS/MBR boot sector; partition 1 : ID=0x83, active, start-CHS (0x0,32,33), end-CHS (0xc,223,19), startsector 2048, 204800 sectors; partition 2 : ID=0x83, start-CHS (0xc,223,20), end-CHS (0x1d,81,52), startsector 206848, 264192 sectors\n\n\u276f fdisk -l disk.img\nDisk disk.img: 230 MiB, 241172480 bytes, 471040 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x0b0051d0\n\nDevice     Boot  Start    End Sectors  Size Id Type\ndisk.img1  *      2048 206847  204800  100M 83 Linux\ndisk.img2       206848 471039  264192  129M 83 Linux\n'})}),"\n",(0,i.jsxs)(n.p,{children:["So we know that there are two partitions on this disk. Let's look in ",(0,i.jsx)(n.code,{children:"disk.img2"})," as it seems that the first disk is actually used for boot."]}),"\n",(0,i.jsx)(n.p,{children:"In order to mount the device, we need to supply the offset (5012 bytes * 206848 = 105906176):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"\u276f sudo mount -o loop,offset=$((512*206848)),sizelimit=$((512*264192)) disk.img /mnt/pico\n\u276f sudo mount -o loop,offset=$((512*2048)),sizelimit=$((512*204800)) disk.img /mnt/pico2\n"})}),"\n",(0,i.jsx)(n.p,{children:"Found the key and got access to the remote server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'\u276f sudo find ./ -type f -name "*.pub" | head -n1\n./root/.ssh/id_ed25519.pub\n\u276f ssh -i ./root/.ssh/id_ed25519 -F /dev/null -p 57884 ctf-player@saturn.picoctf.net\nssh: connect to host saturn.picoctf.net port 57884: Connection refused\n\u276f ssh -i ./root/.ssh/id_ed25519 -F /dev/null -p 56519 ctf-player@saturn.picoctf.net\nWelcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.13.0-1017-aws x86_64)\n\n\nctf-player@challenge:~$ ls\nflag.txt\nctf-player@challenge:~$ cat flag.txt \npicoCTF{k3y_5l3u7h_b5066e83}ctf-player@challenge:~$ Connection to saturn.picoctf.net closed by remote host.\nConnection to saturn.picoctf.net closed.\n'})}),"\n",(0,i.jsx)(n.h3,{id:"sources",children:"Sources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.linuxquestions.org/questions/linux-software-2/how-to-mount-dos-img-file-4175430554/",children:"https://www.linuxquestions.org/questions/linux-software-2/how-to-mount-dos-img-file-4175430554/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://forums.raspberrypi.com/viewtopic.php?t=190154",children:"https://forums.raspberrypi.com/viewtopic.php?t=190154"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);