"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[40602],{76733:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>x,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var l=t(74848),c=t(28453);const s={},i="Injectable Shellcode",o={id:"cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/creating_injectable_exit_shellcode/README",title:"Injectable Shellcode",description:"The shellcode above contains many null characters opcodes (\\x00):",source:"@site/docs/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/2_creating_injectable_exit_shellcode/README.md",sourceDirName:"cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/2_creating_injectable_exit_shellcode",slug:"/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/creating_injectable_exit_shellcode/",permalink:"/docs/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/creating_injectable_exit_shellcode/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Writing Shellcode for exit() Syscall",permalink:"/docs/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/creating_exit_shellcode/"},next:{title:"Spawning a Shell",permalink:"/docs/cybersecurity/Offensive/Exploit Development/intro_linux_x86/shellcode/spawning_shell/"}},r={},a=[];function d(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"injectable-shellcode",children:"Injectable Shellcode"})}),"\n",(0,l.jsxs)(n.p,{children:["The shellcode above contains many ",(0,l.jsx)(n.code,{children:"null"})," characters opcodes (",(0,l.jsx)(n.code,{children:"\\x00"}),"):"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:'char[] shellcode = "\\xbb\\x00\\x00\\x00\\x00"\n\t\t\t\t   "\\xb8\\x01\\x00\\x00\\x00"\n'})}),"\n",(0,l.jsx)(n.p,{children:"Using this shellcode would terminate the string sent to the input buffer of a vulnerable program and cause a failure in the exploit."}),"\n",(0,l.jsx)(n.p,{children:"To overcome this in the first instruction, we can use the"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-asm",children:"xor ebx,ebx\n"})}),"\n",(0,l.jsxs)(n.p,{children:["which would generate a 0 without a ",(0,l.jsx)(n.code,{children:"null"})," opcode."]}),"\n",(0,l.jsxs)(n.p,{children:["To remove the ",(0,l.jsx)(n.code,{children:"null"})," characters from the second instruction, we can use:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-asm",children:"xor al,1\n"})}),"\n",(0,l.jsx)(n.p,{children:"Then our updated assembly code would look like this:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"> cat exit_shellcode.asm\n\nSection .text\n\tglobal _start\n\n_start:\n\txor ebx,ebx # exit code 0\n\tmov al,1    # syscall exit is 1\n\tint 0x80    # execute syscall\n"})}),"\n",(0,l.jsx)(n.p,{children:"And the opcodes will have no more terminating strings and significantly reduced size:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"> objdump -d exit_shellcode\n\nexit_shellcode: file format elf32-i386\n\nDisassembly of section .text:\n\n08048080 <.text>:\n8048080:\t31 db\t\txor\t\t%ebx, %ebx\n8048085:\tb0 01\t\tmov\t\t$0x1, %al\n804808a:\tcd 80\t\t\t\tint\t\t$0x80\n"})})]})}function x(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var l=t(96540);const c={},s=l.createContext(c);function i(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);