"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[70191],{93714:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=o(74848),s=o(28453);const i={},r=void 0,a={id:"software/containerization/k8s/Volumes and Data/Volume_Introduction",title:"Volume_Introduction",description:"Volume Introduction",source:"@site/docs/software/containerization/k8s/Volumes and Data/Volume_Introduction.md",sourceDirName:"software/containerization/k8s/Volumes and Data",slug:"/software/containerization/k8s/Volumes and Data/Volume_Introduction",permalink:"/docs/software/containerization/k8s/Volumes and Data/Volume_Introduction",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Spec",permalink:"/docs/software/containerization/k8s/Volumes and Data/Spec"},next:{title:"Volume_Types",permalink:"/docs/software/containerization/k8s/Volumes and Data/Volume_Types"}},c={},l=[{value:"Volume Introduction",id:"volume-introduction",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"volume-introduction",children:"Volume Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Pod"})," specification can declare one or more volumes and where they are made available. Each of them requires:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A name"}),"\n",(0,t.jsx)(n.li,{children:"A type"}),"\n",(0,t.jsx)(n.li,{children:"A mountpoint"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The same volume can be made available to all containers in a ",(0,t.jsx)(n.code,{children:"Pod"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["A particular access mode is part of a ",(0,t.jsx)(n.code,{children:"Pod"})," request. The 3 access modes are:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ReadWriteOnce"}),": allows ",(0,t.jsx)(n.code,{children:"rw"})," by a single node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ReadOnlyMany"}),": allows ",(0,t.jsx)(n.code,{children:"r"})," by multiple nodes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ReadWriteMany"}),": ",(0,t.jsx)(n.code,{children:"rw"})," by multiple nodes."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When a volume is requested. a local ",(0,t.jsx)(n.code,{children:"kubelet"})," uses the ",(0,t.jsx)(n.code,{children:"kubelet_pods.go"})," script to map the raw devices, determine and make the mount point for the container and create a symlink on the host node fs to associate storage to the container. The API server makes a request for the storage to the ",(0,t.jsx)(n.code,{children:"StorageClass"})," plugin."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var t=o(96540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);