"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[14987],{63425:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=t(74848),o=t(28453);const r={},i="Domain Name System",a={id:"os/UNIX/Network/Concepts/Domain_Name_System",title:"Domain Name System",description:"The Domain Name System (DNS) is a distributed, hierarchical database for converting DNS names into IP addresses. The key-value store can be used for more than just IP address information. The DNS protocol runs in two different modes:",source:"@site/docs/os/UNIX/Network/Concepts/2._Domain_Name_System.md",sourceDirName:"os/UNIX/Network/Concepts",slug:"/os/UNIX/Network/Concepts/Domain_Name_System",permalink:"/docs/os/UNIX/Network/Concepts/Domain_Name_System",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Open Systems Interconnections (OSI) Model",permalink:"/docs/os/UNIX/Network/Concepts/OSI_Model"},next:{title:"Layer 2 Configuration",permalink:"/docs/os/UNIX/Network/Configuration/Layer_2_Configuration"}},c={},d=[{value:"Tools",id:"tools",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"domain-name-system",children:"Domain Name System"})}),"\n",(0,s.jsx)(n.p,{children:"The Domain Name System (DNS) is a distributed, hierarchical database for converting DNS names into IP addresses. The key-value store can be used for more than just IP address information. The DNS protocol runs in two different modes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Recursive with caching mode."}),"\n",(0,s.jsx)(n.li,{children:"Authoritative mode."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"When a network node makes a DNS query, it most often makes that query against a recursive, caching server. That recursive, caching server will then make a recursive query through the DNS database, until it comes to an authoritative server. The authoritative server will then send the answer for the query."}),"\n",(0,s.jsx)(n.p,{children:"The DNS database consists of a tree-like, key-value store. The database is broken into tree nodes called domains. These domains are managed as part of a zone. Zones are the area of the namespace managed by authoritative server(s)."}),"\n",(0,s.jsx)(n.h2,{id:"tools",children:"Tools"}),"\n",(0,s.jsx)(n.p,{children:"Servers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"BIND"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Clients:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"dig"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"host"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"nslookup"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"nsupdate"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(96540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);