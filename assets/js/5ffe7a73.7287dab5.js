"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[90339],{25688:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=n(74848),i=n(28453);const r={},s=void 0,a={id:"software/containerization/k8s/Scheduling/Tolerations",title:"Tolerations",description:"Tolerations",source:"@site/docs/software/containerization/k8s/Scheduling/11._Tolerations.md",sourceDirName:"software/containerization/k8s/Scheduling",slug:"/software/containerization/k8s/Scheduling/Tolerations",permalink:"/docs/software/containerization/k8s/Scheduling/Tolerations",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Taints",permalink:"/docs/software/containerization/k8s/Scheduling/Taints"},next:{title:"Custom_Scheduler",permalink:"/docs/software/containerization/k8s/Scheduling/Custom_Scheduler"}},c={},d=[{value:"Tolerations",id:"tolerations",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"tolerations",children:"Tolerations"}),"\n",(0,o.jsxs)(t.p,{children:["Setting tolerations on a node are used to schedule ",(0,o.jsx)(t.code,{children:"Pods"})," on tainted nodes. This provides an easy way to avoid ",(0,o.jsx)(t.code,{children:"Pod"}),"s using the node. Only those with a particular toleration would be scheduled."]}),"\n",(0,o.jsxs)(t.p,{children:["An operator can be included in a ",(0,o.jsx)(t.code,{children:"Pod"})," specification, defaulting to ",(0,o.jsx)(t.code,{children:"Equal"})," if not declared. The use of the operator ",(0,o.jsx)(t.code,{children:"Equal"})," requires a value to match. The ",(0,o.jsx)(t.code,{children:"Exists"})," operator should not be specified. If an empty key uses the ",(0,o.jsx)(t.code,{children:"Exists"})," operator, it will tolerate every taint. If there is no effect, but a key and operator are declared, all effects are matched with the declared key."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:'tolerations:\n- key: "server"\n  operator: "Equal"\n  value: "ap-east"\n  effect: "NoExecute"\n  tolerationSeconds: 3600\n'})}),"\n",(0,o.jsxs)(t.p,{children:["In the above example, the Pod will remain on the server with a key of ",(0,o.jsx)(t.code,{children:"server"})," and a value of ",(0,o.jsx)(t.code,{children:"ap-east"})," for 3600 seconds after the node has been tainted with ",(0,o.jsx)(t.code,{children:"NoExecute"}),". When the time runs out, the Pod will be evicted."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(96540);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);