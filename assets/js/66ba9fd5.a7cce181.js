"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[61792],{68769:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var t=s(74848),c=s(28453);const r={},i=void 0,o={id:"software/containerization/k8s/APIs and Access/API_Resources",title:"API_Resources",description:"Managing API resources with kubectl",source:"@site/docs/software/containerization/k8s/APIs and Access/API_Resources.md",sourceDirName:"software/containerization/k8s/APIs and Access",slug:"/software/containerization/k8s/APIs and Access/API_Resources",permalink:"/docs/software/containerization/k8s/APIs and Access/API_Resources",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"API_Access",permalink:"/docs/software/containerization/k8s/APIs and Access/API_Access"},next:{title:"Accessing_API_using_Proxy",permalink:"/docs/software/containerization/k8s/APIs and Access/Accessing_API_using_Proxy"}},a={},u=[{value:"Managing API resources with <code>kubectl</code>",id:"managing-api-resources-with-kubectl",level:2},{value:"Configuring TLS Access",id:"configuring-tls-access",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:"managing-api-resources-with-kubectl",children:["Managing API resources with ",(0,t.jsx)(n.code,{children:"kubectl"})]}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes exposes resources via RESTful API calls."}),"\n",(0,t.jsxs)(n.p,{children:["We can see the API call using ",(0,t.jsx)(n.code,{children:"curl"})," by setting highest verbosity:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'kubectl --v=10 get pods firstpod | grep curl\n\n\ncurl -k -v -XGET  -H "User-Agent: kubectl/v1.20.2 (linux/arm64) kubernetes/faecb19" -H "Accept: application/json;as=Table;v=v1;g=meta.k8s.io,application/json;as=Table;v=v1beta1;g=meta.k8s.io,application/json" -H "Authorization: Bearer <masked>" \'https://10.100.102.95:16443/api/v1/namespaces/test/pods/firstpod\'\n'})}),"\n",(0,t.jsxs)(n.p,{children:["We can see the server information is stored in ",(0,t.jsx)(n.code,{children:"/home/student/.kube/config"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl --v=10 config view\n\nI0124 19:26:56.264075 3256697 loader.go:379] Config loaded from file:  /home/ubuntu/.kube/config\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1 # instructs `kube-apiserver` which API version to use to retrieve this resource, e.g https://host:16443/api/${apiVersion}/namespace...\nclusters:\n- cluster:\n    certificate-authority-data: DATA+OMITTED # passed to authenticate `curl`, `kubectl` requests\n    server: https://10.100.102.95:16443\n  name: microk8s-cluster\ncontexts: # setting used to configure different clusters/namespaces\n- context:\n    cluster: microk8s-cluster\n    namespace: test\n    user: admin\n  name: microk8s\ncurrent-context: microk8s # current used context \nkind: Config\npreferences: {}\nusers:\n- name: admin\n  user:\n    token: REDACTED\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configuring-tls-access",children:"Configuring TLS Access"}),"\n",(0,t.jsxs)(n.p,{children:["To set up access to the cluster resources with ",(0,t.jsx)(n.code,{children:"curl"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# get kubernetes server\nk8s_server=$(kubectl config view | grep server | cut -d":" -f2,3,4 | tr -d [:blank:])\n\nexport client=$(grep client-cert ~/.kube/config | cut -d" " -f 6)\nexport key=$(grep client-key-data ~/.kube/config | cut -d" " -f 6)\nexport auth=$(grep certificate-authority-data ~/.kube/config | cut -d" " -f 6)\n# encode keys for use with `curl`\necho  $client | base64 -d - > client.pem\necho $key | base64 -d - > ./client-key.pem\necho $auth | base64 -d -> ./ca.pem\n\n# find server ifno\nkubectl config view | grep https | cut -d":" -f2,3,4\n\n# get all Pods status in JSON from API\ncurl --cert ./client.pem --key ./client-key.pem --cacert ./ca.pem $k8s_server/api/v1/pods\n\n# create a Pod from a file\ncurl --cert ./client.pem --key ./client-key.pem --cacert ./ca.pem \n-X POST -H "Content-Type: application/json" -d@pod.yaml $k8s_server/api/v1/namespaces/default/pods\n'})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(96540);const c={},r=t.createContext(c);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);