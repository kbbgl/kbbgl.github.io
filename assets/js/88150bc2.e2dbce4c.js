"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[86980],{78034:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=t(74848),a=t(28453);const s={slug:"python-threading-basics",title:"Threading Basics",authors:["kbbgl"],tags:["python","threading","multithread"]},o=void 0,i={id:"software/languages/python/Threading/Basics",title:"Threading Basics",description:"Threading Basics",source:"@site/docs/software/languages/python/Threading/Basics.md",sourceDirName:"software/languages/python/Threading",slug:"/software/languages/python/Threading/python-threading-basics",permalink:"/docs/software/languages/python/Threading/python-threading-basics",draft:!1,unlisted:!1,tags:[{inline:!0,label:"python",permalink:"/docs/tags/python"},{inline:!0,label:"threading",permalink:"/docs/tags/threading"},{inline:!0,label:"multithread",permalink:"/docs/tags/multithread"}],version:"current",frontMatter:{slug:"python-threading-basics",title:"Threading Basics",authors:["kbbgl"],tags:["python","threading","multithread"]},sidebar:"tutorialSidebar",previous:{title:"Unit Testing in Python",permalink:"/docs/software/languages/python/Testing/unit-testing-python"},next:{title:"Exception Prettifying",permalink:"/docs/software/languages/python/Tools/Exception_Prettifying"}},h={},c=[{value:"Threading Basics",id:"threading-basics",level:2},{value:"Thread Pool",id:"thread-pool",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"threading-basics",children:"Threading Basics"}),"\n",(0,r.jsxs)(n.p,{children:["CPUs have X amount of cores. This means that at any given time, the machine can perform ",(0,r.jsx)(n.strong,{children:"X amount of operations in parallel"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Threads refer to the highest level of code executed by a processor, so with many threads, your CPU can handle several tasks at the same time. All CPUs have active threads, and every process performed on your computer has at least a single thread."}),"\n",(0,r.jsxs)(n.p,{children:["The number of threads you have depends on the number of cores in your CPU. ",(0,r.jsx)(n.strong,{children:"Each CPU core can have two threads"}),". So a processor with two cores will have four threads. A processor with eight cores will have 16 threads."]}),"\n",(0,r.jsx)(n.p,{children:"Running the following program will create 2 threads:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import threading\n# for python2 use 'import _thread'\n\n\nimport time\n\ndef func(y):\n    print('ran')\n    time.sleep(y)\n    print(\"done\")\n    \nx = threading.Thread(target=func, args=(4,))\nx.start()\n\n# Get number of active threads, 2 in this case\n# 1 thread for running the actual script.\n# 1 thread for running `x`.1\nprint(threading.activeCount())\n\n# Thread syncronization\n# Don't move to next command until x thread finishes execution\nx.join()\n\nprint(\"Done\")\n"})}),"\n",(0,r.jsx)(n.h2,{id:"thread-pool",children:"Thread Pool"}),"\n",(0,r.jsxs)(n.p,{children:["See example ",(0,r.jsx)(n.a,{href:"https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example",children:"here"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from concurrent.futures import ThreadPoolExecutor\n\nwith ThreadPoolExecutor as executor:\n    results = [executor.submit(some_function, some_function_arg) for _ in range(NUMBER_OF_THREADS)]\n\n    for f in concurrent.futures.as_completed(results):\n        print(f.result())\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(96540);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);