"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[49178],{12676:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(74848),s=t(28453);const i={},o="Interfaces",a={id:"software/languages/go/interfaces",title:"Interfaces",description:"englishBot and spanishBot both implement the getGreeting method so according to bot interface, they are both of considered interfaces.",source:"@site/docs/software/languages/go/interfaces.md",sourceDirName:"software/languages/go",slug:"/software/languages/go/interfaces",permalink:"/docs/software/languages/go/interfaces",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Go Versions and Environment",permalink:"/docs/software/languages/go/go-vc-env"},next:{title:"Maps",permalink:"/docs/software/languages/go/maps"}},c={},d=[{value:"<code>Reader</code> Interface and <code>io.Copy</code>",id:"reader-interface-and-iocopy",level:3}];function l(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"interfaces",children:"Interfaces"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"englishBot"})," and ",(0,r.jsx)(n.code,{children:"spanishBot"})," both implement the ",(0,r.jsx)(n.code,{children:"getGreeting"})," method so according to ",(0,r.jsx)(n.code,{children:"bot interface"}),", they are both of considered ",(0,r.jsx)(n.code,{children:"interface"}),"s."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\nimport "fmt"\n\n// Declare interface \ntype bot interface {\n  getGreeting() string\n}\n\ntype spanishBot struct{}\ntype englishBot struct{}\n\nfunc main() {\n  eb := englishBot{}\n  sb := spanishBot{}\n  \n  printGreeting(eb)\n  printGreeting(sb)\n}\n\n\n// Declare that function uses interface\nfunc printGreeting(b bot) {\n  fmt.Println(b.getGreeting())\n}\n\nfunc (englishBot) getGreeting() string {\n  return "Hi there!"\n}\n\nfunc (spanishBot) getGreeting() string {\n  return "Hola!"\n}\n\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Interfaces are not generic types."}),"\n",(0,r.jsxs)(n.li,{children:["Interfaces are implicit (no need to ",(0,r.jsx)(n.code,{children:"implements"})," a certain type to the interface type)"]}),"\n",(0,r.jsx)(n.li,{children:"Are a contract to help us manage types."}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"reader-interface-and-iocopy",children:[(0,r.jsx)(n.code,{children:"Reader"})," Interface and ",(0,r.jsx)(n.code,{children:"io.Copy"})]}),"\n",(0,r.jsxs)(n.p,{children:["Very useful interface is the ",(0,r.jsx)(n.code,{children:"Reader"})," which takes in any source of information (i.e. HTTP response body, text/image file on disk, user input) and outputs a byteslice (",(0,r.jsx)(n.code,{children:"[]byte"}),")."]}),"\n",(0,r.jsx)(n.p,{children:"To read data from an HTTP source:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'resp, err := http.Get("https://httpbin.org/anything")\nif err != nil {\n  print(err)\n}\n\n// resp.Body implements the `Reader` interface\n// os.Stdout implments the `Wrtier` interface\nio.Copy(os.Stdout, resp.Body)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);