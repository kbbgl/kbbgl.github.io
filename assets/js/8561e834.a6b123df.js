"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[89675],{10979:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=o(74848),a=o(28453);const i={slug:"quay-io-tutorial",title:"quay.io Tutorial",authors:["kbbgl"],tags:["docker","registry","images"]},r=void 0,s={id:"software/containerization/docker/registry/quay.io_tutorial",title:"quay.io Tutorial",description:"Log in:",source:"@site/docs/software/containerization/docker/registry/quay.io_tutorial.md",sourceDirName:"software/containerization/docker/registry",slug:"/software/containerization/docker/registry/quay-io-tutorial",permalink:"/docs/software/containerization/docker/registry/quay-io-tutorial",draft:!1,unlisted:!1,tags:[{inline:!0,label:"docker",permalink:"/docs/tags/docker"},{inline:!0,label:"registry",permalink:"/docs/tags/registry"},{inline:!0,label:"images",permalink:"/docs/tags/images"}],version:"current",frontMatter:{slug:"quay-io-tutorial",title:"quay.io Tutorial",authors:["kbbgl"],tags:["docker","registry","images"]},sidebar:"docsSidebar",previous:{title:"Use Host Network",permalink:"/docs/software/containerization/docker/network/set-host-net"},next:{title:"Container Memory",permalink:"/docs/software/containerization/docker/resources/container-mem"}},c={},l=[{value:"Log in:",id:"log-in",level:3},{value:"Create container:",id:"create-container",level:3},{value:"List container to get container id:",id:"list-container-to-get-container-id",level:3},{value:"Create new image",id:"create-new-image",level:3},{value:"Push the image to Quay",id:"push-the-image-to-quay",level:3}];function d(e){const t={code:"code",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"log-in",children:"Log in:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"sudo docker login quay.io\nUsername: me\nPassword: T*********0!\n"})}),"\n",(0,n.jsx)(t.h3,{id:"create-container",children:"Create container:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"sudo docker run busybox echo \"fun\"\n\nUnable to find image 'busybox:latest' locally\nlatest: Pulling from library/busybox\n9c075fe2c773: Pulling fs layer\n9c075fe2c773: Download complete\n9c075fe2c773: Pull complete\nDigest: sha256:c3dbcbbf6261c620d133312aee9e858b45e1b686efbcead7b34d9aae58a37378\nStatus: Downloaded newer image for busybox:latest\n"})}),"\n",(0,n.jsx)(t.h3,{id:"list-container-to-get-container-id",children:"List container to get container id:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'sudo docker ps -l\n\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES\n5fad7d83f69a        busybox             "echo fun"          7 seconds ago       Exited (0) 6 seconds ago                       nervous_nobel\n'})}),"\n",(0,n.jsx)(t.h3,{id:"create-new-image",children:"Create new image"}),"\n",(0,n.jsx)(t.p,{children:"Once a container has terminated in Docker, the next step is to commit the container to an image, and then tag that image with a relevant name so it can be saved to a repository."}),"\n",(0,n.jsx)(t.p,{children:"Docker lets us do this in one step with the commit command. To do so, we run the docker commit with the container ID from the previous step and tag it to be a repository under quay.io."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"sudo docker commit 5fad7d83f69a quay.io/kobbigal/custom_repos\n"})}),"\n",(0,n.jsx)(t.h3,{id:"push-the-image-to-quay",children:"Push the image to Quay"}),"\n",(0,n.jsx)(t.p,{children:"Now that we've tagged our image with a repository name, we can push the repository to Quay Container Registry :"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"sudo docker push quay.io/kobbigal/custom_repos\n\nThe push refers to a repository [quay.io/kobbigal/custom_repos] (len: 1)\nSending image list\nPushing repository quay.io/kobbigal/custom_repos (1 tags)\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>s});var n=o(96540);const a={},i=n.createContext(a);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);