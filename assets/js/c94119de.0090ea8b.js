"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[89337],{57846:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var s=n(74848),t=n(28453);const c={},i=void 0,o={id:"software/containerization/k8s/Architecture/Kubernetes_Architecture",title:"Kubernetes_Architecture",description:"Kubernetes Architecture",source:"@site/docs/software/containerization/k8s/Architecture/Kubernetes_Architecture.md",sourceDirName:"software/containerization/k8s/Architecture",slug:"/software/containerization/k8s/Architecture/Kubernetes_Architecture",permalink:"/docs/software/containerization/k8s/Architecture/Kubernetes_Architecture",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Controllers",permalink:"/docs/software/containerization/k8s/Architecture/Controllers"},next:{title:"Network",permalink:"/docs/software/containerization/k8s/Architecture/Network"}},d={},l=[{value:"Kubernetes Architecture",id:"kubernetes-architecture",level:2},{value:"Example, request to create a <code>Pod</code>",id:"example-request-to-create-a-pod",level:3}];function a(e){const r={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"kubernetes-architecture",children:"Kubernetes Architecture"}),"\n",(0,s.jsx)(r.p,{children:"Kubernetes main components:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Master/worker nodes"}),"\n",(0,s.jsx)(r.li,{children:"Controllers"}),"\n",(0,s.jsx)(r.li,{children:"Services"}),"\n",(0,s.jsx)(r.li,{children:"Pods of containers"}),"\n",(0,s.jsx)(r.li,{children:"Namespaces and quotas"}),"\n",(0,s.jsx)(r.li,{children:"Network and policies"}),"\n",(0,s.jsx)(r.li,{children:"Storage"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"A Kubernetes cluster is composed of a master node and a set of worker nodes. The cluster is all driven via API calls to controllers (interior/exterior traffic)."}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{src:"https://d36ai2hkxl16us.cloudfront.net/course-uploads/e0df7fbf-a057-42af-8a1f-590912be5460/ww1wo482ah07-Kubernetes_Architecture2.png",alt:"k8s-architecture"})}),"\n",(0,s.jsxs)(r.h3,{id:"example-request-to-create-a-pod",children:["Example, request to create a ",(0,s.jsx)(r.code,{children:"Pod"})]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["User request to create a new ",(0,s.jsx)(r.code,{children:"Pod"})," received by ",(0,s.jsx)(r.code,{children:"kube-apiserver"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"kube-apiserver"})," queries ",(0,s.jsx)(r.code,{children:"etcd"})," for number of current ",(0,s.jsx)(r.code,{children:"Pod"}),"s."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"etcd"})," responds to ",(0,s.jsx)(r.code,{children:"kube-apiserver"})," with number of current ",(0,s.jsx)(r.code,{children:"Pod"}),"s."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"kube-apiserver"})," sends request to ",(0,s.jsx)(r.code,{children:"kube-controller-manager"})," to create a new ",(0,s.jsx)(r.code,{children:"Pod"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"kube-controller-manager"})," compares current and desired states and responds to ",(0,s.jsx)(r.code,{children:"kube-apiserver"})," with need to spawn a new ",(0,s.jsx)(r.code,{children:"Pod"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"kube-apiserver"})," sends request to ",(0,s.jsx)(r.code,{children:"kube-scheduler"})," to schedule a new ",(0,s.jsx)(r.code,{children:"Pod"}),". ",(0,s.jsx)(r.code,{children:"kube-scheduler"})," responds to ",(0,s.jsx)(r.code,{children:"kube-apiserver"})," with specific worker node where the ",(0,s.jsx)(r.code,{children:"Pod"})," needs to be scheduled."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"kube-apiserver"})," sends request to ",(0,s.jsx)(r.code,{children:"kubelet"})," on Worker Node and to ",(0,s.jsx)(r.code,{children:"kube-proxy"})," to change network configuration/routing (",(0,s.jsx)(r.code,{children:"iptables"}),", ",(0,s.jsx)(r.code,{children:"ipvs"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"kubelet"})," communicates with ",(0,s.jsx)(r.code,{children:"container engine"})," which communicates with the containers. A ",(0,s.jsx)(r.code,{children:"Service"})," will expose the containers externally."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"kubelet"})," and ",(0,s.jsx)(r.code,{children:"kube-proxy"})," respond to ",(0,s.jsx)(r.code,{children:"kube-apiserver"})," with changes made and current state."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var s=n(96540);const t={},c=s.createContext(t);function i(e){const r=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(c.Provider,{value:r},e.children)}}}]);