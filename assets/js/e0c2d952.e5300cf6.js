"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[60351],{12456:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});var s=a(74848),l=a(28453);const i={title:"Ansible Cheat Sheet"},o=void 0,t={id:"software/languages/ansible/ansible_cheat_sheet",title:"Ansible Cheat Sheet",description:"ansible relevant files",source:"@site/docs/software/languages/ansible/ansible_cheat_sheet.md",sourceDirName:"software/languages/ansible",slug:"/software/languages/ansible/ansible_cheat_sheet",permalink:"/docs/software/languages/ansible/ansible_cheat_sheet",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Ansible Cheat Sheet"},sidebar:"tutorialSidebar",previous:{title:"Get Status",permalink:"/docs/software/infrastructure/zookeeper/zk-status"},next:{title:"The Assembler",permalink:"/docs/software/languages/assembly/assemblers"}},r={},c=[{value:"<code>ansible</code> relevant files",id:"ansible-relevant-files",level:3},{value:"Commands",id:"commands",level:3},{value:"Ping",id:"ping",level:4},{value:"Run specific command",id:"run-specific-command",level:4},{value:"Run a Playbook",id:"run-a-playbook",level:3},{value:"Run a Playbook with a variable",id:"run-a-playbook-with-a-variable",level:3},{value:"Playbook",id:"playbook",level:3}];function d(e){const n={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h3,{id:"ansible-relevant-files",children:[(0,s.jsx)(n.code,{children:"ansible"})," relevant files"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/etc/ansible/hosts"})," - the list of remote servers that we'll manage."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"We can configure hosts and credentials:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"[my_group]\n10.50.20.21\n10.50.20.22\n\n[my_group:vars]\nansible_user=$myuser\nansible_password=$mypassword\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/etc/ansible/ansible.cfg"})," - ",(0,s.jsx)(n.code,{children:"ansible"})," configuration."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"commands",children:"Commands"}),"\n",(0,s.jsx)(n.h4,{id:"ping",children:"Ping"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ansible my_group -m ping\n"})}),"\n",(0,s.jsx)(n.h4,{id:"run-specific-command",children:"Run specific command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'ansible my_group -a "cat /etc/os-release"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"run-a-playbook",children:"Run a Playbook"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ansible-playbook my_playbook.yaml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"run-a-playbook-with-a-variable",children:"Run a Playbook with a variable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'ansible-playbook my_playbook.yaml -e "package=nano"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"playbook",children:"Playbook"}),"\n",(0,s.jsx)(n.p,{children:"Playbooks contains Plays which contain Tasks."}),"\n",(0,s.jsxs)(n.p,{children:["Playbooks are written in",(0,s.jsx)(n.code,{children:"YAML"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"A playbook example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"--- \n  - name: check_nano # Start of Play\n    hosts: my_group\n    tasks: \n      - name: ensure nano is there # Start of task\n        apt: # module\n          name: nano\n          state: latest\n"})}),"\n",(0,s.jsx)(n.p,{children:"A playbook with variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'--- \n  - name: check_nano \n    hosts: my_group\n    vars:\n      package: nano\n    tasks: \n      - name: ensure {{ package }} is there \n        apt: \n          name: "{{ package }}"\n          state: latest\n'})}),"\n",(0,s.jsx)(n.p,{children:"We can run this playbook with a variable as an argument:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'ansible-playbook my_playbook.yml -e "package=httpd"\n'})}),"\n",(0,s.jsx)(n.p,{children:"A Playbook with a loop:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'--- \n  - name: check_nano\n    hosts: my_group\n    vars:\n      packages:\n        - nano\n        - vi\n    tasks: \n      - name: install packages\n        apt: \n          name: "{{ item }}"\n          state: installed\n        loop: "{{ packages }}" # loop\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>t});var s=a(96540);const l={},i=s.createContext(l);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);