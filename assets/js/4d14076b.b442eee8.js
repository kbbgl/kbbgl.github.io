"use strict";(self.webpackChunkkgkb=self.webpackChunkkgkb||[]).push([[72091],{19844:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=n(74848),r=n(28453);const o={},i=void 0,c={id:"software/containerization/k8s/Logging and Troubleshooting/Cluster_Start_Sequence",title:"Cluster_Start_Sequence",description:"Cluster Start Sequence",source:"@site/docs/software/containerization/k8s/Logging and Troubleshooting/1._Cluster_Start_Sequence.md",sourceDirName:"software/containerization/k8s/Logging and Troubleshooting",slug:"/software/containerization/k8s/Logging and Troubleshooting/Cluster_Start_Sequence",permalink:"/docs/software/containerization/k8s/Logging and Troubleshooting/Cluster_Start_Sequence",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"docsSidebar",previous:{title:"upgrade_cluster",permalink:"/docs/software/containerization/k8s/Installation and Configuration/upgrade_cluster"},next:{title:"krew",permalink:"/docs/software/containerization/k8s/Logging and Troubleshooting/krew"}},a={},l=[{value:"Cluster Start Sequence",id:"cluster-start-sequence",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"cluster-start-sequence",children:"Cluster Start Sequence"}),"\n",(0,s.jsxs)(t.p,{children:["The cluster startup sequence begins with ",(0,s.jsx)(t.code,{children:"systemd"})," if you built the cluster using ",(0,s.jsx)(t.code,{children:"kubeadm"}),". Other tools may leverage a different method. Use:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"systemctl status kubelet.service\n"})}),"\n",(0,s.jsxs)(t.p,{children:["to see the current state and configuration files used to run the ",(0,s.jsx)(t.code,{children:"kubelet"})," binary."]}),"\n",(0,s.jsxs)(t.p,{children:["Uses ",(0,s.jsx)(t.code,{children:"/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"})]}),"\n",(0,s.jsxs)(t.p,{children:["Inside of the ",(0,s.jsx)(t.code,{children:"config.yaml"})," file you will find several settings for the binary, including the ",(0,s.jsx)(t.code,{children:"staticPodPath"})," which indicates the directory where ",(0,s.jsx)(t.code,{children:"kubelet"})," will read every ",(0,s.jsx)(t.code,{children:"yaml"})," file and start every pod. If you put a ",(0,s.jsx)(t.code,{children:"yaml"})," file in this directory, it is a way to troubleshoot the scheduler, as the pod is created with any requests to the scheduler."]}),"\n",(0,s.jsxs)(t.p,{children:["Uses ",(0,s.jsx)(t.code,{children:"/var/lib/kubelet/config.yaml"})," configuration file\n",(0,s.jsx)(t.code,{children:"staticPodPath"})," is set to ",(0,s.jsx)(t.code,{children:"/etc/kubernetes/manifests/"}),"\nThe four default yaml files will start the base pods necessary to run the cluster:"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"kubelet"})," creates all pods from ",(0,s.jsx)(t.code,{children:"*.yaml"})," in directory: ",(0,s.jsx)(t.code,{children:"kube-apiserver"}),", ",(0,s.jsx)(t.code,{children:"etcd"}),", ",(0,s.jsx)(t.code,{children:"kube-controller-manager"}),", ",(0,s.jsx)(t.code,{children:"kube-scheduler"}),".\nOnce the watch loops and controllers from ",(0,s.jsx)(t.code,{children:"kube-controller-manager"})," run using ",(0,s.jsx)(t.code,{children:"etcd"})," data, the rest of the configured objects will be created."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(96540);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);